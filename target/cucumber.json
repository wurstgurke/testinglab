[
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1041"
      }
    ],
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3550367200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 7,
        "name": "Check menu entries that are visible as standard user",
        "description": "",
        "id": "[qa]-account:-menüzeile;check-menu-entries-that-are-visible-as-standard-user",
        "after": [
          {
            "result": {
              "duration": 72078000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10963542000,
              "status": "passed"
            },
            "line": 8,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 85400,
              "status": "passed"
            },
            "line": 9,
            "name": "I look at the menu entries",
            "match": {
              "location": "MenuSteps.i_look_at_the_menu_entries()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 770052700,
              "error_message": "java.lang.AssertionError: TestB4U User is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.menu.MenuSteps.all_the_menu_entries_looked_for_are_being_displayed(MenuSteps.java:38)\r\n\tat ✽.Then all the menu entries looked for are being displayed(accountMenu.feature:10)\r\n",
              "status": "failed"
            },
            "line": 10,
            "name": "all the menu entries looked for are being displayed",
            "match": {
              "location": "MenuSteps.all_the_menu_entries_looked_for_are_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Dashboard",
                  "navigationView.Dashboard"
                ],
                "line": 11
              },
              {
                "cells": [
                  "Adressen",
                  "navigationView.addresslist.Adressen"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Kontakte",
                  "navigationView.Kontakte"
                ],
                "line": 13
              },
              {
                "cells": [
                  "E-Mail",
                  "navigationView.E-Mail"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Bewerbungen",
                  "navigationView.Bewerbungen"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Aufgaben",
                  "navigationView.Aufgaben"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Ausschreibungen",
                  "navigationView.Ausschreibungen"
                ],
                "line": 17
              },
              {
                "comments": [
                  {
                    "line": 18,
                    "value": "#      | LogOn           | navigationView.LogOn                |"
                  }
                ],
                "cells": [
                  "TestB4U User",
                  "topBannerView.loggedInPerson"
                ],
                "line": 19
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 6,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3784598900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 22,
        "name": "Check menu entries that are not visible as standard user",
        "description": "",
        "id": "[qa]-account:-menüzeile;check-menu-entries-that-are-not-visible-as-standard-user",
        "after": [
          {
            "result": {
              "duration": 122136900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13973221700,
              "status": "passed"
            },
            "line": 23,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 75300,
              "status": "passed"
            },
            "line": 24,
            "name": "I look at the menu entries",
            "match": {
              "location": "MenuSteps.i_look_at_the_menu_entries()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1113756400,
              "status": "passed"
            },
            "line": 25,
            "name": "all the menu entries looked for are not being displayed",
            "match": {
              "location": "MenuSteps.all_the_menu_entries_looked_for_are_not_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Administration",
                  "navigationView.Administration"
                ],
                "line": 26
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 21,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17928385100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 29,
        "name": "Check menu entries that are visible as administrator",
        "description": "",
        "id": "[qa]-account:-menüzeile;check-menu-entries-that-are-visible-as-administrator",
        "after": [
          {
            "result": {
              "duration": 78983400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11242508000,
              "status": "passed"
            },
            "line": 30,
            "name": "I have logged into my account as admin user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_admin()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24000,
              "status": "passed"
            },
            "line": 31,
            "name": "I look at the menu entries",
            "match": {
              "location": "MenuSteps.i_look_at_the_menu_entries()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 842425600,
              "error_message": "java.lang.AssertionError: TestB4U Admin is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.menu.MenuSteps.all_the_menu_entries_looked_for_are_being_displayed(MenuSteps.java:38)\r\n\tat ✽.Then all the menu entries looked for are being displayed(accountMenu.feature:32)\r\n",
              "status": "failed"
            },
            "line": 32,
            "name": "all the menu entries looked for are being displayed",
            "match": {
              "location": "MenuSteps.all_the_menu_entries_looked_for_are_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Dashboard",
                  "navigationView.Dashboard"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Adressen",
                  "navigationView.addresslist.Adressen"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Kontakte",
                  "navigationView.Kontakte"
                ],
                "line": 35
              },
              {
                "cells": [
                  "Administration",
                  "navigationView.Administration"
                ],
                "line": 36
              },
              {
                "cells": [
                  "E-Mail",
                  "navigationView.E-Mail"
                ],
                "line": 37
              },
              {
                "cells": [
                  "Bewerbungen",
                  "navigationView.Bewerbungen"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Aufgaben",
                  "navigationView.Aufgaben"
                ],
                "line": 39
              },
              {
                "cells": [
                  "Ausschreibungen",
                  "navigationView.Ausschreibungen"
                ],
                "line": 40
              },
              {
                "comments": [
                  {
                    "line": 41,
                    "value": "#      | LogOn           | navigationView.LogOn                |"
                  }
                ],
                "cells": [
                  "TestB4U Admin",
                  "topBannerView.loggedInPerson"
                ],
                "line": 42
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 28,
            "name": "@ugly"
          }
        ]
      }
    ],
    "name": "[QA] Account: Menüzeile",
    "description": "Als B4U-Nutzer möchte ich in meinem B4U-Account eine Menüzeile sehen, damit ich einfacher navigieren kann",
    "id": "[qa]-account:-menüzeile",
    "keyword": "Feature",
    "uri": "accountMenu.feature"
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1043"
      }
    ],
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3988857200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 8,
        "name": "Check menu entries addresses",
        "description": "",
        "id": "[qa]-account:-menüpunkt-adressen;check-menu-entries-addresses",
        "after": [
          {
            "result": {
              "duration": 69770700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12916082600,
              "status": "passed"
            },
            "line": 9,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 468346800,
              "status": "passed"
            },
            "line": 10,
            "name": "I look at the menu entry \"navigationView.addresslist.Adressen\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.addresslist.Adressen",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1405959800,
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"id\",\"selector\":\"navigationView.Adressen.Profil importieren\"}\n  (Session info: chrome\u003d72.0.3626.81)\n  (Driver info: chromedriver\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926),platform\u003dLinux 4.9.125-linuxkit x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 1.09 seconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.0.1\u0027, revision: \u00271969d75\u0027, time: \u00272016-10-18 09:49:13 -0700\u0027\nSystem info: host: \u0027DESKTOP-IN4UB21\u0027, ip: \u002710.0.75.1\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_201\u0027\nDriver info: org.openqa.selenium.remote.RemoteWebDriver\nCapabilities [{mobileEmulationEnabled\u003dfalse, timeouts\u003d{implicit\u003d0, pageLoad\u003d300000, script\u003d30000}, hasTouchScreen\u003dfalse, platform\u003dLINUX, acceptSslCerts\u003dfalse, goog:chromeOptions\u003d{debuggerAddress\u003dlocalhost:44899}, acceptInsecureCerts\u003dfalse, webStorageEnabled\u003dtrue, browserName\u003dchrome, takesScreenshot\u003dtrue, javascriptEnabled\u003dtrue, setWindowRect\u003dtrue, unexpectedAlertBehaviour\u003dignore, applicationCacheEnabled\u003dfalse, rotatable\u003dfalse, networkConnectionEnabled\u003dfalse, chrome\u003d{chromedriverVersion\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926), userDataDir\u003d/tmp/.org.chromium.Chromium.I0cUFv}, takesHeapSnapshot\u003dtrue, pageLoadStrategy\u003dnormal, strictFileInteractability\u003dfalse, databaseEnabled\u003dfalse, handlesAlerts\u003dtrue, version\u003d72.0.3626.81, browserConnectionEnabled\u003dfalse, proxy\u003d{}, nativeEvents\u003dtrue, webdriver.remote.sessionid\u003df107d96fe096bebb1f69e12df8afeff9, locationContextEnabled\u003dtrue, cssSelectorsEnabled\u003dtrue}]\nSession ID: f107d96fe096bebb1f69e12df8afeff9\n*** Element info: {Using\u003did, value\u003dnavigationView.Adressen.Profil importieren}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:216)\r\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:168)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:635)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:417)\r\n\tat org.openqa.selenium.By$ById.findElement(By.java:218)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)\r\n\tat de.neusta.b4u.steps.menu.MenuSteps.all_the_onmouse_over_entries_looked_for_are_being_displayed(MenuSteps.java:66)\r\n\tat ✽.Then all the onmouse over entries looked for are being displayed(accountMenuAddresses.feature:11)\r\n",
              "status": "failed"
            },
            "line": 11,
            "name": "all the onmouse over entries looked for are being displayed",
            "match": {
              "location": "MenuSteps.all_the_onmouse_over_entries_looked_for_are_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Person Alle",
                  "navigationView.Adressen.Person Alle"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Firma Alle",
                  "navigationView.Adressen.Firma Alle"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Person Neu",
                  "navigationView.Adressen.Person Neu"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Firma Neu",
                  "navigationView.Adressen.Firma Neu"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Profil importieren",
                  "navigationView.Adressen.Profil importieren"
                ],
                "line": 16
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 7,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3553599600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 26,
        "name": "Check menu entries addresses goals",
        "description": "",
        "id": "[qa]-account:-menüpunkt-adressen;check-menu-entries-addresses-goals;;2",
        "after": [
          {
            "result": {
              "duration": 177020500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13800014600,
              "status": "passed"
            },
            "line": 20,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 935187100,
              "status": "passed"
            },
            "line": 21,
            "name": "I look at the menu entry \"navigationView.addresslist.Adressen\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.addresslist.Adressen",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2119344700,
              "status": "passed"
            },
            "line": 22,
            "name": "I click on the menu entry \"navigationView.Adressen.Person Alle\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Adressen.Person Alle",
                  "offset": 27
                }
              ],
              "location": "MenuSteps.i_click_on_the_menu_entry(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 104815100,
              "status": "passed"
            },
            "line": 23,
            "name": "the target page is being displayed \"/addresslist/person\"",
            "match": {
              "arguments": [
                {
                  "val": "/addresslist/person",
                  "offset": 36
                }
              ],
              "location": "MenuSteps.the_target_page_is_being_displayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 18,
            "name": "@ugly"
          },
          {
            "line": 2,
            "name": "@focus"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15376478400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 27,
        "name": "Check menu entries addresses goals",
        "description": "",
        "id": "[qa]-account:-menüpunkt-adressen;check-menu-entries-addresses-goals;;3",
        "after": [
          {
            "result": {
              "duration": 69899100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 12679425500,
              "status": "passed"
            },
            "line": 20,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 458566800,
              "status": "passed"
            },
            "line": 21,
            "name": "I look at the menu entry \"navigationView.addresslist.Adressen\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.addresslist.Adressen",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1485232800,
              "status": "passed"
            },
            "line": 22,
            "name": "I click on the menu entry \"navigationView.Adressen.Firma Alle\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Adressen.Firma Alle",
                  "offset": 27
                }
              ],
              "location": "MenuSteps.i_click_on_the_menu_entry(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31058600,
              "status": "passed"
            },
            "line": 23,
            "name": "the target page is being displayed \"/addresslist/company\"",
            "match": {
              "arguments": [
                {
                  "val": "/addresslist/company",
                  "offset": 36
                }
              ],
              "location": "MenuSteps.the_target_page_is_being_displayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 18,
            "name": "@ugly"
          },
          {
            "line": 2,
            "name": "@focus"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3851079000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 28,
        "name": "Check menu entries addresses goals",
        "description": "",
        "id": "[qa]-account:-menüpunkt-adressen;check-menu-entries-addresses-goals;;4",
        "after": [
          {
            "result": {
              "duration": 124466000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13320000300,
              "status": "passed"
            },
            "line": 20,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 505596500,
              "status": "passed"
            },
            "line": 21,
            "name": "I look at the menu entry \"navigationView.addresslist.Adressen\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.addresslist.Adressen",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3044236100,
              "status": "passed"
            },
            "line": 22,
            "name": "I click on the menu entry \"navigationView.Adressen.Person Neu\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Adressen.Person Neu",
                  "offset": 27
                }
              ],
              "location": "MenuSteps.i_click_on_the_menu_entry(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 100024600,
              "status": "passed"
            },
            "line": 23,
            "name": "the target page is being displayed \"/person/create\"",
            "match": {
              "arguments": [
                {
                  "val": "/person/create",
                  "offset": 36
                }
              ],
              "location": "MenuSteps.the_target_page_is_being_displayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 18,
            "name": "@ugly"
          },
          {
            "line": 2,
            "name": "@focus"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16308623500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 29,
        "name": "Check menu entries addresses goals",
        "description": "",
        "id": "[qa]-account:-menüpunkt-adressen;check-menu-entries-addresses-goals;;5",
        "after": [
          {
            "result": {
              "duration": 72303600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11329620800,
              "status": "passed"
            },
            "line": 20,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 463978700,
              "status": "passed"
            },
            "line": 21,
            "name": "I look at the menu entry \"navigationView.addresslist.Adressen\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.addresslist.Adressen",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1311244700,
              "status": "passed"
            },
            "line": 22,
            "name": "I click on the menu entry \"navigationView.Adressen.Firma Neu\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Adressen.Firma Neu",
                  "offset": 27
                }
              ],
              "location": "MenuSteps.i_click_on_the_menu_entry(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40801300,
              "status": "passed"
            },
            "line": 23,
            "name": "the target page is being displayed \"/company/create\"",
            "match": {
              "arguments": [
                {
                  "val": "/company/create",
                  "offset": 36
                }
              ],
              "location": "MenuSteps.the_target_page_is_being_displayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 18,
            "name": "@ugly"
          },
          {
            "line": 2,
            "name": "@focus"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3477022500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 30,
        "name": "Check menu entries addresses goals",
        "description": "",
        "id": "[qa]-account:-menüpunkt-adressen;check-menu-entries-addresses-goals;;6",
        "after": [
          {
            "result": {
              "duration": 122883300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13037564300,
              "status": "passed"
            },
            "line": 20,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 604721500,
              "status": "passed"
            },
            "line": 21,
            "name": "I look at the menu entry \"navigationView.addresslist.Adressen\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.addresslist.Adressen",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1024753900,
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"id\",\"selector\":\"navigationView.Adressen.Profil importieren\"}\n  (Session info: chrome\u003d72.0.3626.81)\n  (Driver info: chromedriver\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926),platform\u003dLinux 4.9.125-linuxkit x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 1.03 seconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.0.1\u0027, revision: \u00271969d75\u0027, time: \u00272016-10-18 09:49:13 -0700\u0027\nSystem info: host: \u0027DESKTOP-IN4UB21\u0027, ip: \u002710.0.75.1\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_201\u0027\nDriver info: org.openqa.selenium.remote.RemoteWebDriver\nCapabilities [{mobileEmulationEnabled\u003dfalse, timeouts\u003d{implicit\u003d0, pageLoad\u003d300000, script\u003d30000}, hasTouchScreen\u003dfalse, platform\u003dLINUX, acceptSslCerts\u003dfalse, goog:chromeOptions\u003d{debuggerAddress\u003dlocalhost:45495}, acceptInsecureCerts\u003dfalse, webStorageEnabled\u003dtrue, browserName\u003dchrome, takesScreenshot\u003dtrue, javascriptEnabled\u003dtrue, setWindowRect\u003dtrue, unexpectedAlertBehaviour\u003dignore, applicationCacheEnabled\u003dfalse, rotatable\u003dfalse, networkConnectionEnabled\u003dfalse, chrome\u003d{chromedriverVersion\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926), userDataDir\u003d/tmp/.org.chromium.Chromium.29kGnu}, takesHeapSnapshot\u003dtrue, pageLoadStrategy\u003dnormal, strictFileInteractability\u003dfalse, databaseEnabled\u003dfalse, handlesAlerts\u003dtrue, version\u003d72.0.3626.81, browserConnectionEnabled\u003dfalse, proxy\u003d{}, nativeEvents\u003dtrue, webdriver.remote.sessionid\u003d64b9d6d3cb93c802afea9d85dcd3eca0, locationContextEnabled\u003dtrue, cssSelectorsEnabled\u003dtrue}]\nSession ID: 64b9d6d3cb93c802afea9d85dcd3eca0\n*** Element info: {Using\u003did, value\u003dnavigationView.Adressen.Profil importieren}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:216)\r\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:168)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:635)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:417)\r\n\tat org.openqa.selenium.By$ById.findElement(By.java:218)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)\r\n\tat de.neusta.b4u.steps.menu.MenuSteps.i_click_on_the_menu_entry(MenuSteps.java:52)\r\n\tat ✽.And I click on the menu entry \"navigationView.Adressen.Profil importieren\"(accountMenuAddresses.feature:22)\r\n",
              "status": "failed"
            },
            "line": 22,
            "name": "I click on the menu entry \"navigationView.Adressen.Profil importieren\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Adressen.Profil importieren",
                  "offset": 27
                }
              ],
              "location": "MenuSteps.i_click_on_the_menu_entry(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "the target page is being displayed \"/profile/create\"",
            "match": {
              "arguments": [
                {
                  "val": "/profile/create",
                  "offset": 36
                }
              ],
              "location": "MenuSteps.the_target_page_is_being_displayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 18,
            "name": "@ugly"
          },
          {
            "line": 2,
            "name": "@focus"
          }
        ]
      }
    ],
    "name": "[QA] Account: Menüpunkt Adressen",
    "description": "Als B4U-Nutzer möchte ich unter dem Menüpunkt \"Adressen\" weitere Menü-Unterpunkte sehen,\r\ndamit ich die verschiedenen Adresssparten genauer auswählen kann",
    "id": "[qa]-account:-menüpunkt-adressen",
    "keyword": "Feature",
    "uri": "accountMenuAddresses.feature",
    "tags": [
      {
        "line": 2,
        "name": "@focus"
      }
    ]
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1053"
      }
    ],
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 15897960100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 7,
        "name": "Check elements addresses menu company all",
        "description": "",
        "id": "[qa]-adressen:-firma-alle;check-elements-addresses-menu-company-all",
        "after": [
          {
            "result": {
              "duration": 65293700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12131398600,
              "status": "passed"
            },
            "line": 8,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 739003800,
              "status": "passed"
            },
            "line": 9,
            "name": "I am on the company address list page",
            "match": {
              "location": "AddressListCompanySteps.i_am_on_the_company_address_list_page()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1019023800,
              "error_message": "java.lang.AssertionError: companyAddressTableView.nameOrId is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.BaseSteps.all_the_elements_looked_for_are_being_displayed(BaseSteps.java:66)\r\n\tat ✽.Then all the elements looked for are being displayed(accountMenuAddressesCompanyAll.feature:10)\r\n",
              "status": "failed"
            },
            "line": 10,
            "name": "all the elements looked for are being displayed",
            "match": {
              "location": "BaseSteps.all_the_elements_looked_for_are_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Name",
                  "companyAddressTableView.nameOrId"
                ],
                "line": 11
              },
              {
                "cells": [
                  "Tel.Nr.",
                  "companyAddressTableView.phone"
                ],
                "line": 12
              },
              {
                "cells": [
                  "PLZ",
                  "companyAddressTableView.zipCode"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Stadt",
                  "companyAddressTableView.city"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Straße",
                  "companyAddressTableView.street"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Kontakttyp",
                  "companyAddressTableView.contactTypes"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Kernkompetenzen",
                  "companyAddressTableView.skill"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Suchen 1",
                  "companyAddressTableView.search1"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Suchen 2",
                  "companyAddressTableView.search2"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Neu anlegen",
                  "companyAddressTableView.create"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Filter zurücksetzen",
                  "companyAddressTableView.search.clearFilter"
                ],
                "line": 21
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 6,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3958785900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 24,
        "name": "Check dropdown entries addresses menu company all",
        "description": "",
        "id": "[qa]-adressen:-firma-alle;check-dropdown-entries-addresses-menu-company-all",
        "after": [
          {
            "result": {
              "duration": 184990100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12308535400,
              "status": "passed"
            },
            "line": 25,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1081490600,
              "status": "passed"
            },
            "line": 26,
            "name": "I am on the company address list page",
            "match": {
              "location": "AddressListCompanySteps.i_am_on_the_company_address_list_page()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1027943700,
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"id\",\"selector\":\"companyAddressTableView.contactTypes\"}\n  (Session info: chrome\u003d72.0.3626.81)\n  (Driver info: chromedriver\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926),platform\u003dLinux 4.9.125-linuxkit x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 1.03 seconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.0.1\u0027, revision: \u00271969d75\u0027, time: \u00272016-10-18 09:49:13 -0700\u0027\nSystem info: host: \u0027DESKTOP-IN4UB21\u0027, ip: \u002710.0.75.1\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_201\u0027\nDriver info: org.openqa.selenium.remote.RemoteWebDriver\nCapabilities [{mobileEmulationEnabled\u003dfalse, timeouts\u003d{implicit\u003d0, pageLoad\u003d300000, script\u003d30000}, hasTouchScreen\u003dfalse, platform\u003dLINUX, acceptSslCerts\u003dfalse, goog:chromeOptions\u003d{debuggerAddress\u003dlocalhost:35511}, acceptInsecureCerts\u003dfalse, webStorageEnabled\u003dtrue, browserName\u003dchrome, takesScreenshot\u003dtrue, javascriptEnabled\u003dtrue, setWindowRect\u003dtrue, unexpectedAlertBehaviour\u003dignore, applicationCacheEnabled\u003dfalse, rotatable\u003dfalse, networkConnectionEnabled\u003dfalse, chrome\u003d{chromedriverVersion\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926), userDataDir\u003d/tmp/.org.chromium.Chromium.k3CfcY}, takesHeapSnapshot\u003dtrue, pageLoadStrategy\u003dnormal, strictFileInteractability\u003dfalse, databaseEnabled\u003dfalse, handlesAlerts\u003dtrue, version\u003d72.0.3626.81, browserConnectionEnabled\u003dfalse, proxy\u003d{}, nativeEvents\u003dtrue, webdriver.remote.sessionid\u003d6dcf75fc8a1eae216bb9aa8d4455e009, locationContextEnabled\u003dtrue, cssSelectorsEnabled\u003dtrue}]\nSession ID: 6dcf75fc8a1eae216bb9aa8d4455e009\n*** Element info: {Using\u003did, value\u003dcompanyAddressTableView.contactTypes}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:216)\r\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:168)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:635)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:417)\r\n\tat org.openqa.selenium.By$ById.findElement(By.java:218)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)\r\n\tat de.neusta.b4u.steps.BaseSteps.the_dropdown_menu_contains_the_following_items(BaseSteps.java:72)\r\n\tat ✽.Then the dropdown menu \"companyAddressTableView.contactTypes\" contains the following items(accountMenuAddressesCompanyAll.feature:27)\r\n",
              "status": "failed"
            },
            "line": 27,
            "name": "the dropdown menu \"companyAddressTableView.contactTypes\" contains the following items",
            "match": {
              "arguments": [
                {
                  "val": "companyAddressTableView.contactTypes",
                  "offset": 19
                }
              ],
              "location": "BaseSteps.the_dropdown_menu_contains_the_following_items(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "- alle -"
                ],
                "line": 28
              },
              {
                "cells": [
                  "Kunde"
                ],
                "line": 29
              },
              {
                "cells": [
                  "Freiberufler/in"
                ],
                "line": 30
              },
              {
                "cells": [
                  "Partner"
                ],
                "line": 31
              },
              {
                "cells": [
                  "Lieferant"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Interessent"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Kontakt"
                ],
                "line": 34
              },
              {
                "cells": [
                  "team neusta"
                ],
                "line": 35
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 23,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3820550500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 37,
        "name": "Check if it is possible to navigate the create company page",
        "description": "",
        "id": "[qa]-adressen:-firma-alle;check-if-it-is-possible-to-navigate-the-create-company-page",
        "after": [
          {
            "result": {
              "duration": 131712200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12781188600,
              "status": "passed"
            },
            "line": 38,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 817039700,
              "status": "passed"
            },
            "line": 39,
            "name": "I am on the company address list page",
            "match": {
              "location": "AddressListCompanySteps.i_am_on_the_company_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25655500,
              "error_message": "java.lang.AssertionError: Company list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressListCompanySteps.i_want_to_create_a_new_company(AddressListCompanySteps.java:87)\r\n\tat ✽.When I want to create a new company(accountMenuAddressesCompanyAll.feature:40)\r\n",
              "status": "failed"
            },
            "line": 40,
            "name": "I want to create a new company",
            "match": {
              "location": "AddressListCompanySteps.i_want_to_create_a_new_company()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "the create company page is being displayed",
            "match": {
              "location": "AddressCreateCompanySteps.the_create_company_page_is_being_displayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13830836900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 43,
        "name": "Check if it is possible to clear the search filter",
        "description": "",
        "id": "[qa]-adressen:-firma-alle;check-if-it-is-possible-to-clear-the-search-filter",
        "after": [
          {
            "result": {
              "duration": 120206800,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12469548400,
              "status": "passed"
            },
            "line": 44,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 669563100,
              "status": "passed"
            },
            "line": 45,
            "name": "I am on the company address list page",
            "match": {
              "location": "AddressListCompanySteps.i_am_on_the_company_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16563700,
              "error_message": "java.lang.AssertionError: Company list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressListCompanySteps.i_provide_the_following_data_to_the_company_search_filter(AddressListCompanySteps.java:30)\r\n\tat ✽.And I provide the following data to the company search filter(accountMenuAddressesCompanyAll.feature:46)\r\n",
              "status": "failed"
            },
            "line": 46,
            "name": "I provide the following data to the company search filter",
            "match": {
              "location": "AddressListCompanySteps.i_provide_the_following_data_to_the_company_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "nameorid",
                  "Mustercorp"
                ],
                "line": 47
              },
              {
                "cells": [
                  "phone",
                  "012345678"
                ],
                "line": 48
              },
              {
                "cells": [
                  "zipcode",
                  "31337"
                ],
                "line": 49
              },
              {
                "cells": [
                  "city",
                  "Musterstadt"
                ],
                "line": 50
              },
              {
                "cells": [
                  "street",
                  "Musterstraße"
                ],
                "line": 51
              },
              {
                "cells": [
                  "skill",
                  "Musterskill"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 53,
            "name": "I clear the company search filter",
            "match": {
              "location": "AddressListCompanySteps.i_clear_the_company_search_filter()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "the company search filter is empty",
            "match": {
              "location": "AddressListCompanySteps.the_company_search_filter_is_empty()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3356572300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 56,
        "name": "Check if the search results match the search filter criteria",
        "description": "",
        "id": "[qa]-adressen:-firma-alle;check-if-the-search-results-match-the-search-filter-criteria",
        "after": [
          {
            "result": {
              "duration": 187832200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12706737600,
              "status": "passed"
            },
            "line": 57,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 818739300,
              "status": "passed"
            },
            "line": 58,
            "name": "I am on the company address list page",
            "match": {
              "location": "AddressListCompanySteps.i_am_on_the_company_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19110600,
              "error_message": "java.lang.AssertionError: Company list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressListCompanySteps.i_provide_the_following_data_to_the_company_search_filter(AddressListCompanySteps.java:30)\r\n\tat ✽.And I provide the following data to the company search filter(accountMenuAddressesCompanyAll.feature:59)\r\n",
              "status": "failed"
            },
            "line": 59,
            "name": "I provide the following data to the company search filter",
            "match": {
              "location": "AddressListCompanySteps.i_provide_the_following_data_to_the_company_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "nameorid",
                  "Fr. Lürssen Werft GmbH \u0026 Co. KG"
                ],
                "line": 60
              },
              {
                "cells": [
                  "phone",
                  "+49 421-6604-0"
                ],
                "line": 61
              },
              {
                "cells": [
                  "zipcode",
                  "28759"
                ],
                "line": 62
              },
              {
                "cells": [
                  "city",
                  "Bremen"
                ],
                "line": 63
              },
              {
                "cells": [
                  "street",
                  "Zum alten Speicher 11"
                ],
                "line": 64
              },
              {
                "cells": [
                  "forperson",
                  "Thorsten Prüser"
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 66,
            "name": "I list the company search results",
            "match": {
              "location": "AddressListCompanySteps.i_list_the_company_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 67,
            "name": "the company search results should only contain",
            "match": {
              "location": "AddressListCompanySteps.the_company_search_results_should_contain(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "(13182)",
                  "Fr. Lürssen Werft GmbH \u0026 Co. KG",
                  "Lürssen-Gruppe",
                  "Zum alten Speicher 11",
                  "28759",
                  "Bremen",
                  "🏢 +49 421-6604-0",
                  "Thorsten Prüser"
                ],
                "line": 68
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 14696237500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 70,
        "name": "Check if the search filters are correct",
        "description": "",
        "id": "[qa]-adressen:-firma-alle;check-if-the-search-filters-are-correct",
        "after": [
          {
            "result": {
              "duration": 68269200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12176740100,
              "status": "passed"
            },
            "line": 71,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 681236900,
              "status": "passed"
            },
            "line": 72,
            "name": "I am on the company address list page",
            "match": {
              "location": "AddressListCompanySteps.i_am_on_the_company_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17611200,
              "error_message": "java.lang.AssertionError: Company list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressListCompanySteps.i_provide_the_following_data_to_the_company_search_filter(AddressListCompanySteps.java:30)\r\n\tat ✽.And I provide the following data to the company search filter(accountMenuAddressesCompanyAll.feature:73)\r\n",
              "status": "failed"
            },
            "line": 73,
            "name": "I provide the following data to the company search filter",
            "match": {
              "location": "AddressListCompanySteps.i_provide_the_following_data_to_the_company_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "nameorid",
                  "Hammer Industries"
                ],
                "line": 74
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 75,
            "name": "I list the company search results",
            "match": {
              "location": "AddressListCompanySteps.i_list_the_company_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 76,
            "name": "the company search results are empty",
            "match": {
              "location": "AddressListCompanySteps.the_company_search_results_are_empty()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "[QA] Adressen: Firma Alle",
    "description": "Als B4U-Nutzer möchte ich unter dem Menüpunkt \"Firma Alle\" eine Suchmaske mit verschiedenen Suchattributen sehen,\r\ndamit ich die die gesuchte Firma schneller finden kann",
    "id": "[qa]-adressen:-firma-alle",
    "keyword": "Feature",
    "uri": "accountMenuAddressesCompanyAll.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3583308100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 5,
        "name": "Change company details [without contact types]",
        "description": "",
        "id": "[qa]-adressen:-company-editieren;change-company-details-[without-contact-types]",
        "after": [
          {
            "result": {
              "duration": 117803100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11707604300,
              "status": "passed"
            },
            "line": 6,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 788269800,
              "error_message": "java.lang.AssertionError: Company list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(AddressCreateCompanySteps.java:44)\r\n\tat ✽.And I have checked that the company \"Wayne Enterprise\" does not already exist(accountMenuAddressesCompanyEdit.feature:7)\r\n",
              "status": "failed"
            },
            "line": 7,
            "name": "I have checked that the company \"Wayne Enterprise\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 33
                }
              ],
              "location": "AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "I have checked that the company \"Stark Industries\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Stark Industries",
                  "offset": 33
                }
              ],
              "location": "AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "I create a new company \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 24
                }
              ],
              "location": "AddressCreateCompanySteps.i_create_a_new_company(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 10
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "I am on the edit company page of \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 34
                }
              ],
              "location": "AddressEditCompanySteps.i_am_on_the_edit_company_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "I edit the company details",
            "match": {
              "location": "AddressEditCompanySteps.i_edit_the_company_details(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Stark Industries"
                ],
                "line": 13
              },
              {
                "cells": [
                  "website",
                  "https://stark.industries"
                ],
                "line": 14
              },
              {
                "cells": [
                  "email",
                  "tony@stark.industries"
                ],
                "line": 15
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 16,
            "name": "the company details are",
            "match": {
              "location": "AddressEditCompanySteps.the_company_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Stark Industries"
                ],
                "line": 17
              },
              {
                "cells": [
                  "website",
                  "https://stark.industries"
                ],
                "line": 18
              },
              {
                "cells": [
                  "email",
                  "tony@stark.industries"
                ],
                "line": 19
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 20
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10370999200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 23,
        "name": "Change company location",
        "description": "",
        "id": "[qa]-adressen:-company-editieren;change-company-location",
        "after": [
          {
            "result": {
              "duration": 116798100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13566907400,
              "status": "passed"
            },
            "line": 24,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 844815900,
              "error_message": "java.lang.AssertionError: Company list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(AddressCreateCompanySteps.java:44)\r\n\tat ✽.And I have checked that the company \"Wayne Enterprise\" does not already exist(accountMenuAddressesCompanyEdit.feature:25)\r\n",
              "status": "failed"
            },
            "line": 25,
            "name": "I have checked that the company \"Wayne Enterprise\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 33
                }
              ],
              "location": "AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "I have checked that the company \"Stark Industries\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Stark Industries",
                  "offset": 33
                }
              ],
              "location": "AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "I create a new company \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 24
                }
              ],
              "location": "AddressCreateCompanySteps.i_create_a_new_company(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 28
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 29,
            "name": "I am on the edit company page of \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 34
                }
              ],
              "location": "AddressEditCompanySteps.i_am_on_the_edit_company_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 30,
            "name": "I edit the company location",
            "match": {
              "location": "AddressEditCompanySteps.i_edit_the_company_location(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "loc.street",
                  "Musterstraße"
                ],
                "line": 31
              },
              {
                "cells": [
                  "loc.zipcode",
                  "31337"
                ],
                "line": 32
              },
              {
                "cells": [
                  "loc.city",
                  "Gotham City"
                ],
                "line": 33
              },
              {
                "cells": [
                  "loc.country",
                  "Deutschland"
                ],
                "line": 34
              },
              {
                "cells": [
                  "loc.phone",
                  "Geschäftlich: 1234567890"
                ],
                "line": 35
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 36,
            "name": "the company details are",
            "match": {
              "location": "AddressEditCompanySteps.the_company_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Wayne Enterprise"
                ],
                "line": 37
              },
              {
                "cells": [
                  "loc.address",
                  "Musterstraße, 31337 Gotham City, Deutschland"
                ],
                "line": 38
              },
              {
                "cells": [
                  "loc.phone",
                  "Geschäftlich 1234567890"
                ],
                "line": 39
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 40
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 9935995600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 43,
        "name": "Change company contact types",
        "description": "",
        "id": "[qa]-adressen:-company-editieren;change-company-contact-types",
        "after": [
          {
            "result": {
              "duration": 81343300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12545466500,
              "status": "passed"
            },
            "line": 44,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 621897700,
              "error_message": "java.lang.AssertionError: Company list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(AddressCreateCompanySteps.java:44)\r\n\tat ✽.And I have checked that the company \"Wayne Enterprise\" does not already exist(accountMenuAddressesCompanyEdit.feature:45)\r\n",
              "status": "failed"
            },
            "line": 45,
            "name": "I have checked that the company \"Wayne Enterprise\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 33
                }
              ],
              "location": "AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "I have checked that the company \"Stark Industries\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Stark Industries",
                  "offset": 33
                }
              ],
              "location": "AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "I create a new company \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 24
                }
              ],
              "location": "AddressCreateCompanySteps.i_create_a_new_company(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 48
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "I am on the edit company page of \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 34
                }
              ],
              "location": "AddressEditCompanySteps.i_am_on_the_edit_company_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "I edit the company contact types",
            "match": {
              "location": "AddressEditCompanySteps.i_edit_the_company_contact_types(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "contacttype",
                  "Kunde"
                ],
                "line": 51
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "the company details are",
            "match": {
              "location": "AddressEditCompanySteps.the_company_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Wayne Enterprise"
                ],
                "line": 53
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 54
              },
              {
                "cells": [
                  "contacttype",
                  "Kunde"
                ],
                "line": 55
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3300523000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 58,
        "name": "Add new contact to an existing company",
        "description": "",
        "id": "[qa]-adressen:-company-editieren;add-new-contact-to-an-existing-company",
        "after": [
          {
            "result": {
              "duration": 114312800,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13268261800,
              "status": "passed"
            },
            "line": 59,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 564830500,
              "error_message": "java.lang.AssertionError: Company list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(AddressCreateCompanySteps.java:44)\r\n\tat ✽.And I have checked that the company \"Wayne Enterprise\" does not already exist(accountMenuAddressesCompanyEdit.feature:60)\r\n",
              "status": "failed"
            },
            "line": 60,
            "name": "I have checked that the company \"Wayne Enterprise\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 33
                }
              ],
              "location": "AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "I have checked that the contact \"Justice League\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 33
                }
              ],
              "location": "ContactCreateSteps.i_have_checked_that_the_contact_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "I create a new company \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 24
                }
              ],
              "location": "AddressCreateCompanySteps.i_create_a_new_company(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 64,
            "name": "I am on the edit company page of \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 34
                }
              ],
              "location": "AddressEditCompanySteps.i_am_on_the_edit_company_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 65,
            "name": "I add a new contact \"Justice League\" to the company",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 21
                }
              ],
              "location": "AddressEditCompanySteps.i_add_a_new_contact_to_the_company(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 66,
            "name": "I am on the edit company page of \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 34
                }
              ],
              "location": "AddressEditCompanySteps.i_am_on_the_edit_company_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 67,
            "name": "the company contact list should only contain",
            "match": {
              "location": "AddressEditCompanySteps.the_company_contact_list_should_only_contain(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "",
                  "Justice League",
                  "",
                  "TestB4U User",
                  "*",
                  "*"
                ],
                "line": 68
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10193698300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 71,
        "name": "Add a skill to an existing company",
        "description": "",
        "id": "[qa]-adressen:-company-editieren;add-a-skill-to-an-existing-company",
        "after": [
          {
            "result": {
              "duration": 183735900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15740755700,
              "status": "passed"
            },
            "line": 72,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 768447800,
              "error_message": "java.lang.AssertionError: Company list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(AddressCreateCompanySteps.java:44)\r\n\tat ✽.And I have checked that the company \"Wayne Enterprise\" does not already exist(accountMenuAddressesCompanyEdit.feature:73)\r\n",
              "status": "failed"
            },
            "line": 73,
            "name": "I have checked that the company \"Wayne Enterprise\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 33
                }
              ],
              "location": "AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 74,
            "name": "I create a new company \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 24
                }
              ],
              "location": "AddressCreateCompanySteps.i_create_a_new_company(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 75
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 76,
            "name": "I am on the edit company page of \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 34
                }
              ],
              "location": "AddressEditCompanySteps.i_am_on_the_edit_company_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "I add a new skill \"Geld, Geld, Geld\" to the company",
            "match": {
              "arguments": [
                {
                  "val": "Geld, Geld, Geld",
                  "offset": 19
                }
              ],
              "location": "AddressEditCompanySteps.i_add_a_new_skill_to_the_company(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 78,
            "name": "the company has the skill \"Geld, Geld, Geld\" set",
            "match": {
              "arguments": [
                {
                  "val": "Geld, Geld, Geld",
                  "offset": 27
                }
              ],
              "location": "AddressEditCompanySteps.the_company_has_the_skill_set(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4968259800,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 81,
        "name": "Remove a skill from an existing company",
        "description": "",
        "id": "[qa]-adressen:-company-editieren;remove-a-skill-from-an-existing-company",
        "after": [
          {
            "result": {
              "duration": 122039900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13106163300,
              "status": "passed"
            },
            "line": 82,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 640093000,
              "error_message": "java.lang.AssertionError: Company list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(AddressCreateCompanySteps.java:44)\r\n\tat ✽.And I have checked that the company \"Wayne Enterprise\" does not already exist(accountMenuAddressesCompanyEdit.feature:83)\r\n",
              "status": "failed"
            },
            "line": 83,
            "name": "I have checked that the company \"Wayne Enterprise\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 33
                }
              ],
              "location": "AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 84,
            "name": "I create a new company \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 24
                }
              ],
              "location": "AddressCreateCompanySteps.i_create_a_new_company(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 85
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 86,
            "name": "I am on the edit company page of \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 34
                }
              ],
              "location": "AddressEditCompanySteps.i_am_on_the_edit_company_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "I add a new skill \"Geld, Geld, Geld\" to the company",
            "match": {
              "arguments": [
                {
                  "val": "Geld, Geld, Geld",
                  "offset": 19
                }
              ],
              "location": "AddressEditCompanySteps.i_add_a_new_skill_to_the_company(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 88,
            "name": "I delete the skill \"Geld, Geld, Geld\" from the company",
            "match": {
              "arguments": [
                {
                  "val": "Geld, Geld, Geld",
                  "offset": 20
                }
              ],
              "location": "AddressEditCompanySteps.i_delete_the_skill(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 89,
            "name": "the company has the skill \"Geld, Geld, Geld\" not set",
            "match": {
              "arguments": [
                {
                  "val": "Geld, Geld, Geld",
                  "offset": 27
                }
              ],
              "location": "AddressEditCompanySteps.the_company_has_the_skill_not_set(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16792437300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 92,
        "name": "Create a new person for an existing company",
        "description": "",
        "id": "[qa]-adressen:-company-editieren;create-a-new-person-for-an-existing-company",
        "after": [
          {
            "result": {
              "duration": 68737400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12695572000,
              "status": "passed"
            },
            "line": 93,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 614010700,
              "error_message": "java.lang.AssertionError: Company list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(AddressCreateCompanySteps.java:44)\r\n\tat ✽.And I have checked that the company \"Wayne Enterprise\" does not already exist(accountMenuAddressesCompanyEdit.feature:94)\r\n",
              "status": "failed"
            },
            "line": 94,
            "name": "I have checked that the company \"Wayne Enterprise\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 33
                }
              ],
              "location": "AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 95,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 96,
            "name": "I create a new company \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 24
                }
              ],
              "location": "AddressCreateCompanySteps.i_create_a_new_company(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 97
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "I am on the edit company page of \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 34
                }
              ],
              "location": "AddressEditCompanySteps.i_am_on_the_edit_company_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 99,
            "name": "I create a new person \"Bruce Wayne\" for the company",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressEditCompanySteps.i_create_a_new_person_for_the_company(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 100
              },
              {
                "cells": [
                  "position",
                  "Batman"
                ],
                "line": 101
              },
              {
                "cells": [
                  "department",
                  "Verbrechensbekämpfung"
                ],
                "line": 102
              },
              {
                "cells": [
                  "phone",
                  "Geschäftlich: 0123456789"
                ],
                "line": 103
              },
              {
                "cells": [
                  "website",
                  "https://wayne.enterprise"
                ],
                "line": 104
              },
              {
                "cells": [
                  "email",
                  "Geschäftlich: bruce@wayne.enterprise"
                ],
                "line": 105
              },
              {
                "cells": [
                  "birthdate",
                  "01.01.1980"
                ],
                "line": 106
              },
              {
                "cells": [
                  "street",
                  "Musterstraße"
                ],
                "line": 107
              },
              {
                "cells": [
                  "zipcode",
                  "31337"
                ],
                "line": 108
              },
              {
                "cells": [
                  "city",
                  "Gotham City"
                ],
                "line": 109
              },
              {
                "cells": [
                  "country",
                  "Deutschland"
                ],
                "line": 110
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 111
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 112,
            "name": "the person \"Bruce Wayne\" is created",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 12
                }
              ],
              "location": "AddressCreatePersonSteps.the_person_is_created(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 113,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 114,
            "name": "the person details are",
            "match": {
              "location": "AddressEditPersonSteps.the_person_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Herr Bruce Wayne"
                ],
                "line": 115
              },
              {
                "cells": [
                  "position",
                  "Batman"
                ],
                "line": 116
              },
              {
                "cells": [
                  "department",
                  "Verbrechensbekämpfung"
                ],
                "line": 117
              },
              {
                "cells": [
                  "phone",
                  "Geschäftlich +49 123456789"
                ],
                "line": 118
              },
              {
                "cells": [
                  "website",
                  "https://wayne.enterprise/"
                ],
                "line": 119
              },
              {
                "cells": [
                  "email",
                  "Geschäftlich bruce@wayne.enterprise"
                ],
                "line": 120
              },
              {
                "cells": [
                  "birthdate",
                  "01.01.1980"
                ],
                "line": 121
              },
              {
                "cells": [
                  "address",
                  "🏢 Musterstraße, 31337 Gotham City, Deutschland"
                ],
                "line": 122
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 123
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 124,
            "name": "I am on the edit company page of \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 34
                }
              ],
              "location": "AddressEditCompanySteps.i_am_on_the_edit_company_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 125,
            "name": "the company employee list contains",
            "match": {
              "location": "AddressEditCompanySteps.the_company_employee_list_contains(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Bruce Wayne",
                  "Batman",
                  "Verbrechensbekämpfung"
                ],
                "line": 126
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3361005200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 129,
        "name": "Add an existing person to an existing company",
        "description": "",
        "id": "[qa]-adressen:-company-editieren;add-an-existing-person-to-an-existing-company",
        "after": [
          {
            "result": {
              "duration": 185170600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12916325900,
              "status": "passed"
            },
            "line": 130,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 796523700,
              "error_message": "java.lang.AssertionError: Company list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(AddressCreateCompanySteps.java:44)\r\n\tat ✽.And I have checked that the company \"Wayne Enterprise\" does not already exist(accountMenuAddressesCompanyEdit.feature:131)\r\n",
              "status": "failed"
            },
            "line": 131,
            "name": "I have checked that the company \"Wayne Enterprise\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 33
                }
              ],
              "location": "AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 132,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 133,
            "name": "I create a new company \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 24
                }
              ],
              "location": "AddressCreateCompanySteps.i_create_a_new_company(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 134
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 135,
            "name": "I create a new person \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 136
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 137
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "I am on the edit company page of \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 34
                }
              ],
              "location": "AddressEditCompanySteps.i_am_on_the_edit_company_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 139,
            "name": "I add the person \"Bruce Wayne\" to the company",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 18
                }
              ],
              "location": "AddressEditCompanySteps.i_add_the_person_to_the_company(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 140,
            "name": "the company employee list contains",
            "match": {
              "location": "AddressEditCompanySteps.the_company_employee_list_contains(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Bruce Wayne",
                  "",
                  ""
                ],
                "line": 141
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "[QA] Adressen: Company editieren",
    "description": "Als B4U-Nutzer möchte ich die Daten einer Firma ändern können,\r\ndamit eine Firma mit den mir bekannten relevanten Merkmalen anpassen kann.",
    "id": "[qa]-adressen:-company-editieren",
    "keyword": "Feature",
    "uri": "accountMenuAddressesCompanyEdit.feature"
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1056"
      }
    ],
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 14534094900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 8,
        "name": "Check elements addresses menu company new",
        "description": "",
        "id": "[qa]-adressen:-company-neu;check-elements-addresses-menu-company-new",
        "after": [
          {
            "result": {
              "duration": 78155000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11072131100,
              "status": "passed"
            },
            "line": 9,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 233759900,
              "status": "passed"
            },
            "line": 10,
            "name": "I am on the create new company page",
            "match": {
              "location": "AddressCreateCompanySteps.i_am_on_the_create_new_company_page()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1067702900,
              "error_message": "java.lang.AssertionError: companyDetailsView.name is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.BaseSteps.all_the_elements_looked_for_are_being_displayed(BaseSteps.java:66)\r\n\tat ✽.Then all the elements looked for are being displayed(accountMenuAddressesCompanyNew.feature:11)\r\n",
              "status": "failed"
            },
            "line": 11,
            "name": "all the elements looked for are being displayed",
            "match": {
              "location": "BaseSteps.all_the_elements_looked_for_are_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Name",
                  "companyDetailsView.name"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Konzern",
                  "companyDetailsView.corporation"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Website URL",
                  "companyDetailsView.url"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Email",
                  "companyDetailsView.email"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Strasse",
                  "locationsView.location.0.street"
                ],
                "line": 16
              },
              {
                "cells": [
                  "PLZ",
                  "locationsView.location.0.zipCode"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Stadt",
                  "locationsView.location.0.city"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Telefonnummer",
                  "valueFormView.value[0].edit"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Adresse zum automatischen einlesen hier ablegen",
                  "companyDetailsView.addressParser"
                ],
                "line": 20
              },
              {
                "cells": [
                  "verantwortlich",
                  "companyDetailsView.selectedKeyAccountManager"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Land",
                  "companyLocationslocation.0.countries"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Art des Telefonanschlusses",
                  "valueFormView.value[0].types"
                ],
                "line": 23
              },
              {
                "cells": [
                  "Telefonnummer hinzufügen",
                  "valueFormView.add"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Standort hinzufügen",
                  "locations.add"
                ],
                "line": 25
              },
              {
                "cells": [
                  "Speichern",
                  "companyDetailsView.saveCreate"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Kunde",
                  "contactTypeFormView.contactTypes[0].CUSTOMER"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Freiberufler/in",
                  "contactTypeFormView.contactTypes[1].FREELANCER"
                ],
                "line": 28
              },
              {
                "cells": [
                  "Partner",
                  "contactTypeFormView.contactTypes[2].PARTNER"
                ],
                "line": 29
              },
              {
                "cells": [
                  "Lieferant",
                  "contactTypeFormView.contactTypes[3].SUPPLIER"
                ],
                "line": 30
              },
              {
                "cells": [
                  "Interessent",
                  "contactTypeFormView.contactTypes[4].INTERESTED"
                ],
                "line": 31
              },
              {
                "cells": [
                  "team neusta",
                  "contactTypeFormView.contactTypes[5].TEAM_NEUSTA"
                ],
                "line": 32
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 7,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3320742600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 34,
        "name": "Company new create success",
        "description": "",
        "id": "[qa]-adressen:-company-neu;company-new-create-success",
        "after": [
          {
            "result": {
              "duration": 134766400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12946275500,
              "status": "passed"
            },
            "line": 35,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 891400400,
              "error_message": "java.lang.AssertionError: Company list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(AddressCreateCompanySteps.java:44)\r\n\tat ✽.And I have checked that the company \"Wayne Enterprise\" does not already exist(accountMenuAddressesCompanyNew.feature:36)\r\n",
              "status": "failed"
            },
            "line": 36,
            "name": "I have checked that the company \"Wayne Enterprise\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 33
                }
              ],
              "location": "AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "I create a new company \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 24
                }
              ],
              "location": "AddressCreateCompanySteps.i_create_a_new_company(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "website",
                  "https://wayne.enterprises"
                ],
                "line": 38
              },
              {
                "cells": [
                  "email",
                  "bruce@wayne.enterprise"
                ],
                "line": 39
              },
              {
                "cells": [
                  "loc.street",
                  "Musterstraße"
                ],
                "line": 40
              },
              {
                "cells": [
                  "loc.zipcode",
                  "31337"
                ],
                "line": 41
              },
              {
                "cells": [
                  "loc.city",
                  "Gotham City"
                ],
                "line": 42
              },
              {
                "cells": [
                  "loc.country",
                  "Deutschland"
                ],
                "line": 43
              },
              {
                "cells": [
                  "loc.phone",
                  "Geschäftlich: 1234567890"
                ],
                "line": 44
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 45
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 46,
            "name": "the company \"Wayne Enterprise\" is created",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 13
                }
              ],
              "location": "AddressCreateCompanySteps.the_company_is_created(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 47,
            "name": "I am on the edit company page of \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 34
                }
              ],
              "location": "AddressEditCompanySteps.i_am_on_the_edit_company_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "the company details are",
            "match": {
              "location": "AddressEditCompanySteps.the_company_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Wayne Enterprise"
                ],
                "line": 49
              },
              {
                "cells": [
                  "website",
                  "https://wayne.enterprises"
                ],
                "line": 50
              },
              {
                "cells": [
                  "email",
                  "bruce@wayne.enterprise"
                ],
                "line": 51
              },
              {
                "cells": [
                  "loc.address",
                  "Musterstraße, 31337 Gotham City, Deutschland"
                ],
                "line": 52
              },
              {
                "cells": [
                  "loc.phone",
                  "Geschäftlich 1234567890"
                ],
                "line": 53
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 54
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16031650300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 56,
        "name": "Company new create success [minimal requirements]",
        "description": "",
        "id": "[qa]-adressen:-company-neu;company-new-create-success-[minimal-requirements]",
        "after": [
          {
            "result": {
              "duration": 65128000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11913407400,
              "status": "passed"
            },
            "line": 57,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 737189800,
              "error_message": "java.lang.AssertionError: Company list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(AddressCreateCompanySteps.java:44)\r\n\tat ✽.And I have checked that the company \"Wayne Enterprise\" does not already exist(accountMenuAddressesCompanyNew.feature:58)\r\n",
              "status": "failed"
            },
            "line": 58,
            "name": "I have checked that the company \"Wayne Enterprise\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 33
                }
              ],
              "location": "AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "I create a new company \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 24
                }
              ],
              "location": "AddressCreateCompanySteps.i_create_a_new_company(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 60
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "the company \"Wayne Enterprise\" is created",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 13
                }
              ],
              "location": "AddressCreateCompanySteps.the_company_is_created(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "I am on the edit company page of \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 34
                }
              ],
              "location": "AddressEditCompanySteps.i_am_on_the_edit_company_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 63,
            "name": "the company details are",
            "match": {
              "location": "AddressEditCompanySteps.the_company_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Wayne Enterprise"
                ],
                "line": 64
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3229685400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 67,
        "name": "Company new create failure [missing contact type]",
        "description": "",
        "id": "[qa]-adressen:-company-neu;company-new-create-failure-[missing-contact-type]",
        "after": [
          {
            "result": {
              "duration": 113605900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14678418200,
              "status": "passed"
            },
            "line": 68,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 654739700,
              "error_message": "java.lang.AssertionError: Company list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(AddressCreateCompanySteps.java:44)\r\n\tat ✽.And I have checked that the company \"Wayne Enterprise\" does not already exist(accountMenuAddressesCompanyNew.feature:69)\r\n",
              "status": "failed"
            },
            "line": 69,
            "name": "I have checked that the company \"Wayne Enterprise\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 33
                }
              ],
              "location": "AddressCreateCompanySteps.i_have_checked_that_the_company_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 70,
            "name": "I create a new simple company \"Wayne Enterprise\"",
            "match": {
              "arguments": [
                {
                  "val": "Wayne Enterprise",
                  "offset": 31
                }
              ],
              "location": "AddressCreateCompanySteps.i_create_a_new_simple_company(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "an error message is being displayed \"required\"",
            "match": {
              "arguments": [
                {
                  "val": "required",
                  "offset": 37
                }
              ],
              "location": "BaseSteps.an_error_message_is_being_displayed(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "[QA] Adressen: Company Neu",
    "description": "Als B4U-Nutzer möchte ich unter dem Menüpunkt \"Firma Neu\" eine Anlagemaske Eingabemöglichkeiten für verschiedene\r\nfirmenbezogene Merkmale sehen,\r\ndamit eine neue Firma mit den mir bekannten relevanten Merkmalen im System anlegen kann",
    "id": "[qa]-adressen:-company-neu",
    "keyword": "Feature",
    "uri": "accountMenuAddressesCompanyNew.feature"
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1052"
      }
    ],
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 13988833200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 7,
        "name": "Check elements addresses menu person all",
        "description": "",
        "id": "[qa]-adressen:-person-alle;check-elements-addresses-menu-person-all",
        "after": [
          {
            "result": {
              "duration": 65597200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11121977300,
              "status": "passed"
            },
            "line": 8,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 691004800,
              "status": "passed"
            },
            "line": 9,
            "name": "I am on the person address list page",
            "match": {
              "location": "AddressListPersonSteps.i_am_on_the_person_address_list_page()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1035703600,
              "error_message": "java.lang.AssertionError: personAddressTableView.nameOrId is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.BaseSteps.all_the_elements_looked_for_are_being_displayed(BaseSteps.java:66)\r\n\tat ✽.Then all the elements looked for are being displayed(accountMenuAddressesPersonAll.feature:10)\r\n",
              "status": "failed"
            },
            "line": 10,
            "name": "all the elements looked for are being displayed",
            "match": {
              "location": "BaseSteps.all_the_elements_looked_for_are_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Name Or Id",
                  "personAddressTableView.nameOrId"
                ],
                "line": 11
              },
              {
                "cells": [
                  "Tel.Nr.",
                  "personAddressTableView.phone"
                ],
                "line": 12
              },
              {
                "cells": [
                  "E-Mail",
                  "personAddressTableView.email"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Firma",
                  "personAddressTableView.company"
                ],
                "line": 14
              },
              {
                "cells": [
                  "PLZ",
                  "personAddressTableView.zipCode"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Stadt",
                  "personAddressTableView.city"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Straße",
                  "personAddressTableView.street"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Kontakttyp",
                  "personAddressTableView.contactTypes"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Suchen 1",
                  "personAddressTableView.search1"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Suchen 2",
                  "personAddressTableView.search2"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Neu anlegen",
                  "personAddressTableView.create"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Filter zurücksetzen",
                  "personAddressTableView.search.clearFilter"
                ],
                "line": 22
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 6,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3943115200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 25,
        "name": "Check dropdown entries addresses menu person all",
        "description": "",
        "id": "[qa]-adressen:-person-alle;check-dropdown-entries-addresses-menu-person-all",
        "after": [
          {
            "result": {
              "duration": 77676400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 12531258700,
              "status": "passed"
            },
            "line": 26,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 655805100,
              "status": "passed"
            },
            "line": 27,
            "name": "I am on the person address list page",
            "match": {
              "location": "AddressListPersonSteps.i_am_on_the_person_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1077952100,
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"id\",\"selector\":\"personAddressTableView.contactTypes\"}\n  (Session info: chrome\u003d72.0.3626.81)\n  (Driver info: chromedriver\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926),platform\u003dLinux 4.9.125-linuxkit x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 1.08 seconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.0.1\u0027, revision: \u00271969d75\u0027, time: \u00272016-10-18 09:49:13 -0700\u0027\nSystem info: host: \u0027DESKTOP-IN4UB21\u0027, ip: \u002710.0.75.1\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_201\u0027\nDriver info: org.openqa.selenium.remote.RemoteWebDriver\nCapabilities [{mobileEmulationEnabled\u003dfalse, timeouts\u003d{implicit\u003d0, pageLoad\u003d300000, script\u003d30000}, hasTouchScreen\u003dfalse, platform\u003dLINUX, acceptSslCerts\u003dfalse, goog:chromeOptions\u003d{debuggerAddress\u003dlocalhost:40079}, acceptInsecureCerts\u003dfalse, webStorageEnabled\u003dtrue, browserName\u003dchrome, takesScreenshot\u003dtrue, javascriptEnabled\u003dtrue, setWindowRect\u003dtrue, unexpectedAlertBehaviour\u003dignore, applicationCacheEnabled\u003dfalse, rotatable\u003dfalse, networkConnectionEnabled\u003dfalse, chrome\u003d{chromedriverVersion\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926), userDataDir\u003d/tmp/.org.chromium.Chromium.hYGMLZ}, takesHeapSnapshot\u003dtrue, pageLoadStrategy\u003dnormal, strictFileInteractability\u003dfalse, databaseEnabled\u003dfalse, handlesAlerts\u003dtrue, version\u003d72.0.3626.81, browserConnectionEnabled\u003dfalse, proxy\u003d{}, nativeEvents\u003dtrue, webdriver.remote.sessionid\u003d1b391977c8f1e4d76de8e95dcc20c916, locationContextEnabled\u003dtrue, cssSelectorsEnabled\u003dtrue}]\nSession ID: 1b391977c8f1e4d76de8e95dcc20c916\n*** Element info: {Using\u003did, value\u003dpersonAddressTableView.contactTypes}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:216)\r\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:168)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:635)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:417)\r\n\tat org.openqa.selenium.By$ById.findElement(By.java:218)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)\r\n\tat de.neusta.b4u.steps.BaseSteps.the_dropdown_menu_contains_the_following_items(BaseSteps.java:72)\r\n\tat ✽.Then the dropdown menu \"personAddressTableView.contactTypes\" contains the following items(accountMenuAddressesPersonAll.feature:28)\r\n",
              "status": "failed"
            },
            "line": 28,
            "name": "the dropdown menu \"personAddressTableView.contactTypes\" contains the following items",
            "match": {
              "arguments": [
                {
                  "val": "personAddressTableView.contactTypes",
                  "offset": 19
                }
              ],
              "location": "BaseSteps.the_dropdown_menu_contains_the_following_items(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "- alle -"
                ],
                "line": 29
              },
              {
                "cells": [
                  "Kunde"
                ],
                "line": 30
              },
              {
                "cells": [
                  "Freiberufler/in"
                ],
                "line": 31
              },
              {
                "cells": [
                  "Partner"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Lieferant"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Mitarbeiter/in"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Angestellte/r (extern)"
                ],
                "line": 35
              },
              {
                "cells": [
                  "Interessent"
                ],
                "line": 36
              },
              {
                "cells": [
                  "Kontakt"
                ],
                "line": 37
              },
              {
                "cells": [
                  "team neusta"
                ],
                "line": 38
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 24,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3034204300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 40,
        "name": "Check if it is possible to navigate the create person page",
        "description": "",
        "id": "[qa]-adressen:-person-alle;check-if-it-is-possible-to-navigate-the-create-person-page",
        "after": [
          {
            "result": {
              "duration": 74601500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8621260800,
              "status": "passed"
            },
            "line": 41,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 655750600,
              "status": "passed"
            },
            "line": 42,
            "name": "I am on the person address list page",
            "match": {
              "location": "AddressListPersonSteps.i_am_on_the_person_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15291600,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressListPersonSteps.i_want_to_create_a_new_person(AddressListPersonSteps.java:101)\r\n\tat ✽.When I want to create a new person(accountMenuAddressesPersonAll.feature:43)\r\n",
              "status": "failed"
            },
            "line": 43,
            "name": "I want to create a new person",
            "match": {
              "location": "AddressListPersonSteps.i_want_to_create_a_new_person()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 44,
            "name": "the create person page is being displayed",
            "match": {
              "location": "AddressCreatePersonSteps.the_create_person_page_is_being_displayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 11622249400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 46,
        "name": "Check if it is possible to clear the search filter",
        "description": "",
        "id": "[qa]-adressen:-person-alle;check-if-it-is-possible-to-clear-the-search-filter",
        "after": [
          {
            "result": {
              "duration": 129020900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9986093500,
              "status": "passed"
            },
            "line": 47,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 685778400,
              "status": "passed"
            },
            "line": 48,
            "name": "I am on the person address list page",
            "match": {
              "location": "AddressListPersonSteps.i_am_on_the_person_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18706000,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressListPersonSteps.i_provide_the_following_data_to_the_person_search_filter(AddressListPersonSteps.java:33)\r\n\tat ✽.And I provide the following data to the person search filter(accountMenuAddressesPersonAll.feature:49)\r\n",
              "status": "failed"
            },
            "line": 49,
            "name": "I provide the following data to the person search filter",
            "match": {
              "location": "AddressListPersonSteps.i_provide_the_following_data_to_the_person_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "nameorid",
                  "Max Mustermann"
                ],
                "line": 50
              },
              {
                "cells": [
                  "phone",
                  "012345678"
                ],
                "line": 51
              },
              {
                "cells": [
                  "email",
                  "max.mustermann@example.org"
                ],
                "line": 52
              },
              {
                "cells": [
                  "company",
                  "Mustercorp"
                ],
                "line": 53
              },
              {
                "cells": [
                  "zipcode",
                  "31337"
                ],
                "line": 54
              },
              {
                "cells": [
                  "city",
                  "Musterstadt"
                ],
                "line": 55
              },
              {
                "cells": [
                  "street",
                  "Musterstraße"
                ],
                "line": 56
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "I clear the person search filter",
            "match": {
              "location": "AddressListPersonSteps.i_clear_the_person_search_filter()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "the person search filter is empty",
            "match": {
              "location": "AddressListPersonSteps.the_person_search_filter_is_empty()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 8232267200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 60,
        "name": "Check if the search results match the search filter criteria [Full]",
        "description": "",
        "id": "[qa]-adressen:-person-alle;check-if-the-search-results-match-the-search-filter-criteria-[full]",
        "after": [
          {
            "result": {
              "duration": 119846100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9639644100,
              "status": "passed"
            },
            "line": 61,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 587077900,
              "status": "passed"
            },
            "line": 62,
            "name": "I am on the person address list page",
            "match": {
              "location": "AddressListPersonSteps.i_am_on_the_person_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17469700,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressListPersonSteps.i_provide_the_following_data_to_the_person_search_filter(AddressListPersonSteps.java:33)\r\n\tat ✽.And I provide the following data to the person search filter(accountMenuAddressesPersonAll.feature:63)\r\n",
              "status": "failed"
            },
            "line": 63,
            "name": "I provide the following data to the person search filter",
            "match": {
              "location": "AddressListPersonSteps.i_provide_the_following_data_to_the_person_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "nameorid",
                  "Thorsten Prüser"
                ],
                "line": 64
              },
              {
                "cells": [
                  "phone",
                  "+49 40 3999903-210"
                ],
                "line": 65
              },
              {
                "cells": [
                  "email",
                  "t.prueser@neusta.de"
                ],
                "line": 66
              },
              {
                "cells": [
                  "company",
                  "neusta consulting GmbH"
                ],
                "line": 67
              },
              {
                "cells": [
                  "zipcode",
                  "28357"
                ],
                "line": 68
              },
              {
                "cells": [
                  "city",
                  "Bremen"
                ],
                "line": 69
              },
              {
                "cells": [
                  "street",
                  "Butlandskamp 11 D"
                ],
                "line": 70
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "I list the person search results",
            "match": {
              "location": "AddressListPersonSteps.i_list_the_person_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 72,
            "name": "the person search results should only contain",
            "match": {
              "location": "AddressListPersonSteps.the_person_search_results_should_contain(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "(2037)",
                  "Prüser, Thorsten",
                  "neusta consulting GmbH",
                  "Butlandskamp 11 D",
                  "28357",
                  "Bremen",
                  "🏢 +49 40 3999903-210"
                ],
                "line": 73
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3728661100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 75,
        "name": "Check if the search results match the search filter criteria [LastName, FirstName]",
        "description": "",
        "id": "[qa]-adressen:-person-alle;check-if-the-search-results-match-the-search-filter-criteria-[lastname,-firstname]",
        "after": [
          {
            "result": {
              "duration": 164897300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8890398300,
              "status": "passed"
            },
            "line": 76,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1028969300,
              "status": "passed"
            },
            "line": 77,
            "name": "I am on the person address list page",
            "match": {
              "location": "AddressListPersonSteps.i_am_on_the_person_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23394000,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressListPersonSteps.i_provide_the_following_data_to_the_person_search_filter(AddressListPersonSteps.java:33)\r\n\tat ✽.And I provide the following data to the person search filter(accountMenuAddressesPersonAll.feature:78)\r\n",
              "status": "failed"
            },
            "line": 78,
            "name": "I provide the following data to the person search filter",
            "match": {
              "location": "AddressListPersonSteps.i_provide_the_following_data_to_the_person_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "nameorid",
                  "Prüser, Thorsten"
                ],
                "line": 79
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "I list the person search results",
            "match": {
              "location": "AddressListPersonSteps.i_list_the_person_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 81,
            "name": "the person search results should only contain",
            "match": {
              "location": "AddressListPersonSteps.the_person_search_results_should_contain(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "*",
                  "Prüser, Thorsten",
                  "*",
                  "*",
                  "*",
                  "*",
                  "*"
                ],
                "line": 82
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10604062300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 84,
        "name": "Check if the search results match the search filter criteria [FirstName]",
        "description": "",
        "id": "[qa]-adressen:-person-alle;check-if-the-search-results-match-the-search-filter-criteria-[firstname]",
        "after": [
          {
            "result": {
              "duration": 109515600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10246242800,
              "status": "passed"
            },
            "line": 85,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1184903600,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Banner, Brucie\" does not already exist(accountMenuAddressesPersonAll.feature:86)\r\n",
              "status": "failed"
            },
            "line": 86,
            "name": "I have checked that the person \"Banner, Brucie\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Banner, Brucie",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "I have checked that the person \"Wayne, Brucie\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Brucie",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 88,
            "name": "I have checked that the person \"Brucie, Banner\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Brucie, Banner",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 89,
            "name": "I create a new person \"Brucie Banner\"",
            "match": {
              "arguments": [
                {
                  "val": "Brucie Banner",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 90
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 91
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 92,
            "name": "I create a new person \"Brucie Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Brucie Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 93
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 94
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 95,
            "name": "I create a new person \"Banner Brucie\"",
            "match": {
              "arguments": [
                {
                  "val": "Banner Brucie",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 96
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 97
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "I am on the person address list page",
            "match": {
              "location": "AddressListPersonSteps.i_am_on_the_person_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 99,
            "name": "I provide the following data to the person search filter",
            "match": {
              "location": "AddressListPersonSteps.i_provide_the_following_data_to_the_person_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "nameorid",
                  ",Brucie"
                ],
                "line": 100
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 101,
            "name": "I list the person search results",
            "match": {
              "location": "AddressListPersonSteps.i_list_the_person_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 102,
            "name": "the person search results should only contain",
            "match": {
              "location": "AddressListPersonSteps.the_person_search_results_should_contain(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "*",
                  "Banner, Brucie",
                  "*",
                  "*",
                  "*",
                  "*",
                  "*"
                ],
                "line": 103
              },
              {
                "cells": [
                  "*",
                  "Wayne, Brucie",
                  "*",
                  "*",
                  "*",
                  "*",
                  "*"
                ],
                "line": 104
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3264763600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 106,
        "name": "Check if the search results match the search filter criteria [LastName]",
        "description": "",
        "id": "[qa]-adressen:-person-alle;check-if-the-search-results-match-the-search-filter-criteria-[lastname]",
        "after": [
          {
            "result": {
              "duration": 185126400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9322183000,
              "status": "passed"
            },
            "line": 107,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 912433700,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Skywalker, Luke\" does not already exist(accountMenuAddressesPersonAll.feature:108)\r\n",
              "status": "failed"
            },
            "line": 108,
            "name": "I have checked that the person \"Skywalker, Luke\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Skywalker, Luke",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "I have checked that the person \"Skywalker, Anakin\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Skywalker, Anakin",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "I have checked that the person \"Luke, Skywalker\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Luke, Skywalker",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 111,
            "name": "I create a new person \"Luke Skywalker\"",
            "match": {
              "arguments": [
                {
                  "val": "Luke Skywalker",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 112
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 113
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 114,
            "name": "I create a new person \"Anakin Skywalker\"",
            "match": {
              "arguments": [
                {
                  "val": "Anakin Skywalker",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 115
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 116
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 117,
            "name": "I create a new person \"Skywalker Luke\"",
            "match": {
              "arguments": [
                {
                  "val": "Skywalker Luke",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 118
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 119
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 120,
            "name": "I am on the person address list page",
            "match": {
              "location": "AddressListPersonSteps.i_am_on_the_person_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 121,
            "name": "I provide the following data to the person search filter",
            "match": {
              "location": "AddressListPersonSteps.i_provide_the_following_data_to_the_person_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "nameorid",
                  "Skywalker,"
                ],
                "line": 122
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 123,
            "name": "I list the person search results",
            "match": {
              "location": "AddressListPersonSteps.i_list_the_person_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 124,
            "name": "the person search results should only contain",
            "match": {
              "location": "AddressListPersonSteps.the_person_search_results_should_contain(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "*",
                  "Skywalker, Anakin",
                  "*",
                  "*",
                  "*",
                  "*",
                  "*"
                ],
                "line": 125
              },
              {
                "cells": [
                  "*",
                  "Skywalker, Luke",
                  "*",
                  "*",
                  "*",
                  "*",
                  "*"
                ],
                "line": 126
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10851503700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 128,
        "name": "Check if the search results match the search filter criteria [All]",
        "description": "",
        "id": "[qa]-adressen:-person-alle;check-if-the-search-results-match-the-search-filter-criteria-[all]",
        "after": [
          {
            "result": {
              "duration": 207806900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10011146000,
              "status": "passed"
            },
            "line": 129,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 832154900,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Skywalker, Luke\" does not already exist(accountMenuAddressesPersonAll.feature:130)\r\n",
              "status": "failed"
            },
            "line": 130,
            "name": "I have checked that the person \"Skywalker, Luke\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Skywalker, Luke",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 131,
            "name": "I have checked that the person \"Lukewalker, Sky\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Lukewalker, Sky",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 132,
            "name": "I have checked that the person \"Luke, Skywalker\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Luke, Skywalker",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 133,
            "name": "I create a new person \"Luke Skywalker\"",
            "match": {
              "arguments": [
                {
                  "val": "Luke Skywalker",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 134
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 135
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 136,
            "name": "I create a new person \"Sky Lukewalker\"",
            "match": {
              "arguments": [
                {
                  "val": "Sky Lukewalker",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 137
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 138
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 139,
            "name": "I am on the person address list page",
            "match": {
              "location": "AddressListPersonSteps.i_am_on_the_person_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 140,
            "name": "I provide the following data to the person search filter",
            "match": {
              "location": "AddressListPersonSteps.i_provide_the_following_data_to_the_person_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "nameorid",
                  "Luke"
                ],
                "line": 141
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 142,
            "name": "I list the person search results",
            "match": {
              "location": "AddressListPersonSteps.i_list_the_person_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 143,
            "name": "the person search results should only contain",
            "match": {
              "location": "AddressListPersonSteps.the_person_search_results_should_contain(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "*",
                  "Lukewalker, Sky",
                  "*",
                  "*",
                  "*",
                  "*",
                  "*"
                ],
                "line": 144
              },
              {
                "cells": [
                  "*",
                  "Skywalker, Luke",
                  "*",
                  "*",
                  "*",
                  "*",
                  "*"
                ],
                "line": 145
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3799590900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 147,
        "name": "Check if the search filters are correct",
        "description": "",
        "id": "[qa]-adressen:-person-alle;check-if-the-search-filters-are-correct",
        "after": [
          {
            "result": {
              "duration": 84042100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8224843600,
              "status": "passed"
            },
            "line": 148,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 862019200,
              "status": "passed"
            },
            "line": 149,
            "name": "I am on the person address list page",
            "match": {
              "location": "AddressListPersonSteps.i_am_on_the_person_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 35573500,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressListPersonSteps.i_provide_the_following_data_to_the_person_search_filter(AddressListPersonSteps.java:33)\r\n\tat ✽.And I provide the following data to the person search filter(accountMenuAddressesPersonAll.feature:150)\r\n",
              "status": "failed"
            },
            "line": 150,
            "name": "I provide the following data to the person search filter",
            "match": {
              "location": "AddressListPersonSteps.i_provide_the_following_data_to_the_person_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "nameorid",
                  "Tony Stark"
                ],
                "line": 151
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 152,
            "name": "I list the person search results",
            "match": {
              "location": "AddressListPersonSteps.i_list_the_person_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 153,
            "name": "the person search results are empty",
            "match": {
              "location": "AddressListPersonSteps.the_person_search_results_are_empty()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12149006600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 155,
        "name": "Check if the keyword filter is correct [Knowhow]",
        "description": "",
        "id": "[qa]-adressen:-person-alle;check-if-the-keyword-filter-is-correct-[knowhow]",
        "after": [
          {
            "result": {
              "duration": 117678400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9662144100,
              "status": "passed"
            },
            "line": 156,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 656525500,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Banner, Bruce\" does not already exist(accountMenuAddressesPersonAll.feature:157)\r\n",
              "status": "failed"
            },
            "line": 157,
            "name": "I have checked that the person \"Banner, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Banner, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 158,
            "name": "I create a new person \"Bruce Banner\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Banner",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 159
              },
              {
                "cells": [
                  "contacttype",
                  "Freiberufler/in"
                ],
                "line": 160
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 161,
            "name": "I add a new know how \"Gamma-Strahlen\"",
            "match": {
              "arguments": [
                {
                  "val": "Gamma-Strahlen",
                  "offset": 22
                }
              ],
              "location": "AddressEditPersonSteps.i_add_a_new_know_how(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 162,
            "name": "I am on the person address list page",
            "match": {
              "location": "AddressListPersonSteps.i_am_on_the_person_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 163,
            "name": "I provide the following data to the person search filter",
            "match": {
              "location": "AddressListPersonSteps.i_provide_the_following_data_to_the_person_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "contacttype",
                  "Freiberufler/in"
                ],
                "line": 164
              },
              {
                "cells": [
                  "keywords",
                  "Gamma-Strahlen"
                ],
                "line": 165
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 166,
            "name": "I list the person search results",
            "match": {
              "location": "AddressListPersonSteps.i_list_the_person_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 167,
            "name": "the freelancer search results should only contain \"Banner, Bruce\"",
            "match": {
              "arguments": [
                {
                  "val": "Banner, Bruce",
                  "offset": 51
                }
              ],
              "location": "AddressListPersonSteps.the_freelancer_search_results_should_only_contain(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3471677700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 169,
        "name": "Check if the keyword filter is correct [Skill]",
        "description": "",
        "id": "[qa]-adressen:-person-alle;check-if-the-keyword-filter-is-correct-[skill]",
        "after": [
          {
            "result": {
              "duration": 165906500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8285658700,
              "status": "passed"
            },
            "line": 170,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1114186300,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Banner, Bruce\" does not already exist(accountMenuAddressesPersonAll.feature:171)\r\n",
              "status": "failed"
            },
            "line": 171,
            "name": "I have checked that the person \"Banner, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Banner, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 172,
            "name": "I create a new person \"Bruce Banner\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Banner",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 173
              },
              {
                "cells": [
                  "contacttype",
                  "Freiberufler/in"
                ],
                "line": 174
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "I add a new skill \"Wutbewältigung\" to the person",
            "match": {
              "arguments": [
                {
                  "val": "Wutbewältigung",
                  "offset": 19
                }
              ],
              "location": "AddressEditPersonSteps.i_add_a_new_skill_to_the_person(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 176,
            "name": "I am on the person address list page",
            "match": {
              "location": "AddressListPersonSteps.i_am_on_the_person_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 177,
            "name": "I provide the following data to the person search filter",
            "match": {
              "location": "AddressListPersonSteps.i_provide_the_following_data_to_the_person_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "contacttype",
                  "Freiberufler/in"
                ],
                "line": 178
              },
              {
                "cells": [
                  "keywords",
                  "Wutbewältigung"
                ],
                "line": 179
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 180,
            "name": "I list the person search results",
            "match": {
              "location": "AddressListPersonSteps.i_list_the_person_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 181,
            "name": "the freelancer search results should only contain \"Banner, Bruce\"",
            "match": {
              "arguments": [
                {
                  "val": "Banner, Bruce",
                  "offset": 51
                }
              ],
              "location": "AddressListPersonSteps.the_freelancer_search_results_should_only_contain(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12614762900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 183,
        "name": "Check if the keyword filter is correct [Projects]",
        "description": "",
        "id": "[qa]-adressen:-person-alle;check-if-the-keyword-filter-is-correct-[projects]",
        "after": [
          {
            "result": {
              "duration": 82557000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10107097600,
              "status": "passed"
            },
            "line": 184,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 647929400,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Banner, Bruce\" does not already exist(accountMenuAddressesPersonAll.feature:185)\r\n",
              "status": "failed"
            },
            "line": 185,
            "name": "I have checked that the person \"Banner, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Banner, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 186,
            "name": "I create a new person \"Bruce Banner\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Banner",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 187
              },
              {
                "cells": [
                  "contacttype",
                  "Freiberufler/in"
                ],
                "line": 188
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 189,
            "name": "I add a new project",
            "match": {
              "location": "AddressEditPersonSteps.i_add_a_new_project(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ordernumber",
                  "1"
                ],
                "line": 190
              },
              {
                "cells": [
                  "startdate",
                  "01.01.2017"
                ],
                "line": 191
              },
              {
                "cells": [
                  "enddate",
                  "31.12.2017"
                ],
                "line": 192
              },
              {
                "cells": [
                  "position",
                  "HULK"
                ],
                "line": 193
              },
              {
                "cells": [
                  "customertrade",
                  "Justice League"
                ],
                "line": 194
              },
              {
                "cells": [
                  "description",
                  "HUULK..."
                ],
                "line": 195
              },
              {
                "cells": [
                  "technical",
                  "...SMASH!!"
                ],
                "line": 196
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 197,
            "name": "I am on the person address list page",
            "match": {
              "location": "AddressListPersonSteps.i_am_on_the_person_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 198,
            "name": "I provide the following data to the person search filter",
            "match": {
              "location": "AddressListPersonSteps.i_provide_the_following_data_to_the_person_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "contacttype",
                  "Freiberufler/in"
                ],
                "line": 199
              },
              {
                "cells": [
                  "keywords",
                  "HUULK"
                ],
                "line": 200
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 201,
            "name": "I list the person search results",
            "match": {
              "location": "AddressListPersonSteps.i_list_the_person_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 202,
            "name": "the freelancer search results should only contain \"Banner, Bruce\"",
            "match": {
              "arguments": [
                {
                  "val": "Banner, Bruce",
                  "offset": 51
                }
              ],
              "location": "AddressListPersonSteps.the_freelancer_search_results_should_only_contain(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "[QA] Adressen: Person Alle",
    "description": "Als B4U-Nutzer möchte ich unter dem Menüpunkt \"Person Alle\" eine Suchmaske mit verschiedenen Suchattributen sehen,\r\ndamit ich die gesuchte Person schneller finden kann",
    "id": "[qa]-adressen:-person-alle",
    "keyword": "Feature",
    "uri": "accountMenuAddressesPersonAll.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3273649100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 5,
        "name": "Change person details [without contact types]",
        "description": "",
        "id": "[qa]-adressen:-person-editieren;change-person-details-[without-contact-types]",
        "after": [
          {
            "result": {
              "duration": 217059300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8571151200,
              "status": "passed"
            },
            "line": 6,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 761705800,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Wayne, Bruce\" does not already exist(accountMenuAddressesPersonEdit.feature:7)\r\n",
              "status": "failed"
            },
            "line": 7,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "I have checked that the person \"Kyle, Selina\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Kyle, Selina",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "I create a new person \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 10
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 11
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 12,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 13,
            "name": "I edit the person details",
            "match": {
              "location": "AddressEditPersonSteps.i_edit_the_person_details(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Frau"
                ],
                "line": 14
              },
              {
                "cells": [
                  "firstname",
                  "Selina"
                ],
                "line": 15
              },
              {
                "cells": [
                  "lastname",
                  "Kyle"
                ],
                "line": 16
              },
              {
                "cells": [
                  "position",
                  "Catwomen"
                ],
                "line": 17
              },
              {
                "cells": [
                  "department",
                  "Verbrechensbekämpfung"
                ],
                "line": 18
              },
              {
                "cells": [
                  "phone",
                  "Geschäftlich: 9876543210"
                ],
                "line": 19
              },
              {
                "cells": [
                  "website",
                  "https://wayne.enterprise"
                ],
                "line": 20
              },
              {
                "cells": [
                  "email",
                  "Geschäftlich: selina@wayne.enterprise"
                ],
                "line": 21
              },
              {
                "cells": [
                  "birthdate",
                  "01.01.1985"
                ],
                "line": 22
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "the person details are",
            "match": {
              "location": "AddressEditPersonSteps.the_person_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Frau Selina Kyle"
                ],
                "line": 24
              },
              {
                "cells": [
                  "position",
                  "Catwomen"
                ],
                "line": 25
              },
              {
                "cells": [
                  "department",
                  "Verbrechensbekämpfung"
                ],
                "line": 26
              },
              {
                "cells": [
                  "phone",
                  "Geschäftlich 9876543210"
                ],
                "line": 27
              },
              {
                "cells": [
                  "website",
                  "https://wayne.enterprise/"
                ],
                "line": 28
              },
              {
                "cells": [
                  "email",
                  "Geschäftlich selina@wayne.enterprise"
                ],
                "line": 29
              },
              {
                "cells": [
                  "birthdate",
                  "01.01.1985"
                ],
                "line": 30
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 31
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10023739400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 34,
        "name": "Change person address",
        "description": "",
        "id": "[qa]-adressen:-person-editieren;change-person-address",
        "after": [
          {
            "result": {
              "duration": 164481000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10843099600,
              "status": "passed"
            },
            "line": 35,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1266834700,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Wayne, Bruce\" does not already exist(accountMenuAddressesPersonEdit.feature:36)\r\n",
              "status": "failed"
            },
            "line": 36,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "I have checked that the person \"Kyle, Selina\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Kyle, Selina",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "I create a new person \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 39
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 40
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 41,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 42,
            "name": "I edit the person address",
            "match": {
              "location": "AddressEditPersonSteps.i_edit_the_person_address(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "street",
                  "Musterstraße"
                ],
                "line": 43
              },
              {
                "cells": [
                  "zipcode",
                  "31337"
                ],
                "line": 44
              },
              {
                "cells": [
                  "city",
                  "Gotham City"
                ],
                "line": 45
              },
              {
                "cells": [
                  "country",
                  "Deutschland"
                ],
                "line": 46
              },
              {
                "cells": [
                  "addresstype",
                  "Geschäftlich"
                ],
                "line": 47
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 48,
            "name": "the person details are",
            "match": {
              "location": "AddressEditPersonSteps.the_person_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Herr Bruce Wayne"
                ],
                "line": 49
              },
              {
                "cells": [
                  "address",
                  "🏢 Musterstraße, 31337 Gotham City, Deutschland"
                ],
                "line": 50
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 51
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 5908365000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 54,
        "name": "Change person contact types",
        "description": "",
        "id": "[qa]-adressen:-person-editieren;change-person-contact-types",
        "after": [
          {
            "result": {
              "duration": 62687700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11818487300,
              "status": "passed"
            },
            "line": 55,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 634753400,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Wayne, Bruce\" does not already exist(accountMenuAddressesPersonEdit.feature:56)\r\n",
              "status": "failed"
            },
            "line": 56,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 57,
            "name": "I have checked that the person \"Kyle, Selina\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Kyle, Selina",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "I create a new person \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 59
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 60
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 61,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 62,
            "name": "I edit the person contact types",
            "match": {
              "location": "AddressEditPersonSteps.i_edit_the_person_contact_types(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "contacttype",
                  "Kunde"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 64,
            "name": "the person details are",
            "match": {
              "location": "AddressEditPersonSteps.the_person_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Herr Bruce Wayne"
                ],
                "line": 65
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 66
              },
              {
                "cells": [
                  "contacttype",
                  "Kunde"
                ],
                "line": 67
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3587664700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 70,
        "name": "Add new contact to an existing person",
        "description": "",
        "id": "[qa]-adressen:-person-editieren;add-new-contact-to-an-existing-person",
        "after": [
          {
            "result": {
              "duration": 124659300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8967788700,
              "status": "passed"
            },
            "line": 71,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 755819100,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Wayne, Bruce\" does not already exist(accountMenuAddressesPersonEdit.feature:72)\r\n",
              "status": "failed"
            },
            "line": 72,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 73,
            "name": "I have checked that the contact \"Justice League\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 33
                }
              ],
              "location": "ContactCreateSteps.i_have_checked_that_the_contact_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 74,
            "name": "I create a new person \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 75
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 76
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 78,
            "name": "I add a new contact \"Justice League\" to the person",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 21
                }
              ],
              "location": "AddressEditPersonSteps.i_add_a_new_contact_to_the_person(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 80,
            "name": "the person contact list should only contain",
            "match": {
              "location": "AddressEditPersonSteps.the_person_contact_list_should_only_contain(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "",
                  "Justice League",
                  "Bruce Wayne",
                  "TestB4U User",
                  "*",
                  "*"
                ],
                "line": 81
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12739647400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 84,
        "name": "Add a know how to an existing person",
        "description": "",
        "id": "[qa]-adressen:-person-editieren;add-a-know-how-to-an-existing-person",
        "after": [
          {
            "result": {
              "duration": 65432300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10193725300,
              "status": "passed"
            },
            "line": 85,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 597456300,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Wayne, Bruce\" does not already exist(accountMenuAddressesPersonEdit.feature:86)\r\n",
              "status": "failed"
            },
            "line": 86,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "I create a new person \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 88
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 89
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 90,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 91,
            "name": "I add a new know how \"Ninjutsu\"",
            "match": {
              "arguments": [
                {
                  "val": "Ninjutsu",
                  "offset": 22
                }
              ],
              "location": "AddressEditPersonSteps.i_add_a_new_know_how(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 92,
            "name": "the person has the know how \"Ninjutsu\" set",
            "match": {
              "arguments": [
                {
                  "val": "Ninjutsu",
                  "offset": 29
                }
              ],
              "location": "AddressEditPersonSteps.the_person_has_the_know_how_set(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3739022300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 95,
        "name": "Remove a know how from an existing person",
        "description": "",
        "id": "[qa]-adressen:-person-editieren;remove-a-know-how-from-an-existing-person",
        "after": [
          {
            "result": {
              "duration": 168509200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8737682100,
              "status": "passed"
            },
            "line": 96,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1359998700,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Wayne, Bruce\" does not already exist(accountMenuAddressesPersonEdit.feature:97)\r\n",
              "status": "failed"
            },
            "line": 97,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "I create a new person \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 99
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 100
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 101,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 102,
            "name": "I add a new know how \"Ninjutsu\"",
            "match": {
              "arguments": [
                {
                  "val": "Ninjutsu",
                  "offset": 22
                }
              ],
              "location": "AddressEditPersonSteps.i_add_a_new_know_how(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 103,
            "name": "I delete the know how \"Ninjutsu\" from the person",
            "match": {
              "arguments": [
                {
                  "val": "Ninjutsu",
                  "offset": 23
                }
              ],
              "location": "AddressEditPersonSteps.i_delete_the_know_how_from_the_person(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 104,
            "name": "the person has the know how \"Ninjutsu\" not set",
            "match": {
              "arguments": [
                {
                  "val": "Ninjutsu",
                  "offset": 29
                }
              ],
              "location": "AddressEditPersonSteps.the_person_has_the_know_how_not_set(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10360456300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 107,
        "name": "Add a skill to an existing person",
        "description": "",
        "id": "[qa]-adressen:-person-editieren;add-a-skill-to-an-existing-person",
        "after": [
          {
            "result": {
              "duration": 146578900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9819876300,
              "status": "passed"
            },
            "line": 108,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 808353900,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Wayne, Bruce\" does not already exist(accountMenuAddressesPersonEdit.feature:109)\r\n",
              "status": "failed"
            },
            "line": 109,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "I am on the create new person page",
            "match": {
              "location": "AddressCreatePersonSteps.i_am_on_the_create_new_person_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 111,
            "name": "I create a new person \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 112
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 113
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 114,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 115,
            "name": "I add a new skill \"Geld, Geld, Geld\" to the person",
            "match": {
              "arguments": [
                {
                  "val": "Geld, Geld, Geld",
                  "offset": 19
                }
              ],
              "location": "AddressEditPersonSteps.i_add_a_new_skill_to_the_person(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 116,
            "name": "the person has the skill \"Geld, Geld, Geld\" set",
            "match": {
              "arguments": [
                {
                  "val": "Geld, Geld, Geld",
                  "offset": 26
                }
              ],
              "location": "AddressEditPersonSteps.the_person_has_the_skill_set(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 5855661400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 119,
        "name": "Remove a skill from an existing person",
        "description": "",
        "id": "[qa]-adressen:-person-editieren;remove-a-skill-from-an-existing-person",
        "after": [
          {
            "result": {
              "duration": 65692900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10621839300,
              "status": "passed"
            },
            "line": 120,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1081597800,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Wayne, Bruce\" does not already exist(accountMenuAddressesPersonEdit.feature:121)\r\n",
              "status": "failed"
            },
            "line": 121,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 122,
            "name": "I am on the create new person page",
            "match": {
              "location": "AddressCreatePersonSteps.i_am_on_the_create_new_person_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 123,
            "name": "I create a new person \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 124
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 125
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 126,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 127,
            "name": "I add a new skill \"Geld, Geld, Geld\" to the person",
            "match": {
              "arguments": [
                {
                  "val": "Geld, Geld, Geld",
                  "offset": 19
                }
              ],
              "location": "AddressEditPersonSteps.i_add_a_new_skill_to_the_person(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 128,
            "name": "I delete the skill \"Geld, Geld, Geld\" from the person",
            "match": {
              "arguments": [
                {
                  "val": "Geld, Geld, Geld",
                  "offset": 20
                }
              ],
              "location": "AddressEditPersonSteps.i_delete_the_skill_from_the_person(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 129,
            "name": "the person has the skill \"Geld, Geld, Geld\" not set",
            "match": {
              "arguments": [
                {
                  "val": "Geld, Geld, Geld",
                  "offset": 26
                }
              ],
              "location": "AddressEditPersonSteps.the_person_has_the_skill_not_set(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3341546300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 132,
        "name": "Add a new project to an existing person",
        "description": "",
        "id": "[qa]-adressen:-person-editieren;add-a-new-project-to-an-existing-person",
        "after": [
          {
            "result": {
              "duration": 257352000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8918259100,
              "status": "passed"
            },
            "line": 133,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 779865400,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Wayne, Bruce\" does not already exist(accountMenuAddressesPersonEdit.feature:134)\r\n",
              "status": "failed"
            },
            "line": 134,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 135,
            "name": "I create a new person \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 136
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 137
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 139,
            "name": "I add a new project",
            "match": {
              "location": "AddressEditPersonSteps.i_add_a_new_project(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ordernumber",
                  "1"
                ],
                "line": 140
              },
              {
                "cells": [
                  "startdate",
                  "01.01.2017"
                ],
                "line": 141
              },
              {
                "cells": [
                  "enddate",
                  "31.12.2017"
                ],
                "line": 142
              },
              {
                "cells": [
                  "position",
                  "Team-Lead"
                ],
                "line": 143
              },
              {
                "cells": [
                  "customertrade",
                  "Justice League"
                ],
                "line": 144
              },
              {
                "cells": [
                  "description",
                  "I am Batman!"
                ],
                "line": 145
              },
              {
                "cells": [
                  "technical",
                  "Because I am Batman!"
                ],
                "line": 146
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 147,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 148,
            "name": "the person project list should only contain",
            "match": {
              "location": "AddressEditPersonSteps.the_person_project_list_should_only_contain(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "1",
                  "*",
                  "01.01.2017 - 31.12.2017",
                  "Justice League",
                  "Team-Lead",
                  "I am Batman!"
                ],
                "line": 149
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12131589200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 152,
        "name": "Remove a project from an existing person",
        "description": "",
        "id": "[qa]-adressen:-person-editieren;remove-a-project-from-an-existing-person",
        "after": [
          {
            "result": {
              "duration": 132830900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9194597700,
              "status": "passed"
            },
            "line": 153,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 528583400,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Wayne, Bruce\" does not already exist(accountMenuAddressesPersonEdit.feature:154)\r\n",
              "status": "failed"
            },
            "line": 154,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 155,
            "name": "I create a new person \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 156
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 157
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 158,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 159,
            "name": "I add a new project",
            "match": {
              "location": "AddressEditPersonSteps.i_add_a_new_project(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "ordernumber",
                  "1"
                ],
                "line": 160
              },
              {
                "cells": [
                  "startdate",
                  "01.01.2017"
                ],
                "line": 161
              },
              {
                "cells": [
                  "enddate",
                  "31.12.2017"
                ],
                "line": 162
              },
              {
                "cells": [
                  "position",
                  "Team-Lead"
                ],
                "line": 163
              },
              {
                "cells": [
                  "customertrade",
                  "Justice League"
                ],
                "line": 164
              },
              {
                "cells": [
                  "description",
                  "I am Batman!"
                ],
                "line": 165
              },
              {
                "cells": [
                  "technical",
                  "Because I am Batman!"
                ],
                "line": 166
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 167,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 168,
            "name": "I delete the project \"1\"",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 22
                }
              ],
              "location": "AddressEditPersonSteps.i_delete_the_project(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 169,
            "name": "the person project list should be empty",
            "match": {
              "location": "AddressEditPersonSteps.the_person_project_list_should_be_empty()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3296214200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 172,
        "name": "Edit person freelancer data",
        "description": "",
        "id": "[qa]-adressen:-person-editieren;edit-person-freelancer-data",
        "after": [
          {
            "result": {
              "duration": 134892000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8741414200,
              "status": "passed"
            },
            "line": 173,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 912427900,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Wayne, Bruce\" does not already exist(accountMenuAddressesPersonEdit.feature:174)\r\n",
              "status": "failed"
            },
            "line": 174,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 175,
            "name": "I create a new person \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 176
              },
              {
                "cells": [
                  "contacttype",
                  "Freiberufler/in"
                ],
                "line": 177
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 178,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 179,
            "name": "I edit the person freelancer details",
            "match": {
              "location": "AddressEditPersonSteps.i_edit_the_person_freelancer_details(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cooperationsince",
                  "01.01.2016"
                ],
                "line": 180
              },
              {
                "cells": [
                  "availablesince",
                  "01.01.2017"
                ],
                "line": 181
              },
              {
                "cells": [
                  "freelancerstate",
                  "neu"
                ],
                "line": 182
              },
              {
                "cells": [
                  "hourlyratemin",
                  "10 EUR"
                ],
                "line": 183
              },
              {
                "cells": [
                  "hourlyratemax",
                  "20 EUR"
                ],
                "line": 184
              },
              {
                "cells": [
                  "contracttype",
                  "Contract"
                ],
                "line": 185
              },
              {
                "cells": [
                  "rating",
                  "**"
                ],
                "line": 186
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 187,
            "name": "the person freelancer details are",
            "match": {
              "location": "AddressEditPersonSteps.the_person_freelancer_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "cooperationsince",
                  "01.01.2016"
                ],
                "line": 188
              },
              {
                "cells": [
                  "availablesince",
                  "01.01.2017"
                ],
                "line": 189
              },
              {
                "cells": [
                  "freelancerstate",
                  "neu"
                ],
                "line": 190
              },
              {
                "cells": [
                  "hourlyratemin",
                  "10 EUR"
                ],
                "line": 191
              },
              {
                "cells": [
                  "hourlyratemax",
                  "20 EUR"
                ],
                "line": 192
              },
              {
                "cells": [
                  "contracttype",
                  "Contract"
                ],
                "line": 193
              },
              {
                "cells": [
                  "rating",
                  "**"
                ],
                "line": 194
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "[QA] Adressen: Person editieren",
    "description": "Als B4U-Nutzer möchte ich die Daten einer Person ändern können,\r\ndamit eine Person mit den mir bekannten relevanten Merkmalen anpassen kann.",
    "id": "[qa]-adressen:-person-editieren",
    "keyword": "Feature",
    "uri": "accountMenuAddressesPersonEdit.feature"
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1055"
      }
    ],
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 12378389800,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 8,
        "name": "Check elements addresses menu person new",
        "description": "",
        "id": "[qa]-adressen:-person-neu;check-elements-addresses-menu-person-new",
        "after": [
          {
            "result": {
              "duration": 69524700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9434142900,
              "status": "passed"
            },
            "line": 9,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 166872500,
              "status": "passed"
            },
            "line": 10,
            "name": "I am on the create new person page",
            "match": {
              "location": "AddressCreatePersonSteps.i_am_on_the_create_new_person_page()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1144133800,
              "error_message": "java.lang.AssertionError: personDetailsFormView.firstName is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.BaseSteps.all_the_elements_looked_for_are_being_displayed(BaseSteps.java:66)\r\n\tat ✽.Then all the elements looked for are being displayed(accountMenuAddressesPersonNew.feature:11)\r\n",
              "status": "failed"
            },
            "line": 11,
            "name": "all the elements looked for are being displayed",
            "match": {
              "location": "BaseSteps.all_the_elements_looked_for_are_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Vorname",
                  "personDetailsFormView.firstName"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Nachname",
                  "personDetailsFormView.lastName"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Position",
                  "personDetailsFormView.position"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Abteilung",
                  "personDetailsFormView.department"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Firma",
                  "personDetailsFormView.selectedCompany"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Art der E-Mail Adresse",
                  "emailAdressFormView.emailAddress[0].emailAddressTypes"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Email-Adresse",
                  "emailAdressFormView.emailAddress[0].address"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Nationalität",
                  "personDetailsFormView.nationality"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Strasse",
                  "addressFormView.address[0].street"
                ],
                "line": 20
              },
              {
                "cells": [
                  "PLZ",
                  "addressFormView.address[0].zipCode"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Stadt",
                  "addressFormView.address[0].city"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Land",
                  "addressFormView.address[0].countries"
                ],
                "line": 23
              },
              {
                "cells": [
                  "Anrede",
                  "personDetailsFormView.salutationTypes"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Titel",
                  "personDetailsFormView.titles"
                ],
                "line": 25
              },
              {
                "cells": [
                  "VCard Import",
                  "personCreateFormView.parseVCard"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Speichern 1",
                  "personDetailsFormView.create"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Speichern 2",
                  "person.createPerson"
                ],
                "line": 28
              },
              {
                "cells": [
                  "Kunde",
                  "contactTypeFormView.contactTypes[0].CUSTOMER"
                ],
                "line": 29
              },
              {
                "cells": [
                  "Freiberufler/in",
                  "contactTypeFormView.contactTypes[1].FREELANCER"
                ],
                "line": 30
              },
              {
                "cells": [
                  "Partner",
                  "contactTypeFormView.contactTypes[2].PARTNER"
                ],
                "line": 31
              },
              {
                "cells": [
                  "Lieferant",
                  "contactTypeFormView.contactTypes[3].SUPPLIER"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Mitarbeiter/in",
                  "contactTypeFormView.contactTypes[4].EMPLOYEE"
                ],
                "line": 33
              },
              {
                "cells": [
                  "Angestellte/r (extern)",
                  "contactTypeFormView.contactTypes[5].EMPLOYEE_EXTERN"
                ],
                "line": 34
              },
              {
                "cells": [
                  "Interessent",
                  "contactTypeFormView.contactTypes[6].INTERESTED"
                ],
                "line": 35
              },
              {
                "cells": [
                  "team neusta",
                  "contactTypeFormView.contactTypes[7].TEAM_NEUSTA"
                ],
                "line": 36
              },
              {
                "cells": [
                  "Ein besonderer Tag",
                  "campaignsFormView.campaign.0"
                ],
                "line": 37
              },
              {
                "cells": [
                  "Weihnachtsgeschenk",
                  "campaignsFormView.campaign.1"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Weihnachtsgruß",
                  "campaignsFormView.campaign.2"
                ],
                "line": 39
              },
              {
                "cells": [
                  "Willkommensbox erhalten",
                  "campaignsFormView.campaign.3"
                ],
                "line": 40
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 7,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3283598500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 42,
        "name": "Person new create success",
        "description": "",
        "id": "[qa]-adressen:-person-neu;person-new-create-success",
        "after": [
          {
            "result": {
              "duration": 62534300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9546942500,
              "status": "passed"
            },
            "line": 43,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1016574700,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Wayne, Bruce\" does not already exist(accountMenuAddressesPersonNew.feature:44)\r\n",
              "status": "failed"
            },
            "line": 44,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 45,
            "name": "I create a new person \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 46
              },
              {
                "cells": [
                  "position",
                  "Batman"
                ],
                "line": 47
              },
              {
                "cells": [
                  "department",
                  "Verbrechensbekämpfung"
                ],
                "line": 48
              },
              {
                "cells": [
                  "phone",
                  "Geschäftlich: 0123456789"
                ],
                "line": 49
              },
              {
                "cells": [
                  "website",
                  "https://wayne.enterprise"
                ],
                "line": 50
              },
              {
                "cells": [
                  "email",
                  "Geschäftlich: bruce@wayne.enterprise"
                ],
                "line": 51
              },
              {
                "cells": [
                  "birthdate",
                  "01.01.1980"
                ],
                "line": 52
              },
              {
                "cells": [
                  "street",
                  "Musterstraße"
                ],
                "line": 53
              },
              {
                "cells": [
                  "zipcode",
                  "31337"
                ],
                "line": 54
              },
              {
                "cells": [
                  "city",
                  "Gotham City"
                ],
                "line": 55
              },
              {
                "cells": [
                  "country",
                  "Deutschland"
                ],
                "line": 56
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 57
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 58,
            "name": "the person \"Bruce Wayne\" is created",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 12
                }
              ],
              "location": "AddressCreatePersonSteps.the_person_is_created(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "the person details are",
            "match": {
              "location": "AddressEditPersonSteps.the_person_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Herr Bruce Wayne"
                ],
                "line": 61
              },
              {
                "cells": [
                  "position",
                  "Batman"
                ],
                "line": 62
              },
              {
                "cells": [
                  "department",
                  "Verbrechensbekämpfung"
                ],
                "line": 63
              },
              {
                "cells": [
                  "phone",
                  "Geschäftlich +49 123456789"
                ],
                "line": 64
              },
              {
                "cells": [
                  "website",
                  "https://wayne.enterprise/"
                ],
                "line": 65
              },
              {
                "cells": [
                  "email",
                  "Geschäftlich bruce@wayne.enterprise"
                ],
                "line": 66
              },
              {
                "cells": [
                  "birthdate",
                  "01.01.1980"
                ],
                "line": 67
              },
              {
                "cells": [
                  "address",
                  "🏢 Musterstraße, 31337 Gotham City, Deutschland"
                ],
                "line": 68
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 69
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18081696900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 71,
        "name": "Person new create success [minimal requirements]",
        "description": "",
        "id": "[qa]-adressen:-person-neu;person-new-create-success-[minimal-requirements]",
        "after": [
          {
            "result": {
              "duration": 63381000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9128629500,
              "status": "passed"
            },
            "line": 72,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 650338600,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Wayne, Bruce\" does not already exist(accountMenuAddressesPersonNew.feature:73)\r\n",
              "status": "failed"
            },
            "line": 73,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 74,
            "name": "I create a new person \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 75
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 76
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "the person \"Bruce Wayne\" is created",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 12
                }
              ],
              "location": "AddressCreatePersonSteps.the_person_is_created(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 78,
            "name": "I am on the edit person page of \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 33
                }
              ],
              "location": "AddressEditPersonSteps.i_am_on_the_edit_person_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "the person details are",
            "match": {
              "location": "AddressEditPersonSteps.the_person_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Herr Bruce Wayne"
                ],
                "line": 80
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 81
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3507936400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 83,
        "name": "Person new create error [missing contact type]",
        "description": "",
        "id": "[qa]-adressen:-person-neu;person-new-create-error-[missing-contact-type]",
        "after": [
          {
            "result": {
              "duration": 114691900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8683583500,
              "status": "passed"
            },
            "line": 84,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 909644700,
              "error_message": "java.lang.AssertionError: Person list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.addresses.AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(AddressCreatePersonSteps.java:43)\r\n\tat ✽.And I have checked that the person \"Wayne, Bruce\" does not already exist(accountMenuAddressesPersonNew.feature:85)\r\n",
              "status": "failed"
            },
            "line": 85,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 86,
            "name": "I create a new person \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 87
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 88,
            "name": "an error message is being displayed \"required\"",
            "match": {
              "arguments": [
                {
                  "val": "required",
                  "offset": 37
                }
              ],
              "location": "BaseSteps.an_error_message_is_being_displayed(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4406825500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 90,
        "name": "Person new create success",
        "description": "",
        "id": "[qa]-adressen:-person-neu;person-new-create-success",
        "after": [
          {
            "result": {
              "duration": 95625600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "undefined"
            },
            "line": 91,
            "name": "I have logged into my account as standard test12",
            "match": {},
            "keyword": "Given "
          }
        ]
      }
    ],
    "name": "[QA] Adressen: Person Neu",
    "description": "Als B4U-Nutzer möchte ich unter dem Menüpunkt \"Person Neu\" eine Anlagemaske mit Eingabemöglichkeiten\r\nfür verschiedene personenbezogene Merkmale sehen,\r\ndamit eine neue Person mit den mir bekannten relevanten Merkmalen im System anlegen kann",
    "id": "[qa]-adressen:-person-neu",
    "keyword": "Feature",
    "uri": "accountMenuAddressesPersonNew.feature"
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1045"
      }
    ],
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 14935313300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 8,
        "name": "Check menu entries administration",
        "description": "",
        "id": "[qa]-account:-menüpunkt-administration;check-menu-entries-administration",
        "after": [
          {
            "result": {
              "duration": 138697300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9827450900,
              "status": "passed"
            },
            "line": 9,
            "name": "I have logged into my account as admin user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_admin()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 662527700,
              "status": "passed"
            },
            "line": 10,
            "name": "I look at the menu entry \"navigationView.Administration\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Administration",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 646575900,
              "status": "passed"
            },
            "line": 11,
            "name": "all the onmouse over entries looked for are being displayed",
            "match": {
              "location": "MenuSteps.all_the_onmouse_over_entries_looked_for_are_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Know-How",
                  "navigationView.Administration.Know-How"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Aufgabentypen",
                  "navigationView.Administration.Aufgabentypen"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Konfiguration",
                  "navigationView.Administration.Konfiguration"
                ],
                "line": 14
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 7,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 7325821200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 24,
        "name": "Check menu entries administration goals",
        "description": "",
        "id": "[qa]-account:-menüpunkt-administration;check-menu-entries-administration-goals;;2",
        "after": [
          {
            "result": {
              "duration": 110872300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10419675800,
              "status": "passed"
            },
            "line": 18,
            "name": "I have logged into my account as admin user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_admin()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 451293100,
              "status": "passed"
            },
            "line": 19,
            "name": "I look at the menu entry \"navigationView.Administration\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Administration",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1653249700,
              "status": "passed"
            },
            "line": 20,
            "name": "I click on the menu entry \"navigationView.Administration.Know-How\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Administration.Know-How",
                  "offset": 27
                }
              ],
              "location": "MenuSteps.i_click_on_the_menu_entry(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36950100,
              "status": "passed"
            },
            "line": 21,
            "name": "the target page is being displayed \"/knowhow/administration\"",
            "match": {
              "arguments": [
                {
                  "val": "/knowhow/administration",
                  "offset": 36
                }
              ],
              "location": "MenuSteps.the_target_page_is_being_displayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 16,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3296996400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 25,
        "name": "Check menu entries administration goals",
        "description": "",
        "id": "[qa]-account:-menüpunkt-administration;check-menu-entries-administration-goals;;3",
        "after": [
          {
            "result": {
              "duration": 79416200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9843461400,
              "status": "passed"
            },
            "line": 18,
            "name": "I have logged into my account as admin user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_admin()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 499505300,
              "status": "passed"
            },
            "line": 19,
            "name": "I look at the menu entry \"navigationView.Administration\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Administration",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 831294300,
              "status": "passed"
            },
            "line": 20,
            "name": "I click on the menu entry \"navigationView.Administration.Aufgabentypen\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Administration.Aufgabentypen",
                  "offset": 27
                }
              ],
              "location": "MenuSteps.i_click_on_the_menu_entry(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74692300,
              "status": "passed"
            },
            "line": 21,
            "name": "the target page is being displayed \"/taskType/list\"",
            "match": {
              "arguments": [
                {
                  "val": "/taskType/list",
                  "offset": 36
                }
              ],
              "location": "MenuSteps.the_target_page_is_being_displayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 16,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18015326700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 26,
        "name": "Check menu entries administration goals",
        "description": "",
        "id": "[qa]-account:-menüpunkt-administration;check-menu-entries-administration-goals;;4",
        "after": [
          {
            "result": {
              "duration": 85487800,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9390206900,
              "status": "passed"
            },
            "line": 18,
            "name": "I have logged into my account as admin user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_admin()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 455633100,
              "status": "passed"
            },
            "line": 19,
            "name": "I look at the menu entry \"navigationView.Administration\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Administration",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1100166000,
              "status": "passed"
            },
            "line": 20,
            "name": "I click on the menu entry \"navigationView.Administration.Konfiguration\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Administration.Konfiguration",
                  "offset": 27
                }
              ],
              "location": "MenuSteps.i_click_on_the_menu_entry(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27798100,
              "status": "passed"
            },
            "line": 21,
            "name": "the target page is being displayed \"/configuration/list\"",
            "match": {
              "arguments": [
                {
                  "val": "/configuration/list",
                  "offset": 36
                }
              ],
              "location": "MenuSteps.the_target_page_is_being_displayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 16,
            "name": "@ugly"
          }
        ]
      }
    ],
    "name": "[QA] Account: Menüpunkt Administration",
    "description": "Als B4U-Nutzer möchte ich unter dem Menüpunkt \"Administration\" weitere Menü-Unterpunkte sehen,\r\ndamit ich die verschiedenen Administrationssparten genauer auswählen kann",
    "id": "[qa]-account:-menüpunkt-administration",
    "keyword": "Feature",
    "uri": "accountMenuAdministration.feature"
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1051"
      }
    ],
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3954118200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 8,
        "name": "Check menu entries candidacies",
        "description": "",
        "id": "[qa]-account:-menüpunkt-bewerbungen;check-menu-entries-candidacies",
        "after": [
          {
            "result": {
              "duration": 113363300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8484950900,
              "status": "passed"
            },
            "line": 9,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 683279800,
              "status": "passed"
            },
            "line": 10,
            "name": "I look at the menu entry \"navigationView.Bewerbungen\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Bewerbungen",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 105047000,
              "status": "passed"
            },
            "line": 11,
            "name": "all the onmouse over entries looked for are being displayed",
            "match": {
              "location": "MenuSteps.all_the_onmouse_over_entries_looked_for_are_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Alle",
                  "navigationView.Bewerbungen.Alle"
                ],
                "line": 12
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 7,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4547950200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 22,
        "name": "Check menu entries candidacies goals",
        "description": "",
        "id": "[qa]-account:-menüpunkt-bewerbungen;check-menu-entries-candidacies-goals;;2",
        "after": [
          {
            "result": {
              "duration": 142516200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8029696800,
              "status": "passed"
            },
            "line": 16,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 466590400,
              "status": "passed"
            },
            "line": 17,
            "name": "I look at the menu entry \"navigationView.Bewerbungen\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Bewerbungen",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6110014100,
              "status": "passed"
            },
            "line": 18,
            "name": "I click on the menu entry \"navigationView.Bewerbungen.Alle\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Bewerbungen.Alle",
                  "offset": 27
                }
              ],
              "location": "MenuSteps.i_click_on_the_menu_entry(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 45423700,
              "status": "passed"
            },
            "line": 19,
            "name": "the target page is being displayed \"/jobAccount\"",
            "match": {
              "arguments": [
                {
                  "val": "/jobAccount",
                  "offset": 36
                }
              ],
              "location": "MenuSteps.the_target_page_is_being_displayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 14,
            "name": "@ugly"
          }
        ]
      }
    ],
    "name": "[QA] Account: Menüpunkt Bewerbungen",
    "description": "Als B4U-Nutzer möchte ich unter dem Menüpunkt \"Bewerbungen\" weitere Menü-Unterpunkte sehen,\r\ndamit ich die verschiedenen E-Mail Sparten genauer auswählen kann",
    "id": "[qa]-account:-menüpunkt-bewerbungen",
    "keyword": "Feature",
    "uri": "accountMenuCandidacies.feature"
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1065"
      }
    ],
    "line": 3,
    "name": "[QA] Account: Menüpunkt Bewerbungen",
    "description": "Als B4U-Nutzer möchte ich unter dem Menüpunkt \"Bewerbungen\" eine Suchmöglichkeit sehen,\r\ndamit ich die gesuchte Bewerbung schneller finden kann",
    "id": "[qa]-account:-menüpunkt-bewerbungen",
    "keyword": "Feature",
    "uri": "accountMenuCandidaciesAll.feature"
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1044"
      }
    ],
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 16328175500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 8,
        "name": "Check menu entries contact",
        "description": "",
        "id": "[qa]-account:-menüpunkt-kontakte;check-menu-entries-contact",
        "after": [
          {
            "result": {
              "duration": 111397300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8003473100,
              "status": "passed"
            },
            "line": 9,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 451691000,
              "status": "passed"
            },
            "line": 10,
            "name": "I look at the menu entry \"navigationView.Kontakte\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Kontakte",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 145062800,
              "status": "passed"
            },
            "line": 11,
            "name": "all the onmouse over entries looked for are being displayed",
            "match": {
              "location": "MenuSteps.all_the_onmouse_over_entries_looked_for_are_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Alle",
                  "navigationView.Kontakte.Alle"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Neu",
                  "navigationView.Kontakte.Neu"
                ],
                "line": 13
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 7,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3154067700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 23,
        "name": "Check menu entries contact goals",
        "description": "",
        "id": "[qa]-account:-menüpunkt-kontakte;check-menu-entries-contact-goals;;2",
        "after": [
          {
            "result": {
              "duration": 65075400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8833454200,
              "status": "passed"
            },
            "line": 17,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 631713100,
              "status": "passed"
            },
            "line": 18,
            "name": "I look at the menu entry \"navigationView.Kontakte\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Kontakte",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1825742200,
              "status": "passed"
            },
            "line": 19,
            "name": "I click on the menu entry \"navigationView.Kontakte.Alle\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Kontakte.Alle",
                  "offset": 27
                }
              ],
              "location": "MenuSteps.i_click_on_the_menu_entry(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27528900,
              "status": "passed"
            },
            "line": 20,
            "name": "the target page is being displayed \"/contact/list\"",
            "match": {
              "arguments": [
                {
                  "val": "/contact/list",
                  "offset": 36
                }
              ],
              "location": "MenuSteps.the_target_page_is_being_displayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 15,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 18238408600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 24,
        "name": "Check menu entries contact goals",
        "description": "",
        "id": "[qa]-account:-menüpunkt-kontakte;check-menu-entries-contact-goals;;3",
        "after": [
          {
            "result": {
              "duration": 169120200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 10032623000,
              "status": "passed"
            },
            "line": 17,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 483878900,
              "status": "passed"
            },
            "line": 18,
            "name": "I look at the menu entry \"navigationView.Kontakte\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Kontakte",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1479935600,
              "status": "passed"
            },
            "line": 19,
            "name": "I click on the menu entry \"navigationView.Kontakte.Neu\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Kontakte.Neu",
                  "offset": 27
                }
              ],
              "location": "MenuSteps.i_click_on_the_menu_entry(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 49930600,
              "status": "passed"
            },
            "line": 20,
            "name": "the target page is being displayed \"/contact/create\"",
            "match": {
              "arguments": [
                {
                  "val": "/contact/create",
                  "offset": 36
                }
              ],
              "location": "MenuSteps.the_target_page_is_being_displayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 15,
            "name": "@ugly"
          }
        ]
      }
    ],
    "name": "[QA] Account: Menüpunkt Kontakte",
    "description": "Als B4U-Nutzer möchte ich unter dem Menüpunkt \"Kontakte\" weitere Menü-Unterpunkte sehen,\r\ndamit ich die verschiedenen Kontaktsparten genauer auswählen kann",
    "id": "[qa]-account:-menüpunkt-kontakte",
    "keyword": "Feature",
    "uri": "accountMenuContact.feature"
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1057"
      }
    ],
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 12875869200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 9,
        "name": "Check elements contact menu all",
        "description": "",
        "id": "[qa]-kontakte:-alle;check-elements-contact-menu-all",
        "after": [
          {
            "result": {
              "duration": 74473100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8083092100,
              "status": "passed"
            },
            "line": 10,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 721955700,
              "status": "passed"
            },
            "line": 11,
            "name": "I am on the contact list page",
            "match": {
              "location": "ContactListSteps.i_am_on_the_contact_address_list_page()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1071973500,
              "error_message": "java.lang.AssertionError: contactTableView.selectedForPerson.select is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.BaseSteps.all_the_elements_looked_for_are_being_displayed(BaseSteps.java:66)\r\n\tat ✽.Then all the elements looked for are being displayed(accountMenuContactAll.feature:12)\r\n",
              "status": "failed"
            },
            "line": 12,
            "name": "all the elements looked for are being displayed",
            "match": {
              "location": "BaseSteps.all_the_elements_looked_for_are_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Zuständig",
                  "contactTableView.selectedForPerson.select"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Status",
                  "contactTableView.selectedTaskType.select"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Titel",
                  "contactTableView.title"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Kontaktperson",
                  "contactTableView.selectedWithPerson"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Kontaktfirma",
                  "contactTableView.selectedWithCompany"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Neuer Kontakt",
                  "contactTableView.create"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Filter zurücksetzen",
                  "contactTableView.clear"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Suchen 1",
                  "contactTableView.search1"
                ],
                "line": 20
              },
              {
                "cells": [
                  "Suchen 2",
                  "contactTableView.search2"
                ],
                "line": 21
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 8,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3824694000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 23,
        "name": "Check if it is possible to navigate the create contact page",
        "description": "",
        "id": "[qa]-kontakte:-alle;check-if-it-is-possible-to-navigate-the-create-contact-page",
        "after": [
          {
            "result": {
              "duration": 180538900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8974140700,
              "status": "passed"
            },
            "line": 24,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 737221800,
              "status": "passed"
            },
            "line": 25,
            "name": "I am on the contact list page",
            "match": {
              "location": "ContactListSteps.i_am_on_the_contact_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40417200,
              "error_message": "java.lang.AssertionError: Contact list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.contact.ContactListSteps.i_want_to_create_a_new_contact(ContactListSteps.java:81)\r\n\tat ✽.When I want to create a new contact(accountMenuContactAll.feature:26)\r\n",
              "status": "failed"
            },
            "line": 26,
            "name": "I want to create a new contact",
            "match": {
              "location": "ContactListSteps.i_want_to_create_a_new_contact()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "the create contact page is being displayed",
            "match": {
              "location": "ContactCreateSteps.the_create_contact_page_is_being_displayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12183260700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 29,
        "name": "Check if it is possible to clear the search filter",
        "description": "",
        "id": "[qa]-kontakte:-alle;check-if-it-is-possible-to-clear-the-search-filter",
        "after": [
          {
            "result": {
              "duration": 235179500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9188299600,
              "status": "passed"
            },
            "line": 30,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 821687500,
              "status": "passed"
            },
            "line": 31,
            "name": "I am on the contact list page",
            "match": {
              "location": "ContactListSteps.i_am_on_the_contact_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 85261500,
              "error_message": "java.lang.AssertionError: Contact list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.contact.ContactListSteps.i_provide_the_following_data_to_the_contact_search_filter(ContactListSteps.java:30)\r\n\tat ✽.And I provide the following data to the contact search filter(accountMenuContactAll.feature:32)\r\n",
              "status": "failed"
            },
            "line": 32,
            "name": "I provide the following data to the contact search filter",
            "match": {
              "location": "ContactListSteps.i_provide_the_following_data_to_the_contact_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "selectedforperson",
                  "Thorsten Prüser"
                ],
                "line": 33
              },
              {
                "cells": [
                  "selectedtasktype",
                  "Offen"
                ],
                "line": 34
              },
              {
                "cells": [
                  "title",
                  "Ironman"
                ],
                "line": 35
              },
              {
                "cells": [
                  "selectedwithperson",
                  "Tony Stark"
                ],
                "line": 36
              },
              {
                "cells": [
                  "selectedwithcompany",
                  "Stark Industries"
                ],
                "line": 37
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "I clear the contact search filter",
            "match": {
              "location": "ContactListSteps.i_clear_the_contact_search_filter()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "the contact search filter is empty",
            "match": {
              "location": "ContactListSteps.the_contact_search_filter_is_empty()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4600805900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 41,
        "name": "Check if the search results match the search filter criteria",
        "description": "",
        "id": "[qa]-kontakte:-alle;check-if-the-search-results-match-the-search-filter-criteria",
        "after": [
          {
            "result": {
              "duration": 120892000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10396029100,
              "status": "passed"
            },
            "line": 42,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 515059300,
              "status": "passed"
            },
            "line": 43,
            "name": "I am on the contact list page",
            "match": {
              "location": "ContactListSteps.i_am_on_the_contact_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36973500,
              "error_message": "java.lang.AssertionError: Contact list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.contact.ContactListSteps.i_provide_the_following_data_to_the_contact_search_filter(ContactListSteps.java:30)\r\n\tat ✽.And I provide the following data to the contact search filter(accountMenuContactAll.feature:44)\r\n",
              "status": "failed"
            },
            "line": 44,
            "name": "I provide the following data to the contact search filter",
            "match": {
              "location": "ContactListSteps.i_provide_the_following_data_to_the_contact_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "selectedforperson",
                  "Thorsten Prüser"
                ],
                "line": 45
              },
              {
                "cells": [
                  "selectedtasktype",
                  "Abgeschlossen"
                ],
                "line": 46
              },
              {
                "cells": [
                  "title",
                  "Akquise .NET"
                ],
                "line": 47
              },
              {
                "cells": [
                  "selectedwithperson",
                  "Weckermann Michael (4329)"
                ],
                "line": 48
              },
              {
                "cells": [
                  "selectedwithcompany",
                  "E.H. Worlée \u0026 Co. (GmbH \u0026 Co. KG) (1989)"
                ],
                "line": 49
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 50,
            "name": "I list the contact search results",
            "match": {
              "location": "ContactListSteps.i_list_the_contact_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 51,
            "name": "the contact search results should only contain",
            "match": {
              "location": "ContactListSteps.the_contact_search_results_should_contain(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Akquise .NET",
                  "Thorsten Prüser",
                  "Michael Weckermann",
                  "E.H. Worlée \u0026 Co. (GmbH \u0026 Co. KG)"
                ],
                "line": 52
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 17032297600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 54,
        "name": "Check if the search filters are correct",
        "description": "",
        "id": "[qa]-kontakte:-alle;check-if-the-search-filters-are-correct",
        "after": [
          {
            "result": {
              "duration": 113533700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9397447300,
              "status": "passed"
            },
            "line": 55,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 739656400,
              "status": "passed"
            },
            "line": 56,
            "name": "I am on the contact list page",
            "match": {
              "location": "ContactListSteps.i_am_on_the_contact_address_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13497100,
              "error_message": "java.lang.AssertionError: Contact list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.contact.ContactListSteps.i_provide_the_following_data_to_the_contact_search_filter(ContactListSteps.java:30)\r\n\tat ✽.And I provide the following data to the contact search filter(accountMenuContactAll.feature:57)\r\n",
              "status": "failed"
            },
            "line": 57,
            "name": "I provide the following data to the contact search filter",
            "match": {
              "location": "ContactListSteps.i_provide_the_following_data_to_the_contact_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "selectedwithcompany",
                  "Hammer Industries"
                ],
                "line": 58
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 59,
            "name": "I list the contact search results",
            "match": {
              "location": "ContactListSteps.i_list_the_contact_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 60,
            "name": "the contact search results are empty",
            "match": {
              "location": "ContactListSteps.the_contact_search_results_are_empty()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "[QA] Kontakte: Alle",
    "description": "Als B4U-Nutzer möchte ich unter dem Menüpunkt \"Kontakte\" eine Suchmaske mit Eingabemöglichkeiten\r\nfür verschiedene kontaktbezogenen Merkmalen sehen,\r\ndamit ich den gesuchten Kontakt schneller finden kann",
    "id": "[qa]-kontakte:-alle",
    "keyword": "Feature",
    "uri": "accountMenuContactAll.feature"
  },
  {
    "line": 1,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 4128498500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 5,
        "name": "Change the details of an existing contact",
        "description": "",
        "id": "[qa]-kontakte-editieren;change-the-details-of-an-existing-contact",
        "after": [
          {
            "result": {
              "duration": 125174200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10724336400,
              "status": "passed"
            },
            "line": 6,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 702633600,
              "error_message": "java.lang.AssertionError: Contact list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.contact.ContactCreateSteps.i_have_checked_that_the_contact_does_not_already_exist(ContactCreateSteps.java:49)\r\n\tat ✽.And I have checked that the contact \"Justice League\" does not already exist(accountMenuContactEdit.feature:7)\r\n",
              "status": "failed"
            },
            "line": 7,
            "name": "I have checked that the contact \"Justice League\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 33
                }
              ],
              "location": "ContactCreateSteps.i_have_checked_that_the_contact_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 8,
            "name": "I have checked that the contact \"The Avengers\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "The Avengers",
                  "offset": 33
                }
              ],
              "location": "ContactCreateSteps.i_have_checked_that_the_contact_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 9,
            "name": "I create a new simple contact \"Justice League\"",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 31
                }
              ],
              "location": "ContactCreateSteps.i_create_a_new_simple_contact(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 10,
            "name": "I am on the contact edit page of \"Justice League\"",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 34
                }
              ],
              "location": "ContactEditSteps.i_am_on_the_contact_edit_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 11,
            "name": "I edit the contact details",
            "match": {
              "location": "ContactEditSteps.i_edit_the_contact_details(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "The Avengers"
                ],
                "line": 12
              },
              {
                "cells": [
                  "forperson",
                  "Admin, TestB4U"
                ],
                "line": 13
              },
              {
                "cells": [
                  "withperson",
                  "Prüser, Thorsten"
                ],
                "line": 14
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 15,
            "name": "the contact details are",
            "match": {
              "location": "ContactEditSteps.the_contact_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "The Avengers"
                ],
                "line": 16
              },
              {
                "cells": [
                  "forperson",
                  "Admin, TestB4U"
                ],
                "line": 17
              },
              {
                "cells": [
                  "withperson",
                  "Prüser, Thorsten"
                ],
                "line": 18
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3364505100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 20,
        "name": "Add a new note to an existing contact",
        "description": "",
        "id": "[qa]-kontakte-editieren;add-a-new-note-to-an-existing-contact",
        "after": [
          {
            "result": {
              "duration": 128511500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10511529000,
              "status": "passed"
            },
            "line": 21,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 801694100,
              "error_message": "java.lang.AssertionError: Contact list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.contact.ContactCreateSteps.i_have_ensured_that_the_contact_i_want_to_edit_already_exist(ContactCreateSteps.java:140)\r\n\tat ✽.And I have ensured that the contact \"Justice League\" already exist(accountMenuContactEdit.feature:22)\r\n",
              "status": "failed"
            },
            "line": 22,
            "name": "I have ensured that the contact \"Justice League\" already exist",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 33
                }
              ],
              "location": "ContactCreateSteps.i_have_ensured_that_the_contact_i_want_to_edit_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "I am on the contact edit page of \"Justice League\"",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 34
                }
              ],
              "location": "ContactEditSteps.i_am_on_the_contact_edit_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 24,
            "name": "I add a new note to the contact \"I am Batman!!!\"",
            "match": {
              "arguments": [
                {
                  "val": "I am Batman!!!",
                  "offset": 33
                }
              ],
              "location": "ContactEditSteps.i_add_a_new_note_to_the_contact(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 25,
            "name": "I add a new note to the contact \"I am Groot!!!\"",
            "match": {
              "arguments": [
                {
                  "val": "I am Groot!!!",
                  "offset": 33
                }
              ],
              "location": "ContactEditSteps.i_add_a_new_note_to_the_contact(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "the contact history should only contain",
            "match": {
              "location": "ContactEditSteps.the_contact_history_should_contain(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "TestB4U User",
                  "I am Groot!!!"
                ],
                "line": 27
              },
              {
                "cells": [
                  "TestB4U User",
                  "I am Batman!!!"
                ],
                "line": 28
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "[QA] Kontakte editieren",
    "description": "Als B4U-Nutzer möchte ich bestehende Kontakte editieren,\r\ndamit ich die hinterlegten Daten neuen Begebenheiten anpassen kann",
    "id": "[qa]-kontakte-editieren",
    "keyword": "Feature",
    "uri": "accountMenuContactEdit.feature"
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1062"
      }
    ],
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 14400470200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 9,
        "name": "Check elements addresses menu person new",
        "description": "",
        "id": "[qa]-kontakte:-neu;check-elements-addresses-menu-person-new",
        "after": [
          {
            "result": {
              "duration": 121652900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8007931400,
              "status": "passed"
            },
            "line": 10,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 509748000,
              "status": "passed"
            },
            "line": 11,
            "name": "I am on the create new contact page",
            "match": {
              "location": "ContactCreateSteps.i_am_on_the_create_new_contact_page()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1068793600,
              "error_message": "java.lang.AssertionError: contactView.name is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.BaseSteps.all_the_elements_looked_for_are_being_displayed(BaseSteps.java:66)\r\n\tat ✽.Then all the elements looked for are being displayed(accountMenuContactNew.feature:12)\r\n",
              "status": "failed"
            },
            "line": 12,
            "name": "all the elements looked for are being displayed",
            "match": {
              "location": "BaseSteps.all_the_elements_looked_for_are_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Kontakt",
                  "contactView.name"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Kontakt für",
                  "contactView.forPerson"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Kontakt mit",
                  "contactView.withPerson"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Kontaktfirma",
                  "contactView.withCompany"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Speichern",
                  "contactView.save"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Sortieren nach",
                  "contactView.down"
                ],
                "line": 18
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 8,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3211196500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 20,
        "name": "Contact new create success",
        "description": "",
        "id": "[qa]-kontakte:-neu;contact-new-create-success",
        "after": [
          {
            "result": {
              "duration": 122132100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9070075900,
              "status": "passed"
            },
            "line": 21,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 787789800,
              "error_message": "java.lang.AssertionError: Contact list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.contact.ContactCreateSteps.i_have_checked_that_the_contact_does_not_already_exist(ContactCreateSteps.java:49)\r\n\tat ✽.And I have checked that the contact \"Justice League\" does not already exist(accountMenuContactNew.feature:22)\r\n",
              "status": "failed"
            },
            "line": 22,
            "name": "I have checked that the contact \"Justice League\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 33
                }
              ],
              "location": "ContactCreateSteps.i_have_checked_that_the_contact_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 23,
            "name": "I create a new contact \"Justice League\"",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 24
                }
              ],
              "location": "ContactCreateSteps.i_create_a_new_contact(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "forperson",
                  "User, TestB4U"
                ],
                "line": 24
              },
              {
                "cells": [
                  "withperson",
                  "Prüser, Thorsten"
                ],
                "line": 25
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 26,
            "name": "the contact \"Justice League\" is created",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 13
                }
              ],
              "location": "ContactCreateSteps.the_contact_is_created(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 27,
            "name": "I am on the contact edit page of \"Justice League\"",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 34
                }
              ],
              "location": "ContactEditSteps.i_am_on_the_contact_edit_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 28,
            "name": "the contact details are",
            "match": {
              "location": "ContactEditSteps.the_contact_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Justice League"
                ],
                "line": 29
              },
              {
                "cells": [
                  "forperson",
                  "User, TestB4U"
                ],
                "line": 30
              },
              {
                "cells": [
                  "withperson",
                  "Prüser, Thorsten"
                ],
                "line": 31
              },
              {
                "cells": [
                  "withcompany",
                  "neusta consulting GmbH"
                ],
                "line": 32
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 11100676100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 34,
        "name": "Contact new create success [minimal requirements]",
        "description": "",
        "id": "[qa]-kontakte:-neu;contact-new-create-success-[minimal-requirements]",
        "after": [
          {
            "result": {
              "duration": 62228700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11452230400,
              "status": "passed"
            },
            "line": 35,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 842077600,
              "error_message": "java.lang.AssertionError: Contact list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.contact.ContactCreateSteps.i_have_checked_that_the_contact_does_not_already_exist(ContactCreateSteps.java:49)\r\n\tat ✽.And I have checked that the contact \"Justice League\" does not already exist(accountMenuContactNew.feature:36)\r\n",
              "status": "failed"
            },
            "line": 36,
            "name": "I have checked that the contact \"Justice League\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 33
                }
              ],
              "location": "ContactCreateSteps.i_have_checked_that_the_contact_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 37,
            "name": "I create a new simple contact \"Justice League\"",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 31
                }
              ],
              "location": "ContactCreateSteps.i_create_a_new_simple_contact(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 38,
            "name": "the contact \"Justice League\" is created",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 13
                }
              ],
              "location": "ContactCreateSteps.the_contact_is_created(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 39,
            "name": "I am on the contact edit page of \"Justice League\"",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 34
                }
              ],
              "location": "ContactEditSteps.i_am_on_the_contact_edit_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 40,
            "name": "the contact details are",
            "match": {
              "location": "ContactEditSteps.the_contact_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Justice League"
                ],
                "line": 41
              },
              {
                "cells": [
                  "forperson",
                  "User, TestB4U"
                ],
                "line": 42
              },
              {
                "cells": [
                  "withperson",
                  "User, TestB4U"
                ],
                "line": 43
              },
              {
                "cells": [
                  "withcompany",
                  ""
                ],
                "line": 44
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3194706000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 46,
        "name": "Contact new create failure",
        "description": "",
        "id": "[qa]-kontakte:-neu;contact-new-create-failure",
        "after": [
          {
            "result": {
              "duration": 238175700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8715122200,
              "status": "passed"
            },
            "line": 47,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 808340400,
              "error_message": "java.lang.AssertionError: Contact list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.contact.ContactCreateSteps.i_have_checked_that_the_contact_does_not_already_exist(ContactCreateSteps.java:49)\r\n\tat ✽.And I have checked that the contact \"Justice League\" does not already exist(accountMenuContactNew.feature:48)\r\n",
              "status": "failed"
            },
            "line": 48,
            "name": "I have checked that the contact \"Justice League\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 33
                }
              ],
              "location": "ContactCreateSteps.i_have_checked_that_the_contact_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "I create a new contact \"\"",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 24
                }
              ],
              "location": "ContactCreateSteps.i_create_a_new_contact(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "forperson",
                  "User, TestB4U"
                ],
                "line": 50
              },
              {
                "cells": [
                  "withperson",
                  "Admin, TestB4U"
                ],
                "line": 51
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 52,
            "name": "an error message is being displayed \"required\"",
            "match": {
              "arguments": [
                {
                  "val": "required",
                  "offset": 37
                }
              ],
              "location": "BaseSteps.an_error_message_is_being_displayed(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "[QA] Kontakte: Neu",
    "description": "Als B4U-Nutzer möchte ich unter dem Menüpunkt \"Kontakte\" eine Maske mit Eingabemöglichkeiten\r\nfür verschiedene kontaktbezogene Merkmale sehen,\r\ndamit einen neuen Kontakt anlegen kann",
    "id": "[qa]-kontakte:-neu",
    "keyword": "Feature",
    "uri": "accountMenuContactNew.feature"
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1047"
      }
    ],
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 11591521400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 8,
        "name": "Check menu entries email",
        "description": "",
        "id": "[qa]-account:-menüpunkt-e-mail;check-menu-entries-email",
        "after": [
          {
            "result": {
              "duration": 159308200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9877804500,
              "status": "passed"
            },
            "line": 9,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 539454200,
              "status": "passed"
            },
            "line": 10,
            "name": "I look at the menu entry \"navigationView.E-Mail\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.E-Mail",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 220251800,
              "status": "passed"
            },
            "line": 11,
            "name": "all the onmouse over entries looked for are being displayed",
            "match": {
              "location": "MenuSteps.all_the_onmouse_over_entries_looked_for_are_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Alle",
                  "navigationView.E-Mail.Alle"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Neu",
                  "navigationView.E-Mail.Neu"
                ],
                "line": 13
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 7,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 5733489900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 23,
        "name": "Check menu entries email goals",
        "description": "",
        "id": "[qa]-account:-menüpunkt-e-mail;check-menu-entries-email-goals;;2",
        "after": [
          {
            "result": {
              "duration": 61124400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 11570648100,
              "status": "passed"
            },
            "line": 17,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 509217300,
              "status": "passed"
            },
            "line": 18,
            "name": "I look at the menu entry \"navigationView.E-Mail\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.E-Mail",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 669893500,
              "status": "passed"
            },
            "line": 19,
            "name": "I click on the menu entry \"navigationView.E-Mail.Alle\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.E-Mail.Alle",
                  "offset": 27
                }
              ],
              "location": "MenuSteps.i_click_on_the_menu_entry(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37927900,
              "status": "passed"
            },
            "line": 20,
            "name": "the target page is being displayed \"/email\"",
            "match": {
              "arguments": [
                {
                  "val": "/email",
                  "offset": 36
                }
              ],
              "location": "MenuSteps.the_target_page_is_being_displayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 15,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3404626000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 24,
        "name": "Check menu entries email goals",
        "description": "",
        "id": "[qa]-account:-menüpunkt-e-mail;check-menu-entries-email-goals;;3",
        "after": [
          {
            "result": {
              "duration": 123823200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9862665500,
              "status": "passed"
            },
            "line": 17,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 466305700,
              "status": "passed"
            },
            "line": 18,
            "name": "I look at the menu entry \"navigationView.E-Mail\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.E-Mail",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 754949100,
              "status": "passed"
            },
            "line": 19,
            "name": "I click on the menu entry \"navigationView.E-Mail.Neu\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.E-Mail.Neu",
                  "offset": 27
                }
              ],
              "location": "MenuSteps.i_click_on_the_menu_entry(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 32914300,
              "status": "passed"
            },
            "line": 20,
            "name": "the target page is being displayed \"/email/create\"",
            "match": {
              "arguments": [
                {
                  "val": "/email/create",
                  "offset": 36
                }
              ],
              "location": "MenuSteps.the_target_page_is_being_displayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 15,
            "name": "@ugly"
          }
        ]
      }
    ],
    "name": "[QA] Account: Menüpunkt E-Mail",
    "description": "Als B4U-Nutzer möchte ich unter dem Menüpunkt \"E-Mail\" weitere Menü-Unterpunkte sehen,\r\ndamit ich die verschiedenen E-Mail Sparten genauer auswählen kann",
    "id": "[qa]-account:-menüpunkt-e-mail",
    "keyword": "Feature",
    "uri": "accountMenuEmail.feature"
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1063"
      }
    ],
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 14504137600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 15,
        "name": "Check menu entries job advertisement goals",
        "description": "",
        "id": "[qa]-ausschreibungen;check-menu-entries-job-advertisement-goals;;2",
        "after": [
          {
            "result": {
              "duration": 117228900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7865977400,
              "status": "passed"
            },
            "line": 9,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 466186700,
              "status": "passed"
            },
            "line": 10,
            "name": "I look at the menu entry \"navigationView.Ausschreibungen\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Ausschreibungen",
                  "offset": 26
                }
              ],
              "location": "MenuSteps.i_look_at_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2418582700,
              "status": "passed"
            },
            "line": 11,
            "name": "I click on the menu entry \"navigationView.Ausschreibungen\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Ausschreibungen",
                  "offset": 27
                }
              ],
              "location": "MenuSteps.i_click_on_the_menu_entry(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 46149500,
              "status": "passed"
            },
            "line": 12,
            "name": "the target page is being displayed \"/job/list\"",
            "match": {
              "arguments": [
                {
                  "val": "/job/list",
                  "offset": 36
                }
              ],
              "location": "MenuSteps.the_target_page_is_being_displayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 7,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3397107700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 18,
        "name": "Check elements job advertisement",
        "description": "",
        "id": "[qa]-ausschreibungen;check-elements-job-advertisement",
        "after": [
          {
            "result": {
              "duration": 118368300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9507496000,
              "status": "passed"
            },
            "line": 19,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 312372100,
              "status": "passed"
            },
            "line": 20,
            "name": "I am on the job advertisement list page",
            "match": {
              "location": "JobAdvertisementListSteps.i_am_on_the_task_list_page()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1123833100,
              "error_message": "java.lang.AssertionError: jobAdvertisementListView.id is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.BaseSteps.all_the_elements_looked_for_are_being_displayed(BaseSteps.java:66)\r\n\tat ✽.Then all the elements looked for are being displayed(accountMenuJobAdvertisement.feature:21)\r\n",
              "status": "failed"
            },
            "line": 21,
            "name": "all the elements looked for are being displayed",
            "match": {
              "location": "BaseSteps.all_the_elements_looked_for_are_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Ausschr.ID",
                  "jobAdvertisementListView.id"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Mitarbeiter",
                  "jobAdvertisementListView.selectedForPerson"
                ],
                "line": 23
              },
              {
                "cells": [
                  "Position",
                  "jobAdvertisementListView.position"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Status",
                  "jobAdvertisement.stateTypes"
                ],
                "line": 25
              },
              {
                "cells": [
                  "geändert am von",
                  "jobAdvertisementListView.startDate"
                ],
                "line": 26
              },
              {
                "cells": [
                  "geändert am bis",
                  "jobAdvertisementListView.endDate"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Suchen",
                  "jobAdvertisementListView.search1"
                ],
                "line": 28
              },
              {
                "cells": [
                  "Suchen",
                  "jobAdvertisementListView.search2"
                ],
                "line": 29
              },
              {
                "cells": [
                  "Filter zurücksetzen",
                  "jobAdvertisementListView.clear"
                ],
                "line": 30
              },
              {
                "cells": [
                  "Veröffentlichen",
                  "jobAdvertisementListView.publish"
                ],
                "line": 31
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 17,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16308650800,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 34,
        "name": "Check dropdown entries job advertisement",
        "description": "",
        "id": "[qa]-ausschreibungen;check-dropdown-entries-job-advertisement",
        "after": [
          {
            "result": {
              "duration": 62739300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10077645000,
              "status": "passed"
            },
            "line": 35,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 184979700,
              "status": "passed"
            },
            "line": 36,
            "name": "I am on the job advertisement list page",
            "match": {
              "location": "JobAdvertisementListSteps.i_am_on_the_task_list_page()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1147159700,
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"id\",\"selector\":\"jobAdvertisement.stateTypes\"}\n  (Session info: chrome\u003d72.0.3626.81)\n  (Driver info: chromedriver\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926),platform\u003dLinux 4.9.125-linuxkit x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 1.15 seconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.0.1\u0027, revision: \u00271969d75\u0027, time: \u00272016-10-18 09:49:13 -0700\u0027\nSystem info: host: \u0027DESKTOP-IN4UB21\u0027, ip: \u002710.0.75.1\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_201\u0027\nDriver info: org.openqa.selenium.remote.RemoteWebDriver\nCapabilities [{mobileEmulationEnabled\u003dfalse, timeouts\u003d{implicit\u003d0, pageLoad\u003d300000, script\u003d30000}, hasTouchScreen\u003dfalse, platform\u003dLINUX, acceptSslCerts\u003dfalse, goog:chromeOptions\u003d{debuggerAddress\u003dlocalhost:41215}, acceptInsecureCerts\u003dfalse, webStorageEnabled\u003dtrue, browserName\u003dchrome, takesScreenshot\u003dtrue, javascriptEnabled\u003dtrue, setWindowRect\u003dtrue, unexpectedAlertBehaviour\u003dignore, applicationCacheEnabled\u003dfalse, rotatable\u003dfalse, networkConnectionEnabled\u003dfalse, chrome\u003d{chromedriverVersion\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926), userDataDir\u003d/tmp/.org.chromium.Chromium.dmirPx}, takesHeapSnapshot\u003dtrue, pageLoadStrategy\u003dnormal, strictFileInteractability\u003dfalse, databaseEnabled\u003dfalse, handlesAlerts\u003dtrue, version\u003d72.0.3626.81, browserConnectionEnabled\u003dfalse, proxy\u003d{}, nativeEvents\u003dtrue, webdriver.remote.sessionid\u003daa8521fab7e167859bdc0587a5008ef3, locationContextEnabled\u003dtrue, cssSelectorsEnabled\u003dtrue}]\nSession ID: aa8521fab7e167859bdc0587a5008ef3\n*** Element info: {Using\u003did, value\u003djobAdvertisement.stateTypes}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:216)\r\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:168)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:635)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:417)\r\n\tat org.openqa.selenium.By$ById.findElement(By.java:218)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)\r\n\tat de.neusta.b4u.steps.BaseSteps.the_dropdown_menu_contains_the_following_items(BaseSteps.java:72)\r\n\tat ✽.Then the dropdown menu \"jobAdvertisement.stateTypes\" contains the following items(accountMenuJobAdvertisement.feature:37)\r\n",
              "status": "failed"
            },
            "line": 37,
            "name": "the dropdown menu \"jobAdvertisement.stateTypes\" contains the following items",
            "match": {
              "arguments": [
                {
                  "val": "jobAdvertisement.stateTypes",
                  "offset": 19
                }
              ],
              "location": "BaseSteps.the_dropdown_menu_contains_the_following_items(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "- alle -"
                ],
                "line": 38
              },
              {
                "cells": [
                  "veröffentlicht"
                ],
                "line": 39
              },
              {
                "cells": [
                  "gewonnen"
                ],
                "line": 40
              },
              {
                "cells": [
                  "erledigt"
                ],
                "line": 41
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 33,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3826198100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 43,
        "name": "Check if it is possible to clear the search filter",
        "description": "",
        "id": "[qa]-ausschreibungen;check-if-it-is-possible-to-clear-the-search-filter",
        "after": [
          {
            "result": {
              "duration": 114473600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9585322100,
              "status": "passed"
            },
            "line": 44,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 335020600,
              "status": "passed"
            },
            "line": 45,
            "name": "I am on the job advertisement list page",
            "match": {
              "location": "JobAdvertisementListSteps.i_am_on_the_task_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 122075100,
              "error_message": "java.lang.AssertionError: Job advertisement list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.jobadvertisement.JobAdvertisementListSteps.i_provide_the_following_data_to_the_job_advertisement_search_filter(JobAdvertisementListSteps.java:29)\r\n\tat ✽.And I provide the following data to the job advertisement search filter(accountMenuJobAdvertisement.feature:46)\r\n",
              "status": "failed"
            },
            "line": 46,
            "name": "I provide the following data to the job advertisement search filter",
            "match": {
              "location": "JobAdvertisementListSteps.i_provide_the_following_data_to_the_job_advertisement_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "id",
                  "00001"
                ],
                "line": 47
              },
              {
                "cells": [
                  "forperson",
                  "Thorsten Prüser"
                ],
                "line": 48
              },
              {
                "cells": [
                  "position",
                  "Java Webclient Entwickler (w/m)"
                ],
                "line": 49
              },
              {
                "cells": [
                  "state",
                  "- alle -"
                ],
                "line": 50
              },
              {
                "cells": [
                  "startdate",
                  "01.01.2017"
                ],
                "line": 51
              },
              {
                "cells": [
                  "enddate",
                  "31.12.2017"
                ],
                "line": 52
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 53,
            "name": "I clear the job advertisement search filter",
            "match": {
              "location": "JobAdvertisementListSteps.i_clear_the_job_advertisement_search_filter()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 54,
            "name": "the job advertisement filter is empty",
            "match": {
              "location": "JobAdvertisementListSteps.the_job_advertisement_filter_is_empty()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 4012853900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 56,
        "name": "Check if the search results match the search filter criteria",
        "description": "",
        "id": "[qa]-ausschreibungen;check-if-the-search-results-match-the-search-filter-criteria",
        "after": [
          {
            "result": {
              "duration": 69852500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8337556300,
              "status": "passed"
            },
            "line": 57,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 280563300,
              "status": "passed"
            },
            "line": 58,
            "name": "I am on the job advertisement list page",
            "match": {
              "location": "JobAdvertisementListSteps.i_am_on_the_task_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 174324700,
              "error_message": "java.lang.AssertionError: Job advertisement list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.jobadvertisement.JobAdvertisementListSteps.i_provide_the_following_data_to_the_job_advertisement_search_filter(JobAdvertisementListSteps.java:29)\r\n\tat ✽.And I provide the following data to the job advertisement search filter(accountMenuJobAdvertisement.feature:59)\r\n",
              "status": "failed"
            },
            "line": 59,
            "name": "I provide the following data to the job advertisement search filter",
            "match": {
              "location": "JobAdvertisementListSteps.i_provide_the_following_data_to_the_job_advertisement_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "id",
                  "00001"
                ],
                "line": 60
              },
              {
                "cells": [
                  "forperson",
                  "Stefanie Wolkowski"
                ],
                "line": 61
              },
              {
                "cells": [
                  "position",
                  "Java Webclient Entwickler (w/m)"
                ],
                "line": 62
              },
              {
                "cells": [
                  "state",
                  "- alle -"
                ],
                "line": 63
              },
              {
                "cells": [
                  "fromdate",
                  "01.01.2017"
                ],
                "line": 64
              },
              {
                "cells": [
                  "todate",
                  "31.12.2017"
                ],
                "line": 65
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 66,
            "name": "I list the job advertisement search results",
            "match": {
              "location": "JobAdvertisementListSteps.i_list_the_job_advertisement_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 67,
            "name": "the job advertisement search results should only contain",
            "match": {
              "location": "JobAdvertisementListSteps.the_job_advertisement_search_results_should_only_contain(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "30.03.2015",
                  "00001",
                  "Java Webclient Entwickler (w/m)",
                  "",
                  "EE_20150330_capgemini_Java Webclient Entwickler",
                  "25.05.2015 - 11.09.2015",
                  "Stefanie Wolkowski",
                  "Stefanie Wolkowski"
                ],
                "line": 68
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 13021919600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 70,
        "name": "Check if the search filters are correct",
        "description": "",
        "id": "[qa]-ausschreibungen;check-if-the-search-filters-are-correct",
        "after": [
          {
            "result": {
              "duration": 61906700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9392368500,
              "status": "passed"
            },
            "line": 71,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 136206000,
              "status": "passed"
            },
            "line": 72,
            "name": "I am on the job advertisement list page",
            "match": {
              "location": "JobAdvertisementListSteps.i_am_on_the_task_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 97979700,
              "error_message": "java.lang.AssertionError: Job advertisement list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.jobadvertisement.JobAdvertisementListSteps.i_provide_the_following_data_to_the_job_advertisement_search_filter(JobAdvertisementListSteps.java:29)\r\n\tat ✽.And I provide the following data to the job advertisement search filter(accountMenuJobAdvertisement.feature:73)\r\n",
              "status": "failed"
            },
            "line": 73,
            "name": "I provide the following data to the job advertisement search filter",
            "match": {
              "location": "JobAdvertisementListSteps.i_provide_the_following_data_to_the_job_advertisement_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "id",
                  "00000"
                ],
                "line": 74
              },
              {
                "cells": [
                  "position",
                  "Cobol Webclient Entwickler (w/m)"
                ],
                "line": 75
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 76,
            "name": "I list the job advertisement search results",
            "match": {
              "location": "JobAdvertisementListSteps.i_list_the_job_advertisement_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "the job advertisement search results are empty",
            "match": {
              "location": "JobAdvertisementListSteps.the_job_advertisement_search_results_are_empty()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3391600400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 79,
        "name": "Create a new job advertisement",
        "description": "",
        "id": "[qa]-ausschreibungen;create-a-new-job-advertisement",
        "after": [
          {
            "result": {
              "duration": 166113100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8087021000,
              "status": "passed"
            },
            "line": 80,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 798152400,
              "error_message": "java.lang.AssertionError: Contact list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.contact.ContactCreateSteps.i_have_ensured_that_the_contact_i_want_to_edit_already_exist(ContactCreateSteps.java:140)\r\n\tat ✽.And I have ensured that the contact \"Justice League\" already exist(accountMenuJobAdvertisement.feature:81)\r\n",
              "status": "failed"
            },
            "line": 81,
            "name": "I have ensured that the contact \"Justice League\" already exist",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 33
                }
              ],
              "location": "ContactCreateSteps.i_have_ensured_that_the_contact_i_want_to_edit_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 82,
            "name": "I have checked that the job advertisement \"Superheld mit besonderen Fähigkeiten (m/w)\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Superheld mit besonderen Fähigkeiten (m/w)",
                  "offset": 43
                }
              ],
              "location": "JobAdvertisementCreateSteps.i_have_checked_that_the_job_advertisement_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 83,
            "name": "I am on the contact edit page of \"Justice League\"",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 34
                }
              ],
              "location": "ContactEditSteps.i_am_on_the_contact_edit_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 84,
            "name": "I create a new job advertisement \"Superheld mit besonderen Fähigkeiten\"",
            "match": {
              "arguments": [
                {
                  "val": "Superheld mit besonderen Fähigkeiten",
                  "offset": 34
                }
              ],
              "location": "JobAdvertisementCreateSteps.i_create_a_new_job_advertisement(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "forperson",
                  "TestB4U User"
                ],
                "line": 85
              },
              {
                "cells": [
                  "position",
                  "Superheld mit besonderen Fähigkeiten (m/w)"
                ],
                "line": 86
              },
              {
                "cells": [
                  "shortdescription",
                  "I\u0027m Batman"
                ],
                "line": 87
              },
              {
                "cells": [
                  "taskdescription",
                  "I\u0027m Batman"
                ],
                "line": 88
              },
              {
                "cells": [
                  "skills",
                  "I\u0027m Batman"
                ],
                "line": 89
              },
              {
                "cells": [
                  "notes",
                  "I\u0027m Batman"
                ],
                "line": 90
              },
              {
                "cells": [
                  "keywords",
                  "batman, bruce, wayne"
                ],
                "line": 91
              },
              {
                "cells": [
                  "zipcode",
                  "31337"
                ],
                "line": 92
              },
              {
                "cells": [
                  "city",
                  "Gotham City"
                ],
                "line": 93
              },
              {
                "cells": [
                  "country",
                  "Deutschland"
                ],
                "line": 94
              },
              {
                "cells": [
                  "federalstate",
                  "Bremen"
                ],
                "line": 95
              },
              {
                "cells": [
                  "location",
                  "Überseestadt"
                ],
                "line": 96
              },
              {
                "cells": [
                  "startdate",
                  "01.01.2030"
                ],
                "line": 97
              },
              {
                "cells": [
                  "enddate",
                  "31.12.2030"
                ],
                "line": 98
              },
              {
                "cells": [
                  "duration",
                  "6 Monate"
                ],
                "line": 99
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 100,
            "name": "the job advertisement \"Superheld mit besonderen Fähigkeiten\" is created",
            "match": {
              "arguments": [
                {
                  "val": "Superheld mit besonderen Fähigkeiten",
                  "offset": 23
                }
              ],
              "location": "JobAdvertisementCreateSteps.the_job_advertisement_is_created(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 101,
            "name": "I am on the job advertisement edit page of \"Superheld mit besonderen Fähigkeiten (m/w)\"",
            "match": {
              "arguments": [
                {
                  "val": "Superheld mit besonderen Fähigkeiten (m/w)",
                  "offset": 44
                }
              ],
              "location": "JobAdvertisementEditSteps.i_am_on_the_job_advertisement_edit_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 102,
            "name": "the job advertisement details are",
            "match": {
              "location": "JobAdvertisementEditSteps.the_job_advertisement_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Superheld mit besonderen Fähigkeiten"
                ],
                "line": 103
              },
              {
                "cells": [
                  "forperson",
                  "TestB4U User"
                ],
                "line": 104
              },
              {
                "cells": [
                  "position",
                  "Superheld mit besonderen Fähigkeiten (m/w)"
                ],
                "line": 105
              },
              {
                "cells": [
                  "shortdescription",
                  "I\u0027m Batman"
                ],
                "line": 106
              },
              {
                "cells": [
                  "taskdescription",
                  "I\u0027m Batman"
                ],
                "line": 107
              },
              {
                "cells": [
                  "skills",
                  "I\u0027m Batman"
                ],
                "line": 108
              },
              {
                "cells": [
                  "notes",
                  "I\u0027m Batman"
                ],
                "line": 109
              },
              {
                "cells": [
                  "keywords",
                  "batman, bruce, wayne"
                ],
                "line": 110
              },
              {
                "cells": [
                  "zipcode",
                  "31337"
                ],
                "line": 111
              },
              {
                "cells": [
                  "city",
                  "Gotham City"
                ],
                "line": 112
              },
              {
                "cells": [
                  "country",
                  "Deutschland"
                ],
                "line": 113
              },
              {
                "cells": [
                  "federalstate",
                  "Bremen"
                ],
                "line": 114
              },
              {
                "cells": [
                  "location",
                  "Überseestadt"
                ],
                "line": 115
              },
              {
                "cells": [
                  "startdate",
                  "01.01.2030"
                ],
                "line": 116
              },
              {
                "cells": [
                  "enddate",
                  "31.12.2030"
                ],
                "line": 117
              },
              {
                "cells": [
                  "duration",
                  "6 Monate"
                ],
                "line": 118
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10478283700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 120,
        "name": "Check if the selected note is shown when creating a new job advertisement",
        "description": "",
        "id": "[qa]-ausschreibungen;check-if-the-selected-note-is-shown-when-creating-a-new-job-advertisement",
        "after": [
          {
            "result": {
              "duration": 134632800,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9808345600,
              "status": "passed"
            },
            "line": 121,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 823008600,
              "error_message": "java.lang.AssertionError: Contact list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.contact.ContactCreateSteps.i_have_ensured_that_the_contact_i_want_to_edit_already_exist(ContactCreateSteps.java:140)\r\n\tat ✽.And I have ensured that the contact \"Justice League\" already exist(accountMenuJobAdvertisement.feature:122)\r\n",
              "status": "failed"
            },
            "line": 122,
            "name": "I have ensured that the contact \"Justice League\" already exist",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 33
                }
              ],
              "location": "ContactCreateSteps.i_have_ensured_that_the_contact_i_want_to_edit_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 123,
            "name": "I am on the contact edit page of \"Justice League\"",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 34
                }
              ],
              "location": "ContactEditSteps.i_am_on_the_contact_edit_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 124,
            "name": "I add a new note to the contact \"I am Batman!!!\"",
            "match": {
              "arguments": [
                {
                  "val": "I am Batman!!!",
                  "offset": 33
                }
              ],
              "location": "ContactEditSteps.i_add_a_new_note_to_the_contact(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 125,
            "name": "I select the contact note \"I am Batman!!!\"",
            "match": {
              "arguments": [
                {
                  "val": "I am Batman!!!",
                  "offset": 27
                }
              ],
              "location": "ContactEditSteps.i_select_the_contact_note(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 126,
            "name": "I try to create a new job advertisement",
            "match": {
              "location": "JobAdvertisementCreateSteps.i_try_to_create_a_new_job_advertisement()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 127,
            "name": "the job advertisement popup displays the note \"I am Batman!!!\"",
            "match": {
              "arguments": [
                {
                  "val": "I am Batman!!!",
                  "offset": 47
                }
              ],
              "location": "JobAdvertisementCreateSteps.the_job_advertisement_popup_displays_the_note(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10395591700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 129,
        "name": "Edit an existing job advertisement",
        "description": "",
        "id": "[qa]-ausschreibungen;edit-an-existing-job-advertisement",
        "after": [
          {
            "result": {
              "duration": 62293800,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9782758600,
              "status": "passed"
            },
            "line": 130,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 563045600,
              "error_message": "java.lang.AssertionError: Job advertisement list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.jobadvertisement.JobAdvertisementEditSteps.i_am_on_the_job_advertisement_edit_page_of(JobAdvertisementEditSteps.java:117)\r\n\tat ✽.And I am on the job advertisement edit page of \"Superheld mit besonderen Fähigkeiten (m/w)\"(accountMenuJobAdvertisement.feature:131)\r\n",
              "status": "failed"
            },
            "line": 131,
            "name": "I am on the job advertisement edit page of \"Superheld mit besonderen Fähigkeiten (m/w)\"",
            "match": {
              "arguments": [
                {
                  "val": "Superheld mit besonderen Fähigkeiten (m/w)",
                  "offset": 44
                }
              ],
              "location": "JobAdvertisementEditSteps.i_am_on_the_job_advertisement_edit_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 132,
            "name": "I edit the job advertisement details",
            "match": {
              "location": "JobAdvertisementEditSteps.i_edit_the_job_advertisement_details(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Pizzalieferant"
                ],
                "line": 133
              },
              {
                "cells": [
                  "forperson",
                  "TestB4U User"
                ],
                "line": 134
              },
              {
                "cells": [
                  "position",
                  "Superheld mit besonderen Fähigkeiten (m/w)"
                ],
                "line": 135
              },
              {
                "cells": [
                  "shortdescription",
                  "I\u0027m Spiderman"
                ],
                "line": 136
              },
              {
                "cells": [
                  "taskdescription",
                  "I\u0027m Spiderman"
                ],
                "line": 137
              },
              {
                "cells": [
                  "skills",
                  "I\u0027m Spiderman"
                ],
                "line": 138
              },
              {
                "cells": [
                  "notes",
                  "I\u0027m Spiderman"
                ],
                "line": 139
              },
              {
                "cells": [
                  "keywords",
                  "spiderman, peter, parker"
                ],
                "line": 140
              },
              {
                "cells": [
                  "zipcode",
                  "12345"
                ],
                "line": 141
              },
              {
                "cells": [
                  "city",
                  "New York"
                ],
                "line": 142
              },
              {
                "cells": [
                  "country",
                  "Deutschland"
                ],
                "line": 143
              },
              {
                "cells": [
                  "federalstate",
                  "Niedersachsen"
                ],
                "line": 144
              },
              {
                "cells": [
                  "location",
                  "Unterseestadt"
                ],
                "line": 145
              },
              {
                "cells": [
                  "startdate",
                  "01.01.2031"
                ],
                "line": 146
              },
              {
                "cells": [
                  "enddate",
                  "31.12.2031"
                ],
                "line": 147
              },
              {
                "cells": [
                  "duration",
                  "3 Wochen"
                ],
                "line": 148
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 149,
            "name": "the job advertisement details are",
            "match": {
              "location": "JobAdvertisementEditSteps.the_job_advertisement_details_are(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "name",
                  "Pizzalieferant"
                ],
                "line": 150
              },
              {
                "cells": [
                  "forperson",
                  "TestB4U User"
                ],
                "line": 151
              },
              {
                "cells": [
                  "position",
                  "Superheld mit besonderen Fähigkeiten (m/w)"
                ],
                "line": 152
              },
              {
                "cells": [
                  "shortdescription",
                  "I\u0027m Spiderman"
                ],
                "line": 153
              },
              {
                "cells": [
                  "taskdescription",
                  "I\u0027m Spiderman"
                ],
                "line": 154
              },
              {
                "cells": [
                  "skills",
                  "I\u0027m Spiderman"
                ],
                "line": 155
              },
              {
                "cells": [
                  "notes",
                  "I\u0027m Spiderman"
                ],
                "line": 156
              },
              {
                "cells": [
                  "keywords",
                  "spiderman, peter, parker"
                ],
                "line": 157
              },
              {
                "cells": [
                  "zipcode",
                  "12345"
                ],
                "line": 158
              },
              {
                "cells": [
                  "city",
                  "New York"
                ],
                "line": 159
              },
              {
                "cells": [
                  "country",
                  "Deutschland"
                ],
                "line": 160
              },
              {
                "cells": [
                  "federalstate",
                  "Niedersachsen"
                ],
                "line": 161
              },
              {
                "cells": [
                  "location",
                  "Unterseestadt"
                ],
                "line": 162
              },
              {
                "cells": [
                  "startdate",
                  "01.01.2031"
                ],
                "line": 163
              },
              {
                "cells": [
                  "enddate",
                  "31.12.2031"
                ],
                "line": 164
              },
              {
                "cells": [
                  "duration",
                  "3 Wochen"
                ],
                "line": 165
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3365408300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 167,
        "name": "Delete job advertisement",
        "description": "",
        "id": "[qa]-ausschreibungen;delete-job-advertisement",
        "after": [
          {
            "result": {
              "duration": 130760300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9746375900,
              "status": "passed"
            },
            "line": 168,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 131395200,
              "status": "passed"
            },
            "line": 169,
            "name": "I am on the job advertisement list page",
            "match": {
              "location": "JobAdvertisementListSteps.i_am_on_the_task_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 649746100,
              "error_message": "java.lang.AssertionError: Job advertisement list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.jobadvertisement.JobAdvertisementCreateSteps.i_delete_the_job_advertisement(JobAdvertisementCreateSteps.java:150)\r\n\tat ✽.When I delete the job advertisement \"Superheld mit besonderen Fähigkeiten (m/w)\"(accountMenuJobAdvertisement.feature:170)\r\n",
              "status": "failed"
            },
            "line": 170,
            "name": "I delete the job advertisement \"Superheld mit besonderen Fähigkeiten (m/w)\"",
            "match": {
              "arguments": [
                {
                  "val": "Superheld mit besonderen Fähigkeiten (m/w)",
                  "offset": 32
                }
              ],
              "location": "JobAdvertisementCreateSteps.i_delete_the_job_advertisement(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 171,
            "name": "the job advertisement \"Superheld mit besonderen Fähigkeiten (m/w)\" is deleted",
            "match": {
              "arguments": [
                {
                  "val": "Superheld mit besonderen Fähigkeiten (m/w)",
                  "offset": 23
                }
              ],
              "location": "JobAdvertisementCreateSteps.the_job_advertisement_is_deleted(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15011053600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 173,
        "name": "Add an applicant to an existing job advertisement",
        "description": "",
        "id": "[qa]-ausschreibungen;add-an-applicant-to-an-existing-job-advertisement",
        "after": [
          {
            "result": {
              "duration": 68255300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8300818600,
              "status": "passed"
            },
            "line": 174,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 595877200,
              "error_message": "java.lang.AssertionError: Job advertisement list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.jobadvertisement.JobAdvertisementCreateSteps.i_have_checked_that_the_job_advertisement_does_not_already_exist(JobAdvertisementCreateSteps.java:88)\r\n\tat ✽.And I have checked that the job advertisement \"Superheld mit besonderen Fähigkeiten (m/w)\" does not already exist(accountMenuJobAdvertisement.feature:175)\r\n",
              "status": "failed"
            },
            "line": 175,
            "name": "I have checked that the job advertisement \"Superheld mit besonderen Fähigkeiten (m/w)\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Superheld mit besonderen Fähigkeiten (m/w)",
                  "offset": 43
                }
              ],
              "location": "JobAdvertisementCreateSteps.i_have_checked_that_the_job_advertisement_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 176,
            "name": "I have ensured that the contact \"Justice League\" already exist",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 33
                }
              ],
              "location": "ContactCreateSteps.i_have_ensured_that_the_contact_i_want_to_edit_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 177,
            "name": "I am on the contact edit page of \"Justice League\"",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 34
                }
              ],
              "location": "ContactEditSteps.i_am_on_the_contact_edit_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 178,
            "name": "I create a new job advertisement \"Superheld mit besonderen Fähigkeiten\"",
            "match": {
              "arguments": [
                {
                  "val": "Superheld mit besonderen Fähigkeiten",
                  "offset": 34
                }
              ],
              "location": "JobAdvertisementCreateSteps.i_create_a_new_job_advertisement(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "position",
                  "Superheld mit besonderen Fähigkeiten (m/w)"
                ],
                "line": 179
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 180,
            "name": "I have checked that the person \"Wayne, Bruce\" does not already exist",
            "match": {
              "arguments": [
                {
                  "val": "Wayne, Bruce",
                  "offset": 32
                }
              ],
              "location": "AddressCreatePersonSteps.i_have_checked_that_the_person_does_not_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 181,
            "name": "I create a new person \"Bruce Wayne\"",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 23
                }
              ],
              "location": "AddressCreatePersonSteps.i_create_a_new_person(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "salutation",
                  "Herr"
                ],
                "line": 182
              },
              {
                "cells": [
                  "contacttype",
                  "Interessent"
                ],
                "line": 183
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 184,
            "name": "I am on the job advertisement edit page of \"Superheld mit besonderen Fähigkeiten (m/w)\"",
            "match": {
              "arguments": [
                {
                  "val": "Superheld mit besonderen Fähigkeiten (m/w)",
                  "offset": 44
                }
              ],
              "location": "JobAdvertisementEditSteps.i_am_on_the_job_advertisement_edit_page_of(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 185,
            "name": "I add the applicant \"Bruce Wayne\" to the job advertisement",
            "match": {
              "arguments": [
                {
                  "val": "Bruce Wayne",
                  "offset": 21
                }
              ],
              "location": "JobAdvertisementEditSteps.i_add_the_applicant_to_the_job_advertisement(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 186,
            "name": "the job advertisement applicant list contains",
            "match": {
              "location": "JobAdvertisementEditSteps.the_job_advertisement_applicant_list_contains(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Bruce",
                  "Wayne",
                  ""
                ],
                "line": 187
              }
            ],
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "[QA] Ausschreibungen",
    "description": "Als B4U-Nutzer möchte ich unter dem Menüpunkt \"Ausschreibungen\" eine Suchmaske mit verschiedenen Suchattributen sehen,\r\ndamit ich die gesuchte Ausschreibung schneller finden kann",
    "id": "[qa]-ausschreibungen",
    "keyword": "Feature",
    "uri": "accountMenuJobAdvertisement.feature"
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1064"
      }
    ],
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3239736700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 8,
        "name": "Check elements tasks",
        "description": "",
        "id": "[qa]-aufgaben;check-elements-tasks",
        "after": [
          {
            "result": {
              "duration": 84518200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10161399000,
              "status": "passed"
            },
            "line": 9,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 899568400,
              "status": "passed"
            },
            "line": 10,
            "name": "I am on the task list page",
            "match": {
              "location": "TaskListSteps.i_am_on_the_task_list_page()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1035085800,
              "error_message": "java.lang.AssertionError: taskTableView.taskPersonList is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.BaseSteps.all_the_elements_looked_for_are_being_displayed(BaseSteps.java:66)\r\n\tat ✽.Then all the elements looked for are being displayed(accountMenuTasks.feature:11)\r\n",
              "status": "failed"
            },
            "line": 11,
            "name": "all the elements looked for are being displayed",
            "match": {
              "location": "BaseSteps.all_the_elements_looked_for_are_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Zuständig",
                  "taskTableView.taskPersonList"
                ],
                "line": 12
              },
              {
                "cells": [
                  "Aufgabentyp",
                  "taskTableView.taskTypeList"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Status",
                  "taskTableView.taskStatusList"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Titel",
                  "taskTableView.title"
                ],
                "line": 15
              },
              {
                "cells": [
                  "von",
                  "taskTableView.fromDate"
                ],
                "line": 16
              },
              {
                "cells": [
                  "bis",
                  "taskTableView.toDate"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Filter zurücksetzen",
                  "taskTableView.clear"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Suchen 1",
                  "taskTableView.search1"
                ],
                "line": 19
              },
              {
                "cells": [
                  "Suchen 2",
                  "taskTableView.search2"
                ],
                "line": 20
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 7,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12800213600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 23,
        "name": "Check dropdown entries task type",
        "description": "",
        "id": "[qa]-aufgaben;check-dropdown-entries-task-type",
        "after": [
          {
            "result": {
              "duration": 112140300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8121521700,
              "status": "passed"
            },
            "line": 24,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 477403000,
              "status": "passed"
            },
            "line": 25,
            "name": "I am on the task list page",
            "match": {
              "location": "TaskListSteps.i_am_on_the_task_list_page()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1070724400,
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"id\",\"selector\":\"taskTableView.taskTypeList\"}\n  (Session info: chrome\u003d72.0.3626.81)\n  (Driver info: chromedriver\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926),platform\u003dLinux 4.9.125-linuxkit x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 1.07 seconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.0.1\u0027, revision: \u00271969d75\u0027, time: \u00272016-10-18 09:49:13 -0700\u0027\nSystem info: host: \u0027DESKTOP-IN4UB21\u0027, ip: \u002710.0.75.1\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_201\u0027\nDriver info: org.openqa.selenium.remote.RemoteWebDriver\nCapabilities [{mobileEmulationEnabled\u003dfalse, timeouts\u003d{implicit\u003d0, pageLoad\u003d300000, script\u003d30000}, hasTouchScreen\u003dfalse, platform\u003dLINUX, acceptSslCerts\u003dfalse, goog:chromeOptions\u003d{debuggerAddress\u003dlocalhost:34851}, acceptInsecureCerts\u003dfalse, webStorageEnabled\u003dtrue, browserName\u003dchrome, takesScreenshot\u003dtrue, javascriptEnabled\u003dtrue, setWindowRect\u003dtrue, unexpectedAlertBehaviour\u003dignore, applicationCacheEnabled\u003dfalse, rotatable\u003dfalse, networkConnectionEnabled\u003dfalse, chrome\u003d{chromedriverVersion\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926), userDataDir\u003d/tmp/.org.chromium.Chromium.PoXp3V}, takesHeapSnapshot\u003dtrue, pageLoadStrategy\u003dnormal, strictFileInteractability\u003dfalse, databaseEnabled\u003dfalse, handlesAlerts\u003dtrue, version\u003d72.0.3626.81, browserConnectionEnabled\u003dfalse, proxy\u003d{}, nativeEvents\u003dtrue, webdriver.remote.sessionid\u003d29d34c1a75cd8bd009ce7e89dd273abc, locationContextEnabled\u003dtrue, cssSelectorsEnabled\u003dtrue}]\nSession ID: 29d34c1a75cd8bd009ce7e89dd273abc\n*** Element info: {Using\u003did, value\u003dtaskTableView.taskTypeList}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:216)\r\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:168)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:635)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:417)\r\n\tat org.openqa.selenium.By$ById.findElement(By.java:218)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)\r\n\tat de.neusta.b4u.steps.BaseSteps.the_dropdown_menu_contains_the_following_items(BaseSteps.java:72)\r\n\tat ✽.And the dropdown menu \"taskTableView.taskTypeList\" contains the following items(accountMenuTasks.feature:26)\r\n",
              "status": "failed"
            },
            "line": 26,
            "name": "the dropdown menu \"taskTableView.taskTypeList\" contains the following items",
            "match": {
              "arguments": [
                {
                  "val": "taskTableView.taskTypeList",
                  "offset": 19
                }
              ],
              "location": "BaseSteps.the_dropdown_menu_contains_the_following_items(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "- alle -"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Anruf"
                ],
                "line": 28
              },
              {
                "cells": [
                  "Nachfrage"
                ],
                "line": 29
              },
              {
                "cells": [
                  "Wiedervorlage"
                ],
                "line": 30
              },
              {
                "cells": [
                  "Besuch"
                ],
                "line": 31
              },
              {
                "cells": [
                  "Mail"
                ],
                "line": 32
              },
              {
                "cells": [
                  "Verträge"
                ],
                "line": 33
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 22,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3367495200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 36,
        "name": "Check dropdown entries task status",
        "description": "",
        "id": "[qa]-aufgaben;check-dropdown-entries-task-status",
        "after": [
          {
            "result": {
              "duration": 96161000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9098518200,
              "status": "passed"
            },
            "line": 37,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 863004600,
              "status": "passed"
            },
            "line": 38,
            "name": "I am on the task list page",
            "match": {
              "location": "TaskListSteps.i_am_on_the_task_list_page()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1062147900,
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"id\",\"selector\":\"taskTableView.taskStatusList\"}\n  (Session info: chrome\u003d72.0.3626.81)\n  (Driver info: chromedriver\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926),platform\u003dLinux 4.9.125-linuxkit x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 1.06 seconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.0.1\u0027, revision: \u00271969d75\u0027, time: \u00272016-10-18 09:49:13 -0700\u0027\nSystem info: host: \u0027DESKTOP-IN4UB21\u0027, ip: \u002710.0.75.1\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_201\u0027\nDriver info: org.openqa.selenium.remote.RemoteWebDriver\nCapabilities [{mobileEmulationEnabled\u003dfalse, timeouts\u003d{implicit\u003d0, pageLoad\u003d300000, script\u003d30000}, hasTouchScreen\u003dfalse, platform\u003dLINUX, acceptSslCerts\u003dfalse, goog:chromeOptions\u003d{debuggerAddress\u003dlocalhost:46507}, acceptInsecureCerts\u003dfalse, webStorageEnabled\u003dtrue, browserName\u003dchrome, takesScreenshot\u003dtrue, javascriptEnabled\u003dtrue, setWindowRect\u003dtrue, unexpectedAlertBehaviour\u003dignore, applicationCacheEnabled\u003dfalse, rotatable\u003dfalse, networkConnectionEnabled\u003dfalse, chrome\u003d{chromedriverVersion\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926), userDataDir\u003d/tmp/.org.chromium.Chromium.eP6hKS}, takesHeapSnapshot\u003dtrue, pageLoadStrategy\u003dnormal, strictFileInteractability\u003dfalse, databaseEnabled\u003dfalse, handlesAlerts\u003dtrue, version\u003d72.0.3626.81, browserConnectionEnabled\u003dfalse, proxy\u003d{}, nativeEvents\u003dtrue, webdriver.remote.sessionid\u003d71fc5cd1f07b41fba5d15a632ff4804f, locationContextEnabled\u003dtrue, cssSelectorsEnabled\u003dtrue}]\nSession ID: 71fc5cd1f07b41fba5d15a632ff4804f\n*** Element info: {Using\u003did, value\u003dtaskTableView.taskStatusList}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:216)\r\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:168)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:635)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:417)\r\n\tat org.openqa.selenium.By$ById.findElement(By.java:218)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)\r\n\tat de.neusta.b4u.steps.BaseSteps.the_dropdown_menu_contains_the_following_items(BaseSteps.java:72)\r\n\tat ✽.And the dropdown menu \"taskTableView.taskStatusList\" contains the following items(accountMenuTasks.feature:39)\r\n",
              "status": "failed"
            },
            "line": 39,
            "name": "the dropdown menu \"taskTableView.taskStatusList\" contains the following items",
            "match": {
              "arguments": [
                {
                  "val": "taskTableView.taskStatusList",
                  "offset": 19
                }
              ],
              "location": "BaseSteps.the_dropdown_menu_contains_the_following_items(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "- alle -"
                ],
                "line": 40
              },
              {
                "cells": [
                  "Offen"
                ],
                "line": 41
              },
              {
                "cells": [
                  "Erledigt"
                ],
                "line": 42
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "line": 35,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12218558100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 52,
        "name": "Check menu entries tasks goals",
        "description": "",
        "id": "[qa]-aufgaben;check-menu-entries-tasks-goals;;2",
        "after": [
          {
            "result": {
              "duration": 115249300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9098355400,
              "status": "passed"
            },
            "line": 46,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 488744100,
              "status": "passed"
            },
            "line": 47,
            "name": "I am on the task list page",
            "match": {
              "location": "TaskListSteps.i_am_on_the_task_list_page()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1068145600,
              "error_message": "org.openqa.selenium.ElementNotVisibleException: element not interactable\n  (Session info: chrome\u003d72.0.3626.81)\n  (Driver info: chromedriver\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926),platform\u003dLinux 4.9.125-linuxkit x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 1.04 seconds\nBuild info: version: \u00273.0.1\u0027, revision: \u00271969d75\u0027, time: \u00272016-10-18 09:49:13 -0700\u0027\nSystem info: host: \u0027DESKTOP-IN4UB21\u0027, ip: \u002710.0.75.1\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_201\u0027\nDriver info: org.openqa.selenium.remote.RemoteWebDriver\nCapabilities [{mobileEmulationEnabled\u003dfalse, timeouts\u003d{implicit\u003d0, pageLoad\u003d300000, script\u003d30000}, hasTouchScreen\u003dfalse, platform\u003dLINUX, acceptSslCerts\u003dfalse, goog:chromeOptions\u003d{debuggerAddress\u003dlocalhost:36355}, acceptInsecureCerts\u003dfalse, webStorageEnabled\u003dtrue, browserName\u003dchrome, takesScreenshot\u003dtrue, javascriptEnabled\u003dtrue, setWindowRect\u003dtrue, unexpectedAlertBehaviour\u003dignore, applicationCacheEnabled\u003dfalse, rotatable\u003dfalse, networkConnectionEnabled\u003dfalse, chrome\u003d{chromedriverVersion\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926), userDataDir\u003d/tmp/.org.chromium.Chromium.mikkq1}, takesHeapSnapshot\u003dtrue, pageLoadStrategy\u003dnormal, strictFileInteractability\u003dfalse, databaseEnabled\u003dfalse, handlesAlerts\u003dtrue, version\u003d72.0.3626.81, browserConnectionEnabled\u003dfalse, proxy\u003d{}, nativeEvents\u003dtrue, webdriver.remote.sessionid\u003da94683680034c650b8f89d735b6ed112, locationContextEnabled\u003dtrue, cssSelectorsEnabled\u003dtrue}]\nSession ID: a94683680034c650b8f89d735b6ed112\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:216)\r\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:168)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:635)\r\n\tat org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:274)\r\n\tat org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)\r\n\tat de.neusta.b4u.steps.menu.MenuSteps.i_click_on_the_menu_entry(MenuSteps.java:52)\r\n\tat ✽.And I click on the menu entry \"navigationView.Aufgaben\"(accountMenuTasks.feature:48)\r\n",
              "status": "failed"
            },
            "line": 48,
            "name": "I click on the menu entry \"navigationView.Aufgaben\"",
            "match": {
              "arguments": [
                {
                  "val": "navigationView.Aufgaben",
                  "offset": 27
                }
              ],
              "location": "MenuSteps.i_click_on_the_menu_entry(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 49,
            "name": "the target page is being displayed \"/task/list\"",
            "match": {
              "arguments": [
                {
                  "val": "/task/list",
                  "offset": 36
                }
              ],
              "location": "MenuSteps.the_target_page_is_being_displayed(String)"
            },
            "matchedColumns": [
              2
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 44,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3165279600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 54,
        "name": "Check if it is possible to clear the search filter",
        "description": "",
        "id": "[qa]-aufgaben;check-if-it-is-possible-to-clear-the-search-filter",
        "after": [
          {
            "result": {
              "duration": 125247000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9750242400,
              "status": "passed"
            },
            "line": 55,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 574139600,
              "status": "passed"
            },
            "line": 56,
            "name": "I am on the task list page",
            "match": {
              "location": "TaskListSteps.i_am_on_the_task_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16676700,
              "error_message": "java.lang.AssertionError: Task list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.tasks.TaskListSteps.i_provide_the_following_data_to_the_task_search_filter(TaskListSteps.java:30)\r\n\tat ✽.And I provide the following data to the task search filter(accountMenuTasks.feature:57)\r\n",
              "status": "failed"
            },
            "line": 57,
            "name": "I provide the following data to the task search filter",
            "match": {
              "location": "TaskListSteps.i_provide_the_following_data_to_the_task_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "taskperson",
                  "TestB4U Admin"
                ],
                "line": 58
              },
              {
                "cells": [
                  "tasktype",
                  "Nachfrage"
                ],
                "line": 59
              },
              {
                "cells": [
                  "taskstatus",
                  "Offen"
                ],
                "line": 60
              },
              {
                "cells": [
                  "note",
                  "Flash anwerben"
                ],
                "line": 61
              },
              {
                "cells": [
                  "fromdate",
                  "01.01.2017"
                ],
                "line": 62
              },
              {
                "cells": [
                  "todate",
                  "31.12.2017"
                ],
                "line": 63
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 64,
            "name": "I clear the task search filter",
            "match": {
              "location": "TaskListSteps.i_clear_the_task_search_filter()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 65,
            "name": "the task search filter is empty",
            "match": {
              "location": "TaskListSteps.the_task_search_filter_is_empty()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15013821200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 67,
        "name": "Create a new task",
        "description": "",
        "id": "[qa]-aufgaben;create-a-new-task",
        "after": [
          {
            "result": {
              "duration": 81883400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8178535100,
              "status": "passed"
            },
            "line": 68,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 619813400,
              "error_message": "java.lang.AssertionError: Contact list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.contact.ContactCreateSteps.i_have_ensured_that_the_contact_i_want_to_edit_already_exist(ContactCreateSteps.java:140)\r\n\tat ✽.And I have ensured that the contact \"Justice League\" already exist(accountMenuTasks.feature:69)\r\n",
              "status": "failed"
            },
            "line": 69,
            "name": "I have ensured that the contact \"Justice League\" already exist",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 33
                }
              ],
              "location": "ContactCreateSteps.i_have_ensured_that_the_contact_i_want_to_edit_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 70,
            "name": "I am on the contact edit page of \"Justice League\"",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 34
                }
              ],
              "location": "ContactEditSteps.i_am_on_the_contact_edit_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 71,
            "name": "I create a new task \"Flash anwerben\"",
            "match": {
              "arguments": [
                {
                  "val": "Flash anwerben",
                  "offset": 21
                }
              ],
              "location": "TaskCreateSteps.i_create_a_new_task(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "type",
                  "Nachfrage"
                ],
                "line": 72
              },
              {
                "cells": [
                  "priority",
                  "hoch"
                ],
                "line": 73
              },
              {
                "cells": [
                  "reminder",
                  "täglich"
                ],
                "line": 74
              },
              {
                "cells": [
                  "startdate",
                  "01.02.2017"
                ],
                "line": 75
              },
              {
                "cells": [
                  "enddate",
                  "02.03.2017"
                ],
                "line": 76
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 77,
            "name": "the task \"Flash anwerben\" is created",
            "match": {
              "arguments": [
                {
                  "val": "Flash anwerben",
                  "offset": 10
                }
              ],
              "location": "TaskCreateSteps.the_task_is_created(String)"
            },
            "keyword": "Then "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 78,
            "name": "I am on the contact edit page of \"Justice League\"",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 34
                }
              ],
              "location": "ContactEditSteps.i_am_on_the_contact_edit_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 79,
            "name": "the task details of \"Flash anwerben\" are",
            "match": {
              "arguments": [
                {
                  "val": "Flash anwerben",
                  "offset": 21
                }
              ],
              "location": "TaskEditSteps.the_task_details_are(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "type",
                  "Nachfrage"
                ],
                "line": 80
              },
              {
                "cells": [
                  "priority",
                  "hoch"
                ],
                "line": 81
              },
              {
                "cells": [
                  "reminder",
                  "täglich"
                ],
                "line": 82
              },
              {
                "cells": [
                  "startdate",
                  "01.02.2017"
                ],
                "line": 83
              },
              {
                "cells": [
                  "enddate",
                  "02.03.2017"
                ],
                "line": 84
              },
              {
                "cells": [
                  "note",
                  "Flash anwerben"
                ],
                "line": 85
              }
            ],
            "keyword": "And "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3246206900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 87,
        "name": "Check if the search results match the search filter criteria",
        "description": "",
        "id": "[qa]-aufgaben;check-if-the-search-results-match-the-search-filter-criteria",
        "after": [
          {
            "result": {
              "duration": 113552200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9278887000,
              "status": "passed"
            },
            "line": 88,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 619131200,
              "status": "passed"
            },
            "line": 89,
            "name": "I am on the task list page",
            "match": {
              "location": "TaskListSteps.i_am_on_the_task_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12980500,
              "error_message": "java.lang.AssertionError: Task list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.tasks.TaskListSteps.i_provide_the_following_data_to_the_task_search_filter(TaskListSteps.java:30)\r\n\tat ✽.And I provide the following data to the task search filter(accountMenuTasks.feature:90)\r\n",
              "status": "failed"
            },
            "line": 90,
            "name": "I provide the following data to the task search filter",
            "match": {
              "location": "TaskListSteps.i_provide_the_following_data_to_the_task_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "taskperson",
                  "TestB4U User"
                ],
                "line": 91
              },
              {
                "cells": [
                  "tasktype",
                  "Nachfrage"
                ],
                "line": 92
              },
              {
                "cells": [
                  "taskstatus",
                  "Offen"
                ],
                "line": 93
              },
              {
                "cells": [
                  "note",
                  "Flash anwerben"
                ],
                "line": 94
              },
              {
                "cells": [
                  "fromdate",
                  "01.01.2017"
                ],
                "line": 95
              },
              {
                "cells": [
                  "todate",
                  "31.12.2017"
                ],
                "line": 96
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 97,
            "name": "I list the task search results",
            "match": {
              "location": "TaskListSteps.i_list_the_task_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "the task search results should only contain",
            "match": {
              "location": "TaskListSteps.the_task_search_results_should_only_contain(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Flash anwerben",
                  "TestB4U User",
                  "01.02.2017",
                  "02.03.2017",
                  "Nachfrage",
                  "täglich"
                ],
                "line": 99
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15394013100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 101,
        "name": "Check if the search filters are correct",
        "description": "",
        "id": "[qa]-aufgaben;check-if-the-search-filters-are-correct",
        "after": [
          {
            "result": {
              "duration": 60684600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7951337800,
              "status": "passed"
            },
            "line": 102,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 500462200,
              "status": "passed"
            },
            "line": 103,
            "name": "I am on the task list page",
            "match": {
              "location": "TaskListSteps.i_am_on_the_task_list_page()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17353200,
              "error_message": "java.lang.AssertionError: Task list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.tasks.TaskListSteps.i_provide_the_following_data_to_the_task_search_filter(TaskListSteps.java:30)\r\n\tat ✽.And I provide the following data to the task search filter(accountMenuTasks.feature:104)\r\n",
              "status": "failed"
            },
            "line": 104,
            "name": "I provide the following data to the task search filter",
            "match": {
              "location": "TaskListSteps.i_provide_the_following_data_to_the_task_search_filter(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "taskperson",
                  "TestB4U User"
                ],
                "line": 105
              },
              {
                "cells": [
                  "tasktype",
                  "Nachfrage"
                ],
                "line": 106
              },
              {
                "cells": [
                  "note",
                  "Spiderman anwerben"
                ],
                "line": 107
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 108,
            "name": "I list the task search results",
            "match": {
              "location": "TaskListSteps.i_list_the_task_search_results()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "the task search results are empty",
            "match": {
              "location": "TaskListSteps.the_task_search_results_are_empty()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3274865400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 111,
        "name": "Edit an existing task",
        "description": "",
        "id": "[qa]-aufgaben;edit-an-existing-task",
        "after": [
          {
            "result": {
              "duration": 78617500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9780939500,
              "status": "passed"
            },
            "line": 112,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 643544000,
              "error_message": "java.lang.AssertionError: Contact list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.contact.ContactCreateSteps.i_have_ensured_that_the_contact_i_want_to_edit_already_exist(ContactCreateSteps.java:140)\r\n\tat ✽.And I have ensured that the contact \"Justice League\" already exist(accountMenuTasks.feature:113)\r\n",
              "status": "failed"
            },
            "line": 113,
            "name": "I have ensured that the contact \"Justice League\" already exist",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 33
                }
              ],
              "location": "ContactCreateSteps.i_have_ensured_that_the_contact_i_want_to_edit_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 114,
            "name": "I am on the contact edit page of \"Justice League\"",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 34
                }
              ],
              "location": "ContactEditSteps.i_am_on_the_contact_edit_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 115,
            "name": "I edit the task \"Flash anwerben\"",
            "match": {
              "arguments": [
                {
                  "val": "Flash anwerben",
                  "offset": 17
                }
              ],
              "location": "TaskEditSteps.i_edit_the_task(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "type",
                  "Wiedervorlage"
                ],
                "line": 116
              },
              {
                "cells": [
                  "priority",
                  "mittel"
                ],
                "line": 117
              },
              {
                "cells": [
                  "reminder",
                  "wöchentlich"
                ],
                "line": 118
              },
              {
                "cells": [
                  "startdate",
                  "02.03.2017"
                ],
                "line": 119
              },
              {
                "cells": [
                  "enddate",
                  "03.04.2017"
                ],
                "line": 120
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 121,
            "name": "the task details of \"Flash anwerben\" are",
            "match": {
              "arguments": [
                {
                  "val": "Flash anwerben",
                  "offset": 21
                }
              ],
              "location": "TaskEditSteps.the_task_details_are(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "type",
                  "Wiedervorlage"
                ],
                "line": 122
              },
              {
                "cells": [
                  "priority",
                  "mittel"
                ],
                "line": 123
              },
              {
                "cells": [
                  "reminder",
                  "wöchentlich"
                ],
                "line": 124
              },
              {
                "cells": [
                  "startdate",
                  "02.03.2017"
                ],
                "line": 125
              },
              {
                "cells": [
                  "enddate",
                  "03.04.2017"
                ],
                "line": 126
              }
            ],
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 9430768600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 128,
        "name": "Delete Task",
        "description": "",
        "id": "[qa]-aufgaben;delete-task",
        "after": [
          {
            "result": {
              "duration": 84893800,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9220144200,
              "status": "passed"
            },
            "line": 129,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 772480900,
              "error_message": "java.lang.AssertionError: Contact list page is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.contact.ContactCreateSteps.i_have_ensured_that_the_contact_i_want_to_edit_already_exist(ContactCreateSteps.java:140)\r\n\tat ✽.And I have ensured that the contact \"Justice League\" already exist(accountMenuTasks.feature:130)\r\n",
              "status": "failed"
            },
            "line": 130,
            "name": "I have ensured that the contact \"Justice League\" already exist",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 33
                }
              ],
              "location": "ContactCreateSteps.i_have_ensured_that_the_contact_i_want_to_edit_already_exist(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 131,
            "name": "I am on the contact edit page of \"Justice League\"",
            "match": {
              "arguments": [
                {
                  "val": "Justice League",
                  "offset": 34
                }
              ],
              "location": "ContactEditSteps.i_am_on_the_contact_edit_page_of(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 132,
            "name": "I delete the task \"Flash anwerben\"",
            "match": {
              "arguments": [
                {
                  "val": "Flash anwerben",
                  "offset": 19
                }
              ],
              "location": "TaskCreateSteps.i_delete_the_task(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 133,
            "name": "the task \"Flash anwerben\" is deleted",
            "match": {
              "arguments": [
                {
                  "val": "Flash anwerben",
                  "offset": 10
                }
              ],
              "location": "TaskCreateSteps.the_task_is_deleted(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "[QA] Aufgaben",
    "description": "Als B4U-Nutzer möchte ich unter dem Menüpunkt \"Aufgaben\" eine Suchmaske mit verschiedenen Suchattributen sehen,\r\ndamit ich die gesuchte Aufgabe schneller finden kann",
    "id": "[qa]-aufgaben",
    "keyword": "Feature",
    "uri": "accountMenuTasks.feature"
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1105"
      }
    ],
    "line": 3,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 12349417300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 8,
        "name": "Check elements profile personal data",
        "description": "",
        "id": "[qa]-profil:-persönliche-daten;check-elements-profile-personal-data",
        "after": [
          {
            "result": {
              "duration": 70175100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8388172400,
              "status": "passed"
            },
            "line": 9,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2424643800,
              "status": "passed"
            },
            "line": 10,
            "name": "I select the menu entry \"topBannerView.loggedInPerson\"",
            "match": {
              "arguments": [
                {
                  "val": "topBannerView.loggedInPerson",
                  "offset": 25
                }
              ],
              "location": "MenuSteps.i_select_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1330941500,
              "status": "passed"
            },
            "line": 11,
            "name": "I click on the button \"personDetailsFormView.edit\"",
            "match": {
              "arguments": [
                {
                  "val": "personDetailsFormView.edit",
                  "offset": 23
                }
              ],
              "location": "BaseSteps.i_click_on_the_button(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1389260900,
              "error_message": "java.lang.AssertionError: personDetailsFormView.url is displayed\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.assertTrue(Assert.java:41)\r\n\tat de.neusta.b4u.steps.BaseSteps.all_the_elements_looked_for_are_being_displayed(BaseSteps.java:66)\r\n\tat ✽.Then all the elements looked for are being displayed(accountProfilePersonalData.feature:12)\r\n",
              "status": "failed"
            },
            "line": 12,
            "name": "all the elements looked for are being displayed",
            "match": {
              "location": "BaseSteps.all_the_elements_looked_for_are_being_displayed(DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Anrede",
                  "personDetailsFormView.salutationTypes"
                ],
                "line": 13
              },
              {
                "cells": [
                  "Titel",
                  "personDetailsFormView.titles"
                ],
                "line": 14
              },
              {
                "cells": [
                  "Vorname",
                  "personDetailsFormView.firstName"
                ],
                "line": 15
              },
              {
                "cells": [
                  "Nachname",
                  "personDetailsFormView.lastName"
                ],
                "line": 16
              },
              {
                "cells": [
                  "Position",
                  "personDetailsFormView.position"
                ],
                "line": 17
              },
              {
                "cells": [
                  "Abteilung",
                  "personDetailsFormView.department"
                ],
                "line": 18
              },
              {
                "cells": [
                  "Firma",
                  "personDetailsFormView.selectedCompany"
                ],
                "line": 19
              },
              {
                "comments": [
                  {
                    "line": 20,
                    "value": "#| Location Liste                | personDetailsFormView.locationList                    |"
                  }
                ],
                "cells": [
                  "Neue Location hinzufügen",
                  "personDetailsFormView.addWithCompany"
                ],
                "line": 21
              },
              {
                "cells": [
                  "Neuer Email Adresstyp",
                  "emailAdressFormView.emailAddress[0].emailAddressTypes"
                ],
                "line": 22
              },
              {
                "cells": [
                  "Neue Email Adresse",
                  "emailAdressFormView.emailAddress[0].address"
                ],
                "line": 23
              },
              {
                "cells": [
                  "Neue Email Adresse hinzufügen",
                  "newEmailAddressFormView.add"
                ],
                "line": 24
              },
              {
                "cells": [
                  "Website URL",
                  "personDetailsFormView.url"
                ],
                "line": 25
              },
              {
                "cells": [
                  "Geburtsdatum",
                  "personDetailsFormView.birthdate"
                ],
                "line": 26
              },
              {
                "cells": [
                  "Nationalität",
                  "personDetailsFormView.nationality"
                ],
                "line": 27
              },
              {
                "cells": [
                  "Hochladen",
                  "fileUploaderView.upload"
                ],
                "line": 28
              },
              {
                "cells": [
                  "VCard export",
                  "personDetailsFormView.exportVCard"
                ],
                "line": 29
              },
              {
                "cells": [
                  "Speichern",
                  "personDetailsFormView.update"
                ],
                "line": 30
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 7,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3358903100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 33,
        "name": "Check dropdown salutation types",
        "description": "",
        "id": "[qa]-profil:-persönliche-daten;check-dropdown-salutation-types",
        "after": [
          {
            "result": {
              "duration": 164179200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8238981000,
              "status": "passed"
            },
            "line": 34,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4267753600,
              "status": "passed"
            },
            "line": 35,
            "name": "I select the menu entry \"topBannerView.loggedInPerson\"",
            "match": {
              "arguments": [
                {
                  "val": "topBannerView.loggedInPerson",
                  "offset": 25
                }
              ],
              "location": "MenuSteps.i_select_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1472495000,
              "status": "passed"
            },
            "line": 36,
            "name": "I click on the button \"personDetailsFormView.edit\"",
            "match": {
              "arguments": [
                {
                  "val": "personDetailsFormView.edit",
                  "offset": 23
                }
              ],
              "location": "BaseSteps.i_click_on_the_button(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 775735200,
              "status": "passed"
            },
            "line": 37,
            "name": "the dropdown menu \"personDetailsFormView.salutationTypes\" contains the following items",
            "match": {
              "arguments": [
                {
                  "val": "personDetailsFormView.salutationTypes",
                  "offset": 19
                }
              ],
              "location": "BaseSteps.the_dropdown_menu_contains_the_following_items(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Herr"
                ],
                "line": 38
              },
              {
                "cells": [
                  "Frau"
                ],
                "line": 39
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 32,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15262959500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 42,
        "name": "Check dropdown titles",
        "description": "",
        "id": "[qa]-profil:-persönliche-daten;check-dropdown-titles",
        "after": [
          {
            "result": {
              "duration": 113018500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7888949200,
              "status": "passed"
            },
            "line": 43,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3874200900,
              "status": "passed"
            },
            "line": 44,
            "name": "I select the menu entry \"topBannerView.loggedInPerson\"",
            "match": {
              "arguments": [
                {
                  "val": "topBannerView.loggedInPerson",
                  "offset": 25
                }
              ],
              "location": "MenuSteps.i_select_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1178321900,
              "status": "passed"
            },
            "line": 45,
            "name": "I click on the button \"personDetailsFormView.edit\"",
            "match": {
              "arguments": [
                {
                  "val": "personDetailsFormView.edit",
                  "offset": 23
                }
              ],
              "location": "BaseSteps.i_click_on_the_button(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 714655800,
              "status": "passed"
            },
            "line": 46,
            "name": "the dropdown menu \"personDetailsFormView.titles\" contains the following items",
            "match": {
              "arguments": [
                {
                  "val": "personDetailsFormView.titles",
                  "offset": 19
                }
              ],
              "location": "BaseSteps.the_dropdown_menu_contains_the_following_items(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Ohne"
                ],
                "line": 47
              },
              {
                "cells": [
                  "Dr."
                ],
                "line": 48
              },
              {
                "cells": [
                  "Prof. Dr."
                ],
                "line": 49
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 41,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3574955300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 52,
        "name": "Check dropdown email address types",
        "description": "",
        "id": "[qa]-profil:-persönliche-daten;check-dropdown-email-address-types",
        "after": [
          {
            "result": {
              "duration": 113149000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8563918300,
              "status": "passed"
            },
            "line": 53,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3823762800,
              "status": "passed"
            },
            "line": 54,
            "name": "I select the menu entry \"topBannerView.loggedInPerson\"",
            "match": {
              "arguments": [
                {
                  "val": "topBannerView.loggedInPerson",
                  "offset": 25
                }
              ],
              "location": "MenuSteps.i_select_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1282229200,
              "status": "passed"
            },
            "line": 55,
            "name": "I click on the button \"personDetailsFormView.edit\"",
            "match": {
              "arguments": [
                {
                  "val": "personDetailsFormView.edit",
                  "offset": 23
                }
              ],
              "location": "BaseSteps.i_click_on_the_button(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 706162000,
              "status": "passed"
            },
            "line": 56,
            "name": "the dropdown menu \"emailAdressFormView.emailAddress[0].emailAddressTypes\" contains the following items",
            "match": {
              "arguments": [
                {
                  "val": "emailAdressFormView.emailAddress[0].emailAddressTypes",
                  "offset": 19
                }
              ],
              "location": "BaseSteps.the_dropdown_menu_contains_the_following_items(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Geschäftlich"
                ],
                "line": 57
              },
              {
                "cells": [
                  "Privat"
                ],
                "line": 58
              },
              {
                "cells": [
                  "Andere"
                ],
                "line": 59
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 51,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10523357300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 62,
        "name": "Check dropdown phone types",
        "description": "",
        "id": "[qa]-profil:-persönliche-daten;check-dropdown-phone-types",
        "after": [
          {
            "result": {
              "duration": 62372400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9968150800,
              "status": "passed"
            },
            "line": 63,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4131988500,
              "status": "passed"
            },
            "line": 64,
            "name": "I select the menu entry \"topBannerView.loggedInPerson\"",
            "match": {
              "arguments": [
                {
                  "val": "topBannerView.loggedInPerson",
                  "offset": 25
                }
              ],
              "location": "MenuSteps.i_select_the_menu_entry(String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 1214386900,
              "status": "passed"
            },
            "line": 65,
            "name": "I click on the button \"personDetailsFormView.edit\"",
            "match": {
              "arguments": [
                {
                  "val": "personDetailsFormView.edit",
                  "offset": 23
                }
              ],
              "location": "BaseSteps.i_click_on_the_button(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1037513900,
              "error_message": "org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"id\",\"selector\":\"phoneFormView.phone[0].phoneTypes\"}\n  (Session info: chrome\u003d72.0.3626.81)\n  (Driver info: chromedriver\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926),platform\u003dLinux 4.9.125-linuxkit x86_64) (WARNING: The server did not provide any stacktrace information)\nCommand duration or timeout: 1.04 seconds\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.0.1\u0027, revision: \u00271969d75\u0027, time: \u00272016-10-18 09:49:13 -0700\u0027\nSystem info: host: \u0027DESKTOP-IN4UB21\u0027, ip: \u002710.0.75.1\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_201\u0027\nDriver info: org.openqa.selenium.remote.RemoteWebDriver\nCapabilities [{mobileEmulationEnabled\u003dfalse, timeouts\u003d{implicit\u003d0, pageLoad\u003d300000, script\u003d30000}, hasTouchScreen\u003dfalse, platform\u003dLINUX, acceptSslCerts\u003dfalse, goog:chromeOptions\u003d{debuggerAddress\u003dlocalhost:38971}, acceptInsecureCerts\u003dfalse, webStorageEnabled\u003dtrue, browserName\u003dchrome, takesScreenshot\u003dtrue, javascriptEnabled\u003dtrue, setWindowRect\u003dtrue, unexpectedAlertBehaviour\u003dignore, applicationCacheEnabled\u003dfalse, rotatable\u003dfalse, networkConnectionEnabled\u003dfalse, chrome\u003d{chromedriverVersion\u003d2.46.628388 (4a34a70827ac54148e092aafb70504c4ea7ae926), userDataDir\u003d/tmp/.org.chromium.Chromium.SEFVtd}, takesHeapSnapshot\u003dtrue, pageLoadStrategy\u003dnormal, strictFileInteractability\u003dfalse, databaseEnabled\u003dfalse, handlesAlerts\u003dtrue, version\u003d72.0.3626.81, browserConnectionEnabled\u003dfalse, proxy\u003d{}, nativeEvents\u003dtrue, webdriver.remote.sessionid\u003de6488b2e95470f5394c1f9df22bccd0e, locationContextEnabled\u003dtrue, cssSelectorsEnabled\u003dtrue}]\nSession ID: e6488b2e95470f5394c1f9df22bccd0e\n*** Element info: {Using\u003did, value\u003dphoneFormView.phone[0].phoneTypes}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:216)\r\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:168)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:635)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:368)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:417)\r\n\tat org.openqa.selenium.By$ById.findElement(By.java:218)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)\r\n\tat de.neusta.b4u.steps.BaseSteps.the_dropdown_menu_contains_the_following_items(BaseSteps.java:72)\r\n\tat ✽.Then the dropdown menu \"phoneFormView.phone[0].phoneTypes\" contains the following items(accountProfilePersonalData.feature:66)\r\n",
              "status": "failed"
            },
            "line": 66,
            "name": "the dropdown menu \"phoneFormView.phone[0].phoneTypes\" contains the following items",
            "match": {
              "arguments": [
                {
                  "val": "phoneFormView.phone[0].phoneTypes",
                  "offset": 19
                }
              ],
              "location": "BaseSteps.the_dropdown_menu_contains_the_following_items(String,DataTable)"
            },
            "rows": [
              {
                "cells": [
                  "Geschäftlich"
                ],
                "line": 67
              },
              {
                "cells": [
                  "Mobil"
                ],
                "line": 68
              },
              {
                "cells": [
                  "Privat"
                ],
                "line": 69
              },
              {
                "cells": [
                  "Fax"
                ],
                "line": 70
              },
              {
                "cells": [
                  "Andere"
                ],
                "line": 71
              },
              {
                "cells": [
                  "Homeoffice"
                ],
                "line": 72
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 61,
            "name": "@ugly"
          }
        ]
      }
    ],
    "name": "[QA] Profil: Persönliche Daten",
    "description": "Als B4U-Nutzer möchte ich in einem Profil in dem Bereich Persönliche Daten verschiedene Attributfelder sehen,\r\ndamit ich das die persönlichen Daten differenzierter beschreiben kann",
    "id": "[qa]-profil:-persönliche-daten",
    "keyword": "Feature",
    "uri": "accountProfilePersonalData.feature"
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Akzeptanzkriterien siehe https://portal.neusta.de/jira/browse/BFY-1040"
      }
    ],
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 3417980400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 12,
        "name": "Ensure that all necessary login fields are displayed",
        "description": "",
        "id": "[qa]-login;ensure-that-all-necessary-login-fields-are-displayed;;2",
        "after": [
          {
            "result": {
              "duration": 113811400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6609394700,
              "status": "passed"
            },
            "line": 7,
            "name": "I am on the login page",
            "match": {
              "location": "LoginSteps.i_am_on_the_login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 35412900,
              "status": "passed"
            },
            "line": 8,
            "name": "I look for the element \"loginView.userName\"",
            "match": {
              "arguments": [
                {
                  "val": "loginView.userName",
                  "offset": 24
                }
              ],
              "location": "BaseSteps.i_look_for_the_element(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 40600,
              "status": "passed"
            },
            "line": 9,
            "name": "the element looked for is being displayed",
            "match": {
              "location": "BaseSteps.the_element_looked_for_is_being_displayed()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 12029944600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 13,
        "name": "Ensure that all necessary login fields are displayed",
        "description": "",
        "id": "[qa]-login;ensure-that-all-necessary-login-fields-are-displayed;;3",
        "after": [
          {
            "result": {
              "duration": 119251000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7090518500,
              "status": "passed"
            },
            "line": 7,
            "name": "I am on the login page",
            "match": {
              "location": "LoginSteps.i_am_on_the_login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 213646000,
              "status": "passed"
            },
            "line": 8,
            "name": "I look for the element \"loginView.password\"",
            "match": {
              "arguments": [
                {
                  "val": "loginView.password",
                  "offset": 24
                }
              ],
              "location": "BaseSteps.i_look_for_the_element(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 30400,
              "status": "passed"
            },
            "line": 9,
            "name": "the element looked for is being displayed",
            "match": {
              "location": "BaseSteps.the_element_looked_for_is_being_displayed()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 6928373500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 14,
        "name": "Ensure that all necessary login fields are displayed",
        "description": "",
        "id": "[qa]-login;ensure-that-all-necessary-login-fields-are-displayed;;4",
        "after": [
          {
            "result": {
              "duration": 113242200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6751723600,
              "status": "passed"
            },
            "line": 7,
            "name": "I am on the login page",
            "match": {
              "location": "LoginSteps.i_am_on_the_login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 105245000,
              "status": "passed"
            },
            "line": 8,
            "name": "I look for the element \"loginView.login\"",
            "match": {
              "arguments": [
                {
                  "val": "loginView.login",
                  "offset": 24
                }
              ],
              "location": "BaseSteps.i_look_for_the_element(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 32000,
              "status": "passed"
            },
            "line": 9,
            "name": "the element looked for is being displayed",
            "match": {
              "location": "BaseSteps.the_element_looked_for_is_being_displayed()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 5,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 5203643200,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 16,
        "name": "Login success [standard user]",
        "description": "",
        "id": "[qa]-login;login-success-[standard-user]",
        "after": [
          {
            "result": {
              "duration": 130874900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6900430300,
              "status": "passed"
            },
            "line": 17,
            "name": "I am on the login page",
            "match": {
              "location": "LoginSteps.i_am_on_the_login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1189957900,
              "status": "passed"
            },
            "line": 18,
            "name": "I provide the standard user credentials",
            "match": {
              "location": "LoginSteps.i_provide_the_standard_user_credentials()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1768963900,
              "status": "passed"
            },
            "line": 19,
            "name": "I login",
            "match": {
              "location": "LoginSteps.i_login()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 66148900,
              "status": "passed"
            },
            "line": 20,
            "name": "the account page is being displayed",
            "match": {
              "location": "LoginSteps.the_account_page_is_being_displayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16321478500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 22,
        "name": "Login success [admin user]",
        "description": "",
        "id": "[qa]-login;login-success-[admin-user]",
        "after": [
          {
            "result": {
              "duration": 70692100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6832298900,
              "status": "passed"
            },
            "line": 23,
            "name": "I am on the login page",
            "match": {
              "location": "LoginSteps.i_am_on_the_login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1082660500,
              "status": "passed"
            },
            "line": 24,
            "name": "I provide the admin user credentials",
            "match": {
              "location": "LoginSteps.i_provide_the_admin_user_credentials()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2754655000,
              "status": "passed"
            },
            "line": 25,
            "name": "I login",
            "match": {
              "location": "LoginSteps.i_login()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 58610800,
              "status": "passed"
            },
            "line": 26,
            "name": "the account page is being displayed",
            "match": {
              "location": "LoginSteps.the_account_page_is_being_displayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 5076835100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 28,
        "name": "Login failure wrong username [standard user]",
        "description": "",
        "id": "[qa]-login;login-failure-wrong-username-[standard-user]",
        "after": [
          {
            "result": {
              "duration": 120505700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6241416800,
              "status": "passed"
            },
            "line": 29,
            "name": "I am on the login page",
            "match": {
              "location": "LoginSteps.i_am_on_the_login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 820945700,
              "status": "passed"
            },
            "line": 30,
            "name": "I provide the standard user credentials",
            "match": {
              "location": "LoginSteps.i_provide_the_standard_user_credentials()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 461616900,
              "status": "passed"
            },
            "line": 31,
            "name": "I provide an invalid username",
            "match": {
              "location": "LoginSteps.i_provide_an_invalid_username()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1027920900,
              "status": "passed"
            },
            "line": 32,
            "name": "I login",
            "match": {
              "location": "LoginSteps.i_login()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 31370600,
              "status": "passed"
            },
            "line": 33,
            "name": "an error message is being displayed \"is-error\"",
            "match": {
              "arguments": [
                {
                  "val": "is-error",
                  "offset": 37
                }
              ],
              "location": "BaseSteps.an_error_message_is_being_displayed(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 15908336400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 35,
        "name": "Login failure wrong username [admin user]",
        "description": "",
        "id": "[qa]-login;login-failure-wrong-username-[admin-user]",
        "after": [
          {
            "result": {
              "duration": 59373400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6054702400,
              "status": "passed"
            },
            "line": 36,
            "name": "I am on the login page",
            "match": {
              "location": "LoginSteps.i_am_on_the_login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 679107400,
              "status": "passed"
            },
            "line": 37,
            "name": "I provide the admin user credentials",
            "match": {
              "location": "LoginSteps.i_provide_the_admin_user_credentials()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 442773000,
              "status": "passed"
            },
            "line": 38,
            "name": "I provide an invalid username",
            "match": {
              "location": "LoginSteps.i_provide_an_invalid_username()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1005600300,
              "status": "passed"
            },
            "line": 39,
            "name": "I login",
            "match": {
              "location": "LoginSteps.i_login()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 25871500,
              "status": "passed"
            },
            "line": 40,
            "name": "an error message is being displayed \"is-error\"",
            "match": {
              "arguments": [
                {
                  "val": "is-error",
                  "offset": 37
                }
              ],
              "location": "BaseSteps.an_error_message_is_being_displayed(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 16775297800,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 42,
        "name": "Login failure wrong password [standard user]",
        "description": "",
        "id": "[qa]-login;login-failure-wrong-password-[standard-user]",
        "after": [
          {
            "result": {
              "duration": 125836700,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7006626900,
              "status": "passed"
            },
            "line": 43,
            "name": "I am on the login page",
            "match": {
              "location": "LoginSteps.i_am_on_the_login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 847737100,
              "status": "passed"
            },
            "line": 44,
            "name": "I provide the standard user credentials",
            "match": {
              "location": "LoginSteps.i_provide_the_standard_user_credentials()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 509756800,
              "status": "passed"
            },
            "line": 45,
            "name": "I provide an invalid password",
            "match": {
              "location": "LoginSteps.i_provide_an_invalid_password()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1011570500,
              "status": "passed"
            },
            "line": 46,
            "name": "I login",
            "match": {
              "location": "LoginSteps.i_login()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 39052200,
              "status": "passed"
            },
            "line": 47,
            "name": "an error message is being displayed \"is-error\"",
            "match": {
              "arguments": [
                {
                  "val": "is-error",
                  "offset": 37
                }
              ],
              "location": "BaseSteps.an_error_message_is_being_displayed(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3903672500,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 49,
        "name": "Login failure wrong password [admin user]",
        "description": "",
        "id": "[qa]-login;login-failure-wrong-password-[admin-user]",
        "after": [
          {
            "result": {
              "duration": 115115100,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5871465500,
              "status": "passed"
            },
            "line": 50,
            "name": "I am on the login page",
            "match": {
              "location": "LoginSteps.i_am_on_the_login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 650908000,
              "status": "passed"
            },
            "line": 51,
            "name": "I provide the admin user credentials",
            "match": {
              "location": "LoginSteps.i_provide_the_admin_user_credentials()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 573000500,
              "status": "passed"
            },
            "line": 52,
            "name": "I provide an invalid password",
            "match": {
              "location": "LoginSteps.i_provide_an_invalid_password()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1005938600,
              "status": "passed"
            },
            "line": 53,
            "name": "I login",
            "match": {
              "location": "LoginSteps.i_login()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 56996400,
              "status": "passed"
            },
            "line": 54,
            "name": "an error message is being displayed \"is-error\"",
            "match": {
              "arguments": [
                {
                  "val": "is-error",
                  "offset": 37
                }
              ],
              "location": "BaseSteps.an_error_message_is_being_displayed(String)"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 5942140000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 56,
        "name": "Login failure wrong username wrong password",
        "description": "",
        "id": "[qa]-login;login-failure-wrong-username-wrong-password",
        "after": [
          {
            "result": {
              "duration": 128843300,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6735033900,
              "status": "passed"
            },
            "line": 57,
            "name": "I am on the login page",
            "match": {
              "location": "LoginSteps.i_am_on_the_login_page()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 822144800,
              "status": "passed"
            },
            "line": 58,
            "name": "I provide an invalid username",
            "match": {
              "location": "LoginSteps.i_provide_an_invalid_username()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 476375200,
              "status": "passed"
            },
            "line": 59,
            "name": "I provide an invalid password",
            "match": {
              "location": "LoginSteps.i_provide_an_invalid_password()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1013587600,
              "status": "passed"
            },
            "line": 60,
            "name": "I login",
            "match": {
              "location": "LoginSteps.i_login()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 34737200,
              "status": "passed"
            },
            "line": 61,
            "name": "an error message is being displayed \"is-error\"",
            "match": {
              "arguments": [
                {
                  "val": "is-error",
                  "offset": 37
                }
              ],
              "location": "BaseSteps.an_error_message_is_being_displayed(String)"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "[QA] Login",
    "description": "Als B4U-Nutzer möchte ich mich in meinen B4U-Account einloggen können, damit ich mit meinem B4U-Account arbeiten kann",
    "id": "[qa]-login",
    "keyword": "Feature",
    "uri": "login.feature"
  },
  {
    "comments": [
      {
        "line": 1,
        "value": "# Acceptance criteria see https://portal.neusta.de/jira/browse/BFY-1042"
      }
    ],
    "line": 2,
    "elements": [
      {
        "before": [
          {
            "result": {
              "duration": 14686920000,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 13,
        "name": "Ensure that the logout button is displayed",
        "description": "",
        "id": "[qa]-logout;ensure-that-the-logout-button-is-displayed;;2",
        "after": [
          {
            "result": {
              "duration": 64889400,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7873656900,
              "status": "passed"
            },
            "line": 8,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 32810000,
              "status": "passed"
            },
            "line": 9,
            "name": "I look for the element \"topBannerView.logout\"",
            "match": {
              "arguments": [
                {
                  "val": "topBannerView.logout",
                  "offset": 24
                }
              ],
              "location": "BaseSteps.i_look_for_the_element(String)"
            },
            "matchedColumns": [
              1
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 23800,
              "status": "passed"
            },
            "line": 10,
            "name": "the element looked for is being displayed",
            "match": {
              "location": "BaseSteps.the_element_looked_for_is_being_displayed()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "line": 6,
            "name": "@ugly"
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 3106120800,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 15,
        "name": "logout success [standard user]",
        "description": "",
        "id": "[qa]-logout;logout-success-[standard-user]",
        "after": [
          {
            "result": {
              "duration": 64633600,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 9769223200,
              "status": "passed"
            },
            "line": 16,
            "name": "I have logged into my account as standard user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_standard_user()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 139506700,
              "status": "passed"
            },
            "line": 17,
            "name": "I logout",
            "match": {
              "location": "LoginSteps.i_logout()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 191652800,
              "status": "passed"
            },
            "line": 18,
            "name": "the login page is being displayed",
            "match": {
              "location": "LoginSteps.the_login_page_is_being_displayed()"
            },
            "keyword": "Then "
          }
        ]
      },
      {
        "before": [
          {
            "result": {
              "duration": 10668994900,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.setUp()"
            }
          }
        ],
        "line": 20,
        "name": "logout success [admin user]",
        "description": "",
        "id": "[qa]-logout;logout-success-[admin-user]",
        "after": [
          {
            "result": {
              "duration": 114152800,
              "status": "passed"
            },
            "match": {
              "location": "BaseSteps.tearDown()"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7955288099,
              "status": "passed"
            },
            "line": 21,
            "name": "I have logged into my account as admin user",
            "match": {
              "location": "LoginSteps.i_have_logged_into_my_account_as_admin()"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 121276300,
              "status": "passed"
            },
            "line": 22,
            "name": "I logout",
            "match": {
              "location": "LoginSteps.i_logout()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 103411300,
              "status": "passed"
            },
            "line": 23,
            "name": "the login page is being displayed",
            "match": {
              "location": "LoginSteps.the_login_page_is_being_displayed()"
            },
            "keyword": "Then "
          }
        ]
      }
    ],
    "name": "[QA] Logout",
    "description": "Als B4U-Nutzer möchte ich mich aus meinem B4U-Account wieder ausloggen können,\r\ndamit mein Account geschützt ist, wenn ich nicht mehr damit arbeite",
    "id": "[qa]-logout",
    "keyword": "Feature",
    "uri": "logout.feature"
  }
]